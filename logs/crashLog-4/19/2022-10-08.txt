Running with debug mode turned ON...

Version Info:
 - Java version (1.8.0_144)
 - Slay the Spire (03-07-2022)
 - ModTheSpire (3.26.0)
Mod list:
 - basemod (5.39.0)
 - stslib (2.2.0)
 - aspiration (1.9.4)
 - betterAltar (1.4)
 - betterLab (1.0)
 - betterMatch (1.1)
 - betterNote (1.3)
 - betterStone (1.1)
 - betterSkull (1.2)
 - betterThird (1.5)
 - Better_Vampires (1.0.0)
 - coloredmap (2.4.1)
 - coloredpowertips (2.3.0)
 - conspire (1.7.0)
 - hubris (0.24.8)
 - RelicStats (1.2.2)
 - spicyShops (1.2.4)
 - uncapped (1.1.1)
 - downfall (4.1.12)
 - thelatent (0.0.1)

Begin patching...
Patching enums...Done.
Finding core patches...
Finding patches...
Patching Overrides...
Class: [com.evacipated.cardcrawl.mod.hubris.rewards.LinkedRewardItem]
 - Overriding [com.megacrit.cardcrawl.rewards.RewardItem.renderRelicLink(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass RewardItem...
        @ 608
      Replacing SpireSuper calls...
        @ 165
 { super.renderRelicLink(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [com.evacipated.cardcrawl.mod.hubris.cards.DuctTapeCard]
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderPortrait(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractCard...
        @ 1555
      Replacing SpireSuper calls...
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderCardBg(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
      Fixing invocations in superclass AbstractCard...
        @ 1550
      Replacing SpireSuper calls...
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderPortraitFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
      Fixing invocations in superclass AbstractCard...
        @ 1558
      Replacing SpireSuper calls...
Class: [com.evacipated.cardcrawl.mod.hubris.monsters.GrandMystic]
 - Overriding [com.megacrit.cardcrawl.monsters.city.Healer.playSfx()]
      Fixing invocations in superclass Healer...
        @ 79
        @ 91
        @ 101
      Replacing SpireSuper calls...
        @ 66
 { super.playSfx();
$_ = null; }
Class: [guardian.ui.RelicPreviewButton]
 - Overriding [com.megacrit.cardcrawl.ui.buttons.LargeDialogOptionButton.hoverAndClickLogic()]
      Fixing invocations in superclass LargeDialogOptionButton...
        @ 124
      Replacing SpireSuper calls...
Class: [charbosses.monsters.MirrorImageSilent]
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 934
      Replacing SpireSuper calls...
        @ 113
 { super.renderName(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [downfall.patches.MainMenuEvilMode$EvilMainMenuPanelButton]
 - Overriding [com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton.setLabel()]
      Fixing invocations in superclass MainMenuPanelButton...
        @ 49
      Replacing SpireSuper calls...
        @ 128
 { super.setLabel();
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton.buttonEffect()]
      Fixing invocations in superclass MainMenuPanelButton...
        @ 173
      Replacing SpireSuper calls...
        @ 138
 { super.buttonEffect();
$_ = null; }
Class: [downfall.monsters.NeowBossFinal]
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
      Replacing SpireSuper calls...
        @ 290
 { super.renderName(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerIcons(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
      Fixing invocations in superclass AbstractCreature...
        @ 1041
      Replacing SpireSuper calls...
        @ 297
 { super.renderPowerIcons(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]), ((Float) $1[1]).floatValue(), ((Float) $1[2]).floatValue());
$_ = null; }
Class: [charbosses.bosses.Silent.CharBossSilent]
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
      Replacing SpireSuper calls...
        @ 154
 { super.renderName(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [automaton.cards.FunctionCard]
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderBannerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
      Fixing invocations in superclass AbstractCard...
        @ 1559
      Replacing SpireSuper calls...
        @ 93
 { super.renderBannerImage(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]), ((Float) $1[1]).floatValue(), ((Float) $1[2]).floatValue());
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderPortrait(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractCard...
      Replacing SpireSuper calls...
Class: [basemod.abstracts.CustomPlayer]
 - Overriding [com.megacrit.cardcrawl.characters.AbstractPlayer.updateEscapeAnimation()]
      Fixing invocations in superclass AbstractPlayer...
        @ 523
      Replacing SpireSuper calls...
        @ 322
 { super.updateEscapeAnimation();
$_ = null; }
Class: [basemod.abstracts.CustomMonster]
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderDamageRange(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 923
      Replacing SpireSuper calls...
        @ 116
 { super.renderDamageRange(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntentVfxBehind(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 920
      Replacing SpireSuper calls...
        @ 122
 { super.renderIntentVfxBehind(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntent(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 921
      Replacing SpireSuper calls...
        @ 128
 { super.renderIntent(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntentVfxAfter(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 922
      Replacing SpireSuper calls...
        @ 134
 { super.renderIntentVfxAfter(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
      Replacing SpireSuper calls...
        @ 140
 { super.renderName(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [basemod.abstracts.CustomCard]
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractCard...
        @ 1249
        @ 1299
      Replacing SpireSuper calls...
        @ 443
 { super.renderTitle(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
        @ 451
 { super.renderTitle(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [aspiration.ui.events.RelicPreviewEventButton]
 - Overriding [com.megacrit.cardcrawl.ui.buttons.LargeDialogOptionButton.hoverAndClickLogic()]
      Fixing invocations in superclass LargeDialogOptionButton...
      Replacing SpireSuper calls...
Injecting patches...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.util.ArrayList cardModifiers_790;
{
cardModifiers = new basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields$cardModifiers_790_Accessor(cardModifiers);cardModifiers.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "cardModifiers_790");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper]
 - Adding Field: public static java.lang.Float isScrolling_510;
{
isScrolling = new basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling$isScrolling_510_Accessor(isScrolling);isScrolling.initialize(com.megacrit.cardcrawl.helpers.TipHelper.class, "isScrolling_510");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$DynamicTextField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean isDynamic_170;
{
isDynamic = new basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$DynamicTextField$isDynamic_170_Accessor(isDynamic);isDynamic.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "isDynamic_170");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Float descriptionScale_331;
{
descriptionScale = new basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale$descriptionScale_331_Accessor(descriptionScale);descriptionScale.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "descriptionScale_331");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen]
 - Adding Field: public java.lang.Boolean forCustomReward_967;
{
forCustomReward = new basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$forCustomReward_967_Accessor(forCustomReward);forCustomReward.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "forCustomReward_967");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$GridCallback customCallback_523;
{
customCallback = new basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$customCallback_523_Accessor(customCallback);customCallback.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "customCallback_523");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ExhaustViewFixField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean exhaustViewCopy_286;
{
exhaustViewCopy = new basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ExhaustViewFixField$exhaustViewCopy_286_Accessor(exhaustViewCopy);exhaustViewCopy.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "exhaustViewCopy_286");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer]
 - Adding Field: public java.util.HashSet seenEvents_931;
{
seenEvents = new basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents$seenEvents_931_Accessor(seenEvents);seenEvents.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "seenEvents_931");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile]
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$HashMapOfJsonElement modSaves_173;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_saves")
{
modSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modSaves_173_Accessor(modSaves);modSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modSaves_173");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modCardSaves_398;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_card_saves")
{
modCardSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modCardSaves_398_Accessor(modCardSaves);modCardSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modCardSaves_398");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modRelicSaves_271;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_relic_saves")
{
modRelicSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modRelicSaves_271_Accessor(modRelicSaves);modRelicSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modRelicSaves_271");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modPotionSaves_329;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_potion_saves")
{
modPotionSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modPotionSaves_329_Accessor(modPotionSaves);modPotionSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modPotionSaves_329");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement cardModifierSaves_399;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:abstract_card_modifiers_save")
{
cardModifierSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$cardModifierSaves_399_Accessor(cardModifierSaves);cardModifierSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "cardModifierSaves_399");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfString eventSaves_791;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:event_saves")
{
eventSaves = new basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$eventSaves_791_Accessor(eventSaves);eventSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "eventSaves_791");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile]
 - Adding Field: public java.lang.Integer maxHandSize_940;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:max_hand_size")
{
maxHandSize = new basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField$maxHandSize_940_Accessor(maxHandSize);maxHandSize.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "maxHandSize_940");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick]
 - Patching [com.megacrit.cardcrawl.helpers.Hitbox]
 - Adding Field: public java.lang.Boolean rightClicked_734;
{
rightClicked = new com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$rightClicked_734_Accessor(rightClicked);rightClicked.initialize(com.megacrit.cardcrawl.helpers.Hitbox.class, "rightClicked_734");
}
 - Adding Field: public java.lang.Boolean rightClickStarted_479;
{
rightClickStarted = new com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$rightClickStarted_479_Accessor(rightClickStarted);rightClickStarted.initialize(com.megacrit.cardcrawl.helpers.Hitbox.class, "rightClickStarted_479");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.CommonKeywordIconsField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean useIcons_126;
{
useIcons = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.CommonKeywordIconsField$useIcons_126_Accessor(useIcons);useIcons.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "useIcons_126");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields]
 - Patching [com.megacrit.cardcrawl.actions.AbstractGameAction]
 - Adding Field: public java.lang.Object actionDelayedDirectlyBoundInstigator_214;
{
actionDelayedDirectlyBoundInstigator = new com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedDirectlyBoundInstigator_214_Accessor(actionDelayedDirectlyBoundInstigator);actionDelayedDirectlyBoundInstigator.initialize(com.megacrit.cardcrawl.actions.AbstractGameAction.class, "actionDelayedDirectlyBoundInstigator_214");
}
 - Adding Field: public com.megacrit.cardcrawl.cards.AbstractCard actionDelayedCardInUse_124;
{
actionDelayedCardInUse = new com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedCardInUse_124_Accessor(actionDelayedCardInUse);actionDelayedCardInUse.initialize(com.megacrit.cardcrawl.actions.AbstractGameAction.class, "actionDelayedCardInUse_124");
}
 - Adding Field: public java.util.ArrayList actionDelayedDamageMods_443;
{
actionDelayedDamageMods = new com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedDamageMods_443_Accessor(actionDelayedDamageMods);actionDelayedDamageMods.initialize(com.megacrit.cardcrawl.actions.AbstractGameAction.class, "actionDelayedDamageMods_443");
}
 - Adding Field: public java.util.ArrayList actionDelayedBlockMods_397;
{
actionDelayedBlockMods = new com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedBlockMods_397_Accessor(actionDelayedBlockMods);actionDelayedBlockMods.initialize(com.megacrit.cardcrawl.actions.AbstractGameAction.class, "actionDelayedBlockMods_397");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields]
 - Patching [com.megacrit.cardcrawl.cards.DamageInfo]
 - Adding Field: public java.util.List boundDamageMods_452;
{
boundDamageMods = new com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields$boundDamageMods_452_Accessor(boundDamageMods);boundDamageMods.initialize(com.megacrit.cardcrawl.cards.DamageInfo.class, "boundDamageMods_452");
}
 - Adding Field: public java.lang.Object instigatingObject_30;
{
instigatingObject = new com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields$instigatingObject_30_Accessor(instigatingObject);instigatingObject.initialize(com.megacrit.cardcrawl.cards.DamageInfo.class, "instigatingObject_30");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchingUpgradeField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public com.evacipated.cardcrawl.mod.stslib.cards.interfaces.BranchingUpgradesCard$UpgradeType upgradeType_242;
{
upgradeType = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchingUpgradeField$upgradeType_242_Accessor(upgradeType);upgradeType.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "upgradeType_242");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockTypes]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature]
 - Adding Field: public java.util.ArrayList blockInstances_719;
{
blockInstances = new com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockTypes$blockInstances_719_Accessor(blockInstances);blockInstances.initialize(com.megacrit.cardcrawl.core.AbstractCreature.class, "blockInstances_719");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.FleetingField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean fleeting_577;
{
fleeting = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.FleetingField$fleeting_577_Accessor(fleeting);fleeting.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "fleeting_577");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockModifierFields$CardField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.util.List blockModifiers_253;
{
blockModifiers = new com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockModifierFields$CardField$blockModifiers_253_Accessor(blockModifiers);blockModifiers.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "blockModifiers_253");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.String flavor_67;
{
flavor = new com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$flavor_67_Accessor(flavor);flavor.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "flavor_67");
}
 - Adding Field: public com.badlogic.gdx.graphics.Color boxColor_672;
{
boxColor = new com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$boxColor_672_Accessor(boxColor);boxColor.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "boxColor_672");
}
 - Adding Field: public com.badlogic.gdx.graphics.Color textColor_737;
{
textColor = new com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$textColor_737_Accessor(textColor);textColor.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "textColor_737");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AutoplayField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean autoplay_837;
{
autoplay = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AutoplayField$autoplay_837_Accessor(autoplay);autoplay.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "autoplay_837");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.GraveField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean grave_344;
{
grave = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.GraveField$grave_344_Accessor(grave);grave.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "grave_344");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$DamageModsField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.util.List damageModifiers_681;
{
damageModifiers = new com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$DamageModsField$damageModifiers_681_Accessor(damageModifiers);damageModifiers.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "damageModifiers_681");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Integer exhaustive_151;
{
exhaustive = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$exhaustive_151_Accessor(exhaustive);exhaustive.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "exhaustive_151");
}
 - Adding Field: public java.lang.Integer baseExhaustive_446;
{
baseExhaustive = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$baseExhaustive_446_Accessor(baseExhaustive);baseExhaustive.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "baseExhaustive_446");
}
 - Adding Field: public java.lang.Boolean isExhaustiveUpgraded_273;
{
isExhaustiveUpgraded = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$isExhaustiveUpgraded_273_Accessor(isExhaustiveUpgraded);isExhaustiveUpgraded.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "isExhaustiveUpgraded_273");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen]
 - Adding Field: public com.megacrit.cardcrawl.cards.AbstractCard branchUpgradePreviewCard_86;
{
branchUpgradePreviewCard = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$branchUpgradePreviewCard_86_Accessor(branchUpgradePreviewCard);branchUpgradePreviewCard.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "branchUpgradePreviewCard_86");
}
 - Adding Field: public java.lang.Boolean waitingForBranchUpgradeSelection_873;
{
waitingForBranchUpgradeSelection = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$waitingForBranchUpgradeSelection_873_Accessor(waitingForBranchUpgradeSelection);waitingForBranchUpgradeSelection.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "waitingForBranchUpgradeSelection_873");
}
 - Adding Field: public java.lang.Boolean isBranchUpgrading_754;
{
isBranchUpgrading = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$isBranchUpgrading_754_Accessor(isBranchUpgrading);isBranchUpgrading.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "isBranchUpgrading_754");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SneckoField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean snecko_396;
{
snecko = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SneckoField$snecko_396_Accessor(snecko);snecko.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "snecko_396");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SoulboundField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean soulbound_16;
{
soulbound = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SoulboundField$soulbound_16_Accessor(soulbound);soulbound.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "soulbound_16");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AlwaysRetainField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean alwaysRetain_909;
{
alwaysRetain = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AlwaysRetainField$alwaysRetain_909_Accessor(alwaysRetain);alwaysRetain.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "alwaysRetain_909");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$BlockStackElementField]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature]
 - Adding Field: public com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$BlockStackElement element_930;
{
element = new com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$BlockStackElementField$element_930_Accessor(element);element.initialize(com.megacrit.cardcrawl.core.AbstractCreature.class, "element_930");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Integer refund_348;
{
refund = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$refund_348_Accessor(refund);refund.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "refund_348");
}
 - Adding Field: public java.lang.Integer baseRefund_583;
{
baseRefund = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$baseRefund_583_Accessor(baseRefund);baseRefund.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "baseRefund_583");
}
 - Adding Field: public java.lang.Boolean isRefundUpgraded_304;
{
isRefundUpgraded = new com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$isRefundUpgraded_304_Accessor(isRefundUpgraded);isRefundUpgraded.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "isRefundUpgraded_304");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$CardStringsFlavorField]
 - Patching [com.megacrit.cardcrawl.localization.CardStrings]
 - Adding Field: public java.lang.String FLAVOR_139;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="FLAVOR")
{
FLAVOR = new com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$CardStringsFlavorField$FLAVOR_139_Accessor(FLAVOR);FLAVOR.initialize(com.megacrit.cardcrawl.localization.CardStrings.class, "FLAVOR_139");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.core.AbstractCreature.TempHPField]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature]
 - Adding Field: public java.lang.Integer tempHp_705;
{
tempHp = new com.evacipated.cardcrawl.mod.stslib.patches.core.AbstractCreature.TempHPField$tempHp_705_Accessor(tempHp);tempHp.initialize(com.megacrit.cardcrawl.core.AbstractCreature.class, "tempHp_705");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup]
 - Adding Field: public com.megacrit.cardcrawl.helpers.Hitbox branchUpgradeHb_125;
{
branchUpgradeHb = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton$branchUpgradeHb_125_Accessor(branchUpgradeHb);branchUpgradeHb.initialize(com.megacrit.cardcrawl.screens.SingleCardViewPopup.class, "branchUpgradeHb_125");
}
 - Adding Field: public java.lang.Boolean isViewingBranchUpgrade_869;
{
isViewingBranchUpgrade = new com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton$isViewingBranchUpgrade_869_Accessor(isViewingBranchUpgrade);isViewingBranchUpgrade.initialize(com.megacrit.cardcrawl.screens.SingleCardViewPopup.class, "isViewingBranchUpgrade_869");
}


Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$TargetField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.util.Map target_924;
{
target = new com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$TargetField$target_924_Accessor(target);target.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "target_924");
}


Patch Class: [aspiration.patches.Fields.WingBootsCampfireactionField]
 - Patching [com.megacrit.cardcrawl.relics.WingBoots]
 - Adding Field: public java.lang.Boolean campUsed_648;
{
campUsed = new aspiration.patches.Fields.WingBootsCampfireactionField$campUsed_648_Accessor(campUsed);campUsed.initialize(com.megacrit.cardcrawl.relics.WingBoots.class, "campUsed_648");
}


Patch Class: [aspiration.patches.Fields.AbstractCardFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean ppTriggered_67;
{
ppTriggered = new aspiration.patches.Fields.AbstractCardFields$ppTriggered_67_Accessor(ppTriggered);ppTriggered.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "ppTriggered_67");
}
 - Adding Field: public java.lang.Boolean playerPlayed_111;
{
playerPlayed = new aspiration.patches.Fields.AbstractCardFields$playerPlayed_111_Accessor(playerPlayed);playerPlayed.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "playerPlayed_111");
}


Patch Class: [aspiration.patches.Fields.AbstractPowerScribeBookField]
 - Patching [com.megacrit.cardcrawl.powers.AbstractPower]
 - Adding Field: public java.lang.Boolean ssbTriggered_125;
{
ssbTriggered = new aspiration.patches.Fields.AbstractPowerScribeBookField$ssbTriggered_125_Accessor(ssbTriggered);ssbTriggered.initialize(com.megacrit.cardcrawl.powers.AbstractPower.class, "ssbTriggered_125");
}


Patch Class: [betterNote.patches.EventDungeonEnumPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon]
 - Adding Field: public java.lang.Float noteChance_179;
{
noteChance = new betterNote.patches.EventDungeonEnumPatch$noteChance_179_Accessor(noteChance);noteChance.initialize(com.megacrit.cardcrawl.dungeons.AbstractDungeon.class, "noteChance_179");
}


Patch Class: [conspire.patches.BottledYoYoField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inBottledYoYo_110;
{
inBottledYoYo = new conspire.patches.BottledYoYoField$inBottledYoYo_110_Accessor(inBottledYoYo);inBottledYoYo.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottledYoYo_110");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PiercingField]
 - Patching [com.megacrit.cardcrawl.cards.DamageInfo]
 - Adding Field: public java.lang.Boolean isPiercing_403;
{
isPiercing = new com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PiercingField$isPiercing_403_Accessor(isPiercing);isPiercing.initialize(com.megacrit.cardcrawl.cards.DamageInfo.class, "isPiercing_403");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inPyramids_79;
{
inPyramids = new com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField$inPyramids_79_Accessor(inPyramids);inPyramids.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inPyramids_79");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$Field]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean curseForTurn_354;
{
curseForTurn = new com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$Field$curseForTurn_354_Accessor(curseForTurn);curseForTurn.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "curseForTurn_354");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion]
 - Adding Field: public java.lang.Integer useCount_724;
{
useCount = new com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField$useCount_724_Accessor(useCount);useCount.initialize(com.megacrit.cardcrawl.potions.AbstractPotion.class, "useCount_724");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean costsX_284;
{
costsX = new com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField$costsX_284_Accessor(costsX);costsX.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "costsX_284");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$RugHitbox]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen]
 - Adding Field: public com.megacrit.cardcrawl.helpers.Hitbox rugHB_359;
{
rugHB = new com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$RugHitbox$rugHB_359_Accessor(rugHB);rugHB.initialize(com.megacrit.cardcrawl.shop.ShopScreen.class, "rugHB_359");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides]
 - Patching [com.megacrit.cardcrawl.trials.CustomTrial]
 - Adding Field: public java.lang.Integer startingGold_960;
{
startingGold = new com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides$startingGold_960_Accessor(startingGold);startingGold.initialize(com.megacrit.cardcrawl.trials.CustomTrial.class, "startingGold_960");
}
 - Adding Field: public java.lang.Integer startingOrbSlots_282;
{
startingOrbSlots = new com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides$startingOrbSlots_282_Accessor(startingOrbSlots);startingOrbSlots.initialize(com.megacrit.cardcrawl.trials.CustomTrial.class, "startingOrbSlots_282");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inBottleRain_153;
{
inBottleRain = new com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$inBottleRain_153_Accessor(inBottleRain);inBottleRain.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottleRain_153");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.NoDiscardField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean noDiscard_604;
{
noDiscard = new com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.NoDiscardField$noDiscard_604_Accessor(noDiscard);noDiscard.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "noDiscard_604");
}


Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$Field]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean isInnateOnce_495;
{
isInnateOnce = new com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$Field$isInnateOnce_495_Accessor(isInnateOnce);isInnateOnce.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "isInnateOnce_495");
}


Patch Class: [SpicyShops.patches.SpicyRelicPatches$SpicyRelicFields]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic]
 - Adding Field: public SpicyShops.patches.SpicyRelicPatches$Modifiers modifier_132;
{
modifier = new SpicyShops.patches.SpicyRelicPatches$SpicyRelicFields$modifier_132_Accessor(modifier);modifier.initialize(com.megacrit.cardcrawl.relics.AbstractRelic.class, "modifier_132");
}


Patch Class: [SpicyShops.patches.SpicyPotionPatches$PotionUseField]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion]
 - Adding Field: public java.lang.Boolean isBig_372;
{
isBig = new SpicyShops.patches.SpicyPotionPatches$PotionUseField$isBig_372_Accessor(isBig);isBig.initialize(com.megacrit.cardcrawl.potions.AbstractPotion.class, "isBig_372");
}
 - Adding Field: public java.lang.Integer useCount_195;
{
useCount = new SpicyShops.patches.SpicyPotionPatches$PotionUseField$useCount_195_Accessor(useCount);useCount.initialize(com.megacrit.cardcrawl.potions.AbstractPotion.class, "useCount_195");
}
 - Adding Field: public java.lang.Boolean isConcentrated_574;
{
isConcentrated = new SpicyShops.patches.SpicyPotionPatches$PotionUseField$isConcentrated_574_Accessor(isConcentrated);isConcentrated.initialize(com.megacrit.cardcrawl.potions.AbstractPotion.class, "isConcentrated_574");
}


Patch Class: [SpicyShops.patches.SpicyRelicPatches$ShopRelicFields]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic]
 - Adding Field: public com.megacrit.cardcrawl.cards.AbstractCard bonusCard_530;
{
bonusCard = new SpicyShops.patches.SpicyRelicPatches$ShopRelicFields$bonusCard_530_Accessor(bonusCard);bonusCard.initialize(com.megacrit.cardcrawl.shop.StoreRelic.class, "bonusCard_530");
}


Patch Class: [SpicyShops.patches.cards.RepeatKeywordPatches$RepeatField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean repeat_157;
{
repeat = new SpicyShops.patches.cards.RepeatKeywordPatches$RepeatField$repeat_157_Accessor(repeat);repeat.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "repeat_157");
}


Patch Class: [guardian.patches.BottledStasisPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inBottledStasis_606;
{
inBottledStasis = new guardian.patches.BottledStasisPatch$inBottledStasis_606_Accessor(inBottledStasis);inBottledStasis.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottledStasis_606");
}
 - Adding Field: public java.lang.Boolean inStasisEgg_273;
{
inStasisEgg = new guardian.patches.BottledStasisPatch$inStasisEgg_273_Accessor(inStasisEgg);inStasisEgg.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inStasisEgg_273");
}
 - Adding Field: public java.lang.Boolean inBottledAnomaly_587;
{
inBottledAnomaly = new guardian.patches.BottledStasisPatch$inBottledAnomaly_587_Accessor(inBottledAnomaly);inBottledAnomaly.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottledAnomaly_587");
}
 - Adding Field: public java.lang.Boolean inBottledCode_550;
{
inBottledCode = new guardian.patches.BottledStasisPatch$inBottledCode_550_Accessor(inBottledCode);inBottledCode.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottledCode_550");
}


Patch Class: [downfall.patches.NoDiscardField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean noDiscard_189;
{
noDiscard = new downfall.patches.NoDiscardField$noDiscard_189_Accessor(noDiscard);noDiscard.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "noDiscard_189");
}


Patch Class: [hermit.patches.relics.BottledPlaceholderField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inBottledPlaceholderField_433;
{
inBottledPlaceholderField = new hermit.patches.relics.BottledPlaceholderField$inBottledPlaceholderField_433_Accessor(inBottledPlaceholderField);inBottledPlaceholderField.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inBottledPlaceholderField_433");
}


Patch Class: [guardian.patches.SelfStasisPatch$Fields]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction]
 - Adding Field: public guardian.orbs.StasisOrb stasis_783;
{
stasis = new guardian.patches.SelfStasisPatch$Fields$stasis_783_Accessor(stasis);stasis.initialize(com.megacrit.cardcrawl.actions.utility.UseCardAction.class, "stasis_783");
}


Patch Class: [sneckomod.patches.UnknownExtraUiPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public sneckomod.cards.unknowns.AbstractUnknownCard parentCard_990;
{
parentCard = new sneckomod.patches.UnknownExtraUiPatch$parentCard_990_Accessor(parentCard);parentCard.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "parentCard_990");
}


Patch Class: [gremlin.patches.eventpatches.GremlinEventFixPatch1]
 - Patching [com.megacrit.cardcrawl.events.AbstractImageEvent]
 - Adding Field: public java.lang.Boolean ranExtraCheck_330;
{
ranExtraCheck = new gremlin.patches.eventpatches.GremlinEventFixPatch1$ranExtraCheck_330_Accessor(ranExtraCheck);ranExtraCheck.initialize(com.megacrit.cardcrawl.events.AbstractImageEvent.class, "ranExtraCheck_330");
}


Patch Class: [downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer]
 - Adding Field: public java.lang.Boolean bustedRuby_957;
{
bustedRuby = new downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedRuby_957_Accessor(bustedRuby);bustedRuby.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "bustedRuby_957");
}
 - Adding Field: public java.lang.Boolean bustedEmerald_516;
{
bustedEmerald = new downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedEmerald_516_Accessor(bustedEmerald);bustedEmerald.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "bustedEmerald_516");
}
 - Adding Field: public java.lang.Boolean bustedSapphire_799;
{
bustedSapphire = new downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedSapphire_799_Accessor(bustedSapphire);bustedSapphire.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "bustedSapphire_799");
}


Patch Class: [sneckomod.patches.BottledD8Patch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inD8_380;
{
inD8 = new sneckomod.patches.BottledD8Patch$inD8_380_Accessor(inD8);inD8.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inD8_380");
}


Patch Class: [champ.patches.SignatureMovePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean inSignatureMove_539;
{
inSignatureMove = new champ.patches.SignatureMovePatch$inSignatureMove_539_Accessor(inSignatureMove);inSignatureMove.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "inSignatureMove_539");
}


Patch Class: [theLatent.fields.WeightlessField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean weightless_217;
{
weightless = new theLatent.fields.WeightlessField$weightless_217_Accessor(weightless);weightless.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "weightless_217");
}


Patch Class: [theLatent.fields.EnergizedField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Boolean energized_696;
{
energized = new theLatent.fields.EnergizedField$energized_696_Accessor(energized);energized.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "energized_696");
}


Patch Class: [com.evacipated.cardcrawl.modthespire.patches.HeapSize]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Insert @ 450...

{
com.evacipated.cardcrawl.modthespire.patches.HeapSize.Insert(sb);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CreditsModList]
 - Patching [com.megacrit.cardcrawl.credits.CreditsScreen()]
 - Adding Insert @ r5 (abs:56)...

{
float[] __param2 = new float[1];
__param2[0] = tmpY;
com.evacipated.cardcrawl.modthespire.patches.CreditsModList.Insert($0, __param2);
tmpY = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1058...

{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges]
 - Patching [basemod.BaseMod.registerModBadge(com.badlogic.gdx.graphics.Texture,java.lang.String,java.lang.String,java.lang.String,basemod.ModPanel)]
 - Adding Insert @ r8 (abs:762)...

{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges.Insert($1, $2, $3, $4, $5, badge);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.MainMenuItem]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.setMainMenuButtons()]
 - Adding Insert @ 152...

{
int[] __param2 = new int[1];
__param2[0] = index;
com.evacipated.cardcrawl.modthespire.patches.modsscreen.MainMenuItem.Insert($0, __param2);
index = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNCardTextColors]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 719...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
int[] __param4 = new int[1];
__param4[0] = numLines;
java.lang.StringBuilder[] __param5 = new java.lang.StringBuilder[1];
__param5[0] = sbuilder;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNCardTextColors.Insert($0, __param2, __param3, __param4, __param5, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
numLines = __param4[0];
sbuilder = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNUniqueKeywords]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 619...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNUniqueKeywords.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.events.SensoryStone.CustomCharacterText]
 - Patching [com.megacrit.cardcrawl.events.beyond.SensoryStone.getRandomMemory()]
 - Adding Insert @ 108...

{
basemod.patches.com.megacrit.cardcrawl.events.SensoryStone.CustomCharacterText.Insert($0, memories);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.DescriptionLine.CustomDynamicVariableTokenizeCN]
 - Patching [com.megacrit.cardcrawl.cards.DescriptionLine.tokenizeCN(java.lang.String)]
 - Adding Insert @ 45...

{
basemod.patches.com.megacrit.cardcrawl.cards.DescriptionLine.CustomDynamicVariableTokenizeCN.Insert($1, tokenized, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$updatePatch]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 164...

{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$updatePatch.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderOuterGlowSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderOuterGlow(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r9 (abs:1337)...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderOuterGlowSwitch.Insert($0, $1, current_x, current_y, tintColor);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.CustomRewardSave]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile(com.megacrit.cardcrawl.saveAndContinue.SaveFile$SaveType)]
 - Adding Insert @ 373...

{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.CustomRewardSave.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.RenderBoxEnergy]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Insert @ 376...

{
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[] __param6 = new com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[1];
__param6[0] = currentOrb;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.RenderBoxEnergy.Insert($1, $2, $3, $4, card, __param6);
currentOrb = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 568...

{
com.badlogic.gdx.graphics.g2d.GlyphLayout[] __param2 = new com.badlogic.gdx.graphics.g2d.GlyphLayout[1];
__param2[0] = gl;
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariable.Insert($0, __param2, __param3);
gl = __param2[0];
word = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.getSmartHeight(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float)]
 - Adding Insert @ 1053...

{
java.lang.String[] __param5 = new java.lang.String[1];
__param5[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch.Insert($1, $2, $3, $4, __param5);
word = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PreUpdateHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.update()]
 - Adding Insert @ 764...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PreUpdateHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FixEnergyTooltip]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1780...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = s;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FixEnergyTooltip.Insert($0, $1, __param3);
s = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.SwapCharacterSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen(boolean)]
 - Adding Insert @ 137...

{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.SwapCharacterSelectScreen.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3302...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.multiDamageInsert($0, $1, tmp, i, m);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.StartBattleHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.update()]
 - Adding Insert @ 295...

{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.StartBattleHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1786...

{
java.util.ArrayList[] __param4 = new java.util.ArrayList[1];
__param4[0] = t;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords.InsertAfter($0, $1, card, __param4);
t = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.PreventCrashDueToKeywordAtStartOfCardTextForTraditionalChinesePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 765...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.PreventCrashDueToKeywordAtStartOfCardTextForTraditionalChinesePatch.preventCrash($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2049...

{
float[] __param3 = new float[1];
__param3[0] = draw_y;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, __param3);
draw_y = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3324...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.multiDamageFinalInsert($0, $1, tmp, i, m);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$RenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Insert @ 452...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$RenderHook.Insert($0, sb);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$NormalEventConditions]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2487...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$NormalEventConditions.insert($1, tmp);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PostUpdateHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.update()]
 - Adding Insert @ 897...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PostUpdateHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$RenderCardPatch]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Insert @ 195...

{
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$RenderCardPatch.Insert($1, $2, $3, $4, tip);
}

Patch Class: [basemod.patches.whatmod.PlayerPowerTips]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 820...

{
basemod.patches.whatmod.PlayerPowerTips.Insert($0, $1, p);
}

Patch Class: [basemod.helpers.CardBorderGlowManager$RenderGlowPatch$CardGlowBorderEffectPatch]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.CardGlowBorder.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 62...

{
basemod.helpers.CardBorderGlowManager$RenderGlowPatch$CardGlowBorderEffectPatch.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.ModifyXCostPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Insert @ 1698...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.ModifyXCostPatch.Insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$FixOffsetPatch]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Insert @ 195...

{
float[] __param6 = new float[1];
__param6[0] = offsetChange;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$FixOffsetPatch.Insert($1, $2, $3, $4, tip, __param6);
offsetChange = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.ApplyPowerAction.ApplyPowerActionPostPowerApplyHook]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ r6 (abs:147)...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.ApplyPowerAction.ApplyPowerActionPostPowerApplyHook.Insert($0, powerToApply, target, source);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$SpecialEventConditions]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getShrine(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2436...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$SpecialEventConditions.insert($1, tmp);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.renderItemReward(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 266...

{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamageMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3302...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamageMulti.Insert($0, $1, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Text]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardTypeText(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1297...

{
java.lang.String[] __param4 = new java.lang.String[1];
__param4[0] = label;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Text.Insert($0, $1, card, __param4);
label = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnUseCard]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 46...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnUseCard.Insert($0, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.VampireDamageAllEnemiesAction.SafeDamageAllEnemies]
 - Patching [com.megacrit.cardcrawl.actions.unique.VampireDamageAllEnemiesAction.update()]
 - Adding Insert @ 33...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.VampireDamageAllEnemiesAction.SafeDamageAllEnemies.checkSafety($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnPlayerDamagedHook]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1741...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnPlayerDamagedHook.InsertPre($0, $1, __param3);
damageAmount = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.unique.DiscoveryAction.MoreThanTwoFix]
 - Patching [com.megacrit.cardcrawl.actions.unique.DiscoveryAction.update()]
 - Adding Insert @ 73...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.actions.unique.DiscoveryAction.MoreThanTwoFix.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.EditCharactersHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.create()]
 - Adding Insert @ 299...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.EditCharactersHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$GrabFontFile]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.initialize()]
 - Adding Insert @ 256...

{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$GrabFontFile.Insert(fontFile);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixColoredTextOffset]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 519...
Adding Insert @ 524...
Adding Insert @ 529...
Adding Insert @ 534...
Adding Insert @ 539...
Adding Insert @ 545...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixColoredTextOffset.Insert($0, gl, word, sbuilder2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2319...

{
float[] __param3 = new float[1];
__param3[0] = draw_y;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, __param3);
draw_y = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 896...

{
java.lang.String[] __param4 = new java.lang.String[1];
__param4[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariableCN.Insert($0, $1, card, __param4);
tmp = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmpCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r35 (abs:2335)...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmpCN.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3203...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock.blockInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$UpdateScrollBar]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.updateInput()]
 - Adding Insert @ 276...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$UpdateScrollBar.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderRelics(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 575...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = relicString;
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.MultiwordKeywords.Insert($0, $1, __param3);
relicString = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar]
 - Patching [com.megacrit.cardcrawl.screens.GameOverScreen.calculateUnlockProgress()]
 - Adding Insert @ 228...

{
boolean[] __param3 = new boolean[1];
__param3[0] = maxLevel;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar.unlockLimitCheck($0, unlockLevel, __param3);
maxLevel = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmp]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r31 (abs:2061)...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmp.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3244...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamage.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.whatmod.MonsterPowerTips]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 313...

{
basemod.patches.whatmod.MonsterPowerTips.Insert($0, $1, p);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHookTargetMode]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 247...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHookTargetMode.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnClose]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.closeCurrentScreen()]
 - Adding Insert @ 2912...

{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnClose.Insert();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3174...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.multiDamageFinalInsert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$RemoveSeenEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2492...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$RemoveSeenEvents.insert($1, tmpKey);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$DidChangeTab]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.didChangeTab(com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar,com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab)]
 - Adding Insert @ r1 (abs:510)...

{
com.megacrit.cardcrawl.cards.CardGroup[] __param4 = new com.megacrit.cardcrawl.cards.CardGroup[1];
__param4[0] = visibleCards;
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$DidChangeTab.Insert($0, $1, $2, __param4);
visibleCards = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Text]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderType(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2665...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = text;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Text.Insert($0, $1, __param3);
text = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRetained]
 - Patching [com.megacrit.cardcrawl.actions.unique.RestoreRetainedCardsAction.update()]
 - Adding Insert @ 26...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRetained.Insert($0, e);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostDrawHook]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2078...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostDrawHook.Insert($0, $1, c);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.InitializeCharacterButtons]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.initializeCharacters()]
 - Adding Insert @ 288...

{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.InitializeCharacterButtons.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Render]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2704...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Render.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Frame]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderPortraitFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Insert @ 1705...

{
float[] __param5 = new float[1];
__param5[0] = tOffset;
float[] __param6 = new float[1];
__param6[0] = tWidth;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Frame.Insert($0, $1, $2, $3, __param5, __param6);
tOffset = __param5[0];
tWidth = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.AddSwitch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.add(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 986...

{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.AddSwitch.Insert($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Load]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Insert @ 1052...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Load.Insert($0, $1, saveFile);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoPurpleColor]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.exampleNonWordWrappedText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,com.badlogic.gdx.graphics.Color,float,float)]
 - Adding Insert @ 1345...

{
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoPurpleColor.Insert($1, $2, $3, $4, $5, $6, $7, $8, __param9);
word = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1779...

{
java.util.ArrayList[] __param4 = new java.util.ArrayList[1];
__param4[0] = t;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords.InsertBefore($0, $1, card, __param4);
t = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.initialize()]
 - Adding Insert @ 95...

{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Decrease]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decreaseMaxHealth(int)]
 - Adding Insert @ 227...

{
int[] __param3 = new int[1];
__param3[0] = amount;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Decrease.Insert($0, $1, __param3);
amount = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CustomCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.initialize()]
 - Adding Insert @ 419...

{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CustomCardsPatch.Insert();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3115...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.damageInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.MoveToExhaustPileHook]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ r6 (abs:946)...

{
basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.MoveToExhaustPileHook.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.update()]
 - Adding Insert @ 320...

{
float[] __param2 = new float[1];
__param2[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update.InsertBefore($0, __param2);
scrollY = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Save]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 140...

{
java.util.HashMap[] __param2 = new java.util.HashMap[1];
__param2[0] = params;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Save.Insert($1, __param2);
params = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.CustomRewardLoad]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPostCombat(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 997...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.CustomRewardLoad.Insert($0, $1, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHook]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 287...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHook.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 458...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle.InsertPre($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$NormalAndShrineEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Insert @ 360...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$NormalAndShrineEvents.insert($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$FixExhaustText]
 - Patching [com.megacrit.cardcrawl.screens.ExhaustPileViewScreen.open()]
 - Adding Insert @ 262...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$FixExhaustText.setField($0, toAdd);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 496...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderScreen(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 586...

{
float[] __param3 = new float[1];
__param3[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders.InsertBefore($0, $1, __param3);
scrollY = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PreventGetShrineCrashPatch$ReturnNullIfNoShrinesPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getShrine(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2436...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PreventGetShrineCrashPatch$ReturnNullIfNoShrinesPatch.ReturnNullIfNoShrines($1, tmp);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$AlternateCostsHasEnoughAlternateResource]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.hasEnoughEnergy()]
 - Adding Insert @ 1053...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$AlternateCostsHasEnoughAlternateResource.Insert($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$Ascension20DoubleBoss]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.update()]
 - Adding Insert @ 116...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$Ascension20DoubleBoss.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 467...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle.InsertPost($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenDrawn]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2069...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenDrawn.Insert($0, $1, c);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3115...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowers.Insert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.Save]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 303...

{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.Save.Insert($1, params);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHook]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 283...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHook.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2239...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixUniqueKeywordsMultiTooltips]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Insert @ 1413...

{
boolean[] __param4 = new boolean[1];
__param4[0] = alreadyExists;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixUniqueKeywordsMultiTooltips.Insert($0, s, t, __param4);
alreadyExists = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 939...

{
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch.InsertRemoveSpecialWord($1, $2, $3, $4, $5, $6, $7, $8, __param9);
word = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$FixEForChinese]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 741...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
java.lang.StringBuilder[] __param4 = new java.lang.StringBuilder[1];
__param4[0] = sbuilder;
int[] __param5 = new int[1];
__param5[0] = numLines;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$FixEForChinese.Insert($0, __param2, __param3, __param4, __param5, CARD_ENERGY_IMG_WIDTH, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
sbuilder = __param4[0];
numLines = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$ResetRunsDropdown]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.resetRunsDropdown()]
 - Adding Insert @ r34 (abs:273)...

{
boolean[] __param2 = new boolean[1];
__param2[0] = includeMe;
basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$ResetRunsDropdown.Insert($0, __param2, data);
includeMe = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.GetNextActionHook]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 307...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.GetNextActionHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3161...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.multiDamageInsert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$SaveAndLoadShrineEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 411...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$SaveAndLoadShrineEvents.insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowersMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3161...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowersMulti.Insert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3260...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.damageFinalInsert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.InitializeCardPoolsSwitch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Insert @ 1445...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.InitializeCardPoolsSwitch.Insert($0, tmpPool);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterRelicsHookSwitch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeStarterRelics(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Insert @ r14 (abs:478)...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = relics;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterRelicsHookSwitch.Insert($0, $1, __param3);
relics = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.CharacterSelectControllerSupport]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.updateCharSelectController()]
 - Adding Insert @ 344...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.CharacterSelectControllerSupport.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3244...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.damageInsert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.setPlayerName()]
 - Adding Insert @ 194...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3211...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock.blockFinalInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 970...

{
float[] __param9 = new float[1];
__param9[0] = curWidth;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch.InsertRemoveSpace($1, $2, $3, $4, $5, $6, $7, $8, __param9, spaceWidth);
curWidth = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain(com.megacrit.cardcrawl.characters.AbstractPlayer,int,boolean)]
 - Adding Insert @ 237...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook.Insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 741...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
java.lang.StringBuilder[] __param4 = new java.lang.StringBuilder[1];
__param4[0] = sbuilder;
int[] __param5 = new int[1];
__param5[0] = numLines;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariableCN.Insert($0, __param2, __param3, __param4, __param5, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
sbuilder = __param4[0];
numLines = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenExhausted]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 946...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenExhausted.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2735...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch.Insert($0, $1, text, font, costColor);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$GetCardModifierCostString]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2733...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = text;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$GetCardModifierCostString.Insert($0, $1, __param3, costColor);
text = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 612...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2333...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariableCN.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Frame]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 711...

{
float[] __param4 = new float[1];
__param4[0] = tOffset;
float[] __param5 = new float[1];
__param5[0] = tWidth;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Frame.Insert($0, $1, card, __param4, __param5);
tOffset = __param4[0];
tWidth = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.update()]
 - Adding Insert @ 323...

{
float[] __param2 = new float[1];
__param2[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update.InsertAfter($0, __param2);
scrollY = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.options.SettingsScreen.PopupSwitch]
 - Patching [com.megacrit.cardcrawl.screens.options.SettingsScreen.popup(com.megacrit.cardcrawl.screens.options.ConfirmPopup$ConfirmType)]
 - Adding Insert @ r35 (abs:102)...

{
basemod.patches.com.megacrit.cardcrawl.screens.options.SettingsScreen.PopupSwitch.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.MissingPortraitFix]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderPortrait(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 572...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.MissingPortraitFix.Insert($0, $1, card);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ReorganizeObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.reorganizeObtain(com.megacrit.cardcrawl.characters.AbstractPlayer,int,boolean,int)]
 - Adding Insert @ 204...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ReorganizeObtainRelicGetHook.Insert($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Increase]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.increaseMaxHp(int,boolean)]
 - Adding Insert @ 210...

{
int[] __param4 = new int[1];
__param4[0] = amount;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Increase.Insert($0, $1, $2, __param4);
amount = __param4[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.SafeDamageAllEnemies]
 - Patching [com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.update()]
 - Adding Insert @ 52...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.SafeDamageAllEnemies.checkSafety($0, utilizeBaseDamage);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Update]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Insert @ 2528...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Update.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3126...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.damageFinalInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r0 (abs:1382)...

{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize.Insert($0, $1, card);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)]
 - Adding Insert @ 197...

{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render.Insert($0, $1, $2, curTab);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PostRenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Insert @ 486...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PostRenderHook.Insert($0, sb);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook2]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain()]
 - Adding Insert @ 272...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook2.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.obtain()]
 - Adding Insert @ 300...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ObtainRelicGetHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2443...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.EnergyManager.PostEnergyRechargeHook]
 - Patching [com.megacrit.cardcrawl.core.EnergyManager.recharge()]
 - Adding Insert @ 47...

{
basemod.patches.com.megacrit.cardcrawl.core.EnergyManager.PostEnergyRechargeHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierStatEquivalentCopyModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Insert @ 984...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierStatEquivalentCopyModifiers.Insert($0, card);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1044...

{
float[] __param4 = new float[1];
__param4[0] = draw_y;
com.badlogic.gdx.graphics.g2d.BitmapFont[] __param5 = new com.badlogic.gdx.graphics.g2d.BitmapFont[1];
__param5[0] = font;
float[] __param6 = new float[1];
__param6[0] = current_x;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, card, __param4, __param5, __param6);
draw_y = __param4[0];
font = __param5[0];
current_x = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoColoredText]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.exampleNonWordWrappedText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,com.badlogic.gdx.graphics.Color,float,float)]
 - Adding Insert @ 1303...

{
float[] __param9 = new float[1];
__param9[0] = curWidth;
int[] __param10 = new int[1];
__param10[0] = currentLine;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoColoredText.Insert($1, $2, $3, $4, $5, $6, $7, $8, __param9, __param10, word);
curWidth = __param9[0];
currentLine = __param10[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$InitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 578...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$InitializeDescription.Insert($0, __param2, keywordTmp);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHookTargetMode]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 257...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHookTargetMode.Insert($0, potion);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnAfterUseCardPatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Insert @ 91...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnAfterUseCardPatch.Insert($0, targetCard);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIconSingleCardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1008...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIconSingleCardView.Insert($0, $1, spacing, i, __param5, __param6, gl, card_energy_w, drawScale, current_x, current_y, card);
start_x = __param5[0];
tmp = __param6[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.MonsterDamage]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 761...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
boolean[] __param4 = new boolean[1];
__param4[0] = hadBlock;
com.evacipated.cardcrawl.mod.stslib.patches.tempHp.MonsterDamage.Insert($0, $1, __param3, __param4);
damageAmount = __param3[0];
hadBlock = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.clickAndDragCards()]
 - Adding Insert @ 1422...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow.cantPlayWithoutTarget($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$GrabCardInUse]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Insert @ 1700...

{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$GrabCardInUse.ForgetCardPostUseCall($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIconSingleCardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1235...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIconSingleCardView.Insert($0, $1, spacing, i, __param5, __param6, gl, card_energy_w, drawScale, current_x, current_y, card);
start_x = __param5[0];
tmp = __param6[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1753...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer.toChangeDamage($0, $1, __param3);
damageAmount = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PreBlockLossCall]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 458...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PreBlockLossCall.preBlockLoss($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$Astrolabe_onEquip]
 - Patching [com.megacrit.cardcrawl.relics.Astrolabe.onEquip()]
 - Adding Insert @ 35...

{
com.megacrit.cardcrawl.cards.CardGroup[] __param2 = new com.megacrit.cardcrawl.cards.CardGroup[1];
__param2[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$Astrolabe_onEquip.Insert($0, __param2);
tmp = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3211...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ApplyPowersToBlock.blockFinalInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3260...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.singleFinalGive($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$SaveBranchingUpgrades]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCopy(java.lang.String,int,int)]
 - Adding Insert @ r9 (abs:1003)...

{
int[] __param2 = new int[1];
__param2[0] = $2;
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$SaveBranchingUpgrades.Insert($1, __param2, $3, retVal);
$2 = (int)__param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$SetMonsterLoseBlockFlag]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyPreTurnLogic()]
 - Adding Insert @ 132...

{
com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$SetMonsterLoseBlockFlag.ResetFlag($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.NonStackablePowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 261...

{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.NonStackablePowerPatch.RestorePowerID($0, powerToApply);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$DoBranchUpgradePreview]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 345...

{
com.megacrit.cardcrawl.cards.AbstractCard[] __param4 = new com.megacrit.cardcrawl.cards.AbstractCard[1];
__param4[0] = copy;
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$DoBranchUpgradePreview.InsertBranchPreview($0, $1, card, __param4);
copy = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3324...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.multiFinalGive($0, $1, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTop]
 - SpirePatch2
 - Patching [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Prefix(float,float[],com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 60...

{
java.util.List[] __param1 = new java.util.List[1];
__param1[0] = tooltips;
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTop.part1($5, __param1);
tooltips = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorText]
 - Patching [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Text.Insert(com.megacrit.cardcrawl.cards.AbstractCard,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String[])]
 - Adding Insert @ 37...

{
java.util.List[] __param4 = new java.util.List[1];
__param4[0] = descriptors;
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorText.pls($1, $2, $3, __param4);
descriptors = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainCardsSelectPatch$After]
 - Patching [com.megacrit.cardcrawl.actions.unique.RetainCardsAction.update()]
 - Adding Insert @ 34...

{
com.evacipated.cardcrawl.mod.stslib.patches.RetainCardsSelectPatch$After.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnSkipCardRelicPatch$OnSkipCardPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.update()]
 - Adding Insert @ 201...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnSkipCardRelicPatch$OnSkipCardPatch.Insert($0, item);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.calculateDamage(int)]
 - Adding Insert @ 1329...

{
float[] __param1 = new float[1];
__param1[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches.finalReceive($0, __param1);
tmp = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$SetFinalTarget]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.playCard()]
 - Adding Insert @ 1603...

{
com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$SetFinalTarget.setFinalTarget($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$IHeardYouLikePatchesSoIPutAPatchInYourPatch]
 - SpirePatch2
 - Patching [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Prefix(float,float[],com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 86...

{
float[] __param6 = new float[1];
__param6[0] = sumTooltipHeight;
com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$IHeardYouLikePatchesSoIPutAPatchInYourPatch.insertPatch($1, $3, $5, BODY_TEXT_WIDTH, TIP_DESC_LINE_SPACING, BOX_EDGE_H, __param6);
sumTooltipHeight = __param6[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$RenderPowerHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1026...

{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$RenderPowerHealthBar.Insert($0, $1, x, y, targetHealthBarWidth, HEALTH_BAR_HEIGHT, HEALTH_BAR_OFFSET_Y);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.RenderHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1037...

{
com.evacipated.cardcrawl.mod.stslib.patches.tempHp.RenderHealthBar.Insert($0, $1, x, y);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamageFinal]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3324...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamageFinal.multi($0, $1, tmp, i, m);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnSkipCardRelicPatch$SingingBowlSkipPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.SingingBowlButton.onClick()]
 - Adding Insert @ r0 (abs:87)...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnSkipCardRelicPatch$SingingBowlSkipPatch.Insert($0, rItem);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$SetMonsterLoseBlockFlag]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyPreTurnLogic()]
 - Adding Insert @ 131...

{
com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$SetMonsterLoseBlockFlag.SetFlag($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardLibrary_getCurse2]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCurse(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 1095...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardLibrary_getCurse2.Insert($1, $2, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3315...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.multiReceive($0, $1, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$EndOfRound]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Insert @ 420...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$EndOfRound.endRoundMonster($0, m);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.clickAndDragCards()]
 - Adding Insert @ 1473...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow.enableTargeting($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RemoveApplicationEffectsForInvisiblePowers]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 257...
Adding Insert @ 294...

{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RemoveApplicationEffectsForInvisiblePowers.antiApplicationEffect($0, powerToApply);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardLibrary_getCurse1]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCurse()]
 - Adding Insert @ 1079...

{
java.util.ArrayList[] __param1 = new java.util.ArrayList[1];
__param1[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardLibrary_getCurse1.Insert(__param1);
tmp = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderRedHealthBar(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Insert @ 1239...
Adding Insert @ 1267...

{
float[] __param5 = new float[1];
__param5[0] = targetHealthBarWidth;
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar.Insert($0, $1, $2, $3, __param5);
targetHealthBarWidth = __param5[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3255...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.singleReceive($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnReceivePowerPatch$ApplyPower]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 159...

{
float[] __param2 = new float[1];
__param2[0] = duration;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnReceivePowerPatch$ApplyPower.Insert($0, __param2, powerToApply);
duration = __param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipForCard(com.megacrit.cardcrawl.cards.AbstractCard,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Insert @ 161...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = $3;
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderKeywords.patch($1, $2, __param3);
$3 = (java.util.ArrayList)__param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$DoBranchUpgradePreview]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 341...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$DoBranchUpgradePreview.InsertNormalPreview($0, $1, card);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 792...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster.onAttack($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$GetBranchingUpgrade]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 168...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$GetBranchingUpgrade.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$FixDBMSingleCardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 896...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$FixDBMSingleCardView.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$SingleCardViewRenderIconOnCard]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 362...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$SingleCardViewRenderIconOnCard.patch($0, $1, card, cardHb);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1772...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer.onAttack($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$EndOfRound]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Insert @ 414...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$EndOfRound.endRoundPlayer($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1779...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer.onAttackFailsafe($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$DontAlwaysShowIconsPls]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1787...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$DontAlwaysShowIconsPls.patch($0, $1, card, t);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.calculateDamage(int)]
 - Adding Insert @ 1311...

{
float[] __param1 = new float[1];
__param1[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches.receive($0, __param1);
tmp = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3302...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.multiGive($0, $1, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorSCVFrame]
 - SpirePatch2
 - Patching [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Frame.Insert(com.megacrit.cardcrawl.screens.SingleCardViewPopup,com.badlogic.gdx.graphics.g2d.SpriteBatch,com.megacrit.cardcrawl.cards.AbstractCard,float[],float[])]
 - Adding Insert @ 84...

{
java.util.List[] __param1 = new java.util.List[1];
__param1[0] = descriptors;
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorSCVFrame.pls($3, __param1);
descriptors = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$FontHelpFixes]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 949...

{
float[] __param9 = new float[1];
__param9[0] = curWidth;
float[] __param10 = new float[1];
__param10[0] = curHeight;
java.lang.String[] __param11 = new java.lang.String[1];
__param11[0] = word;
com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$FontHelpFixes.DrawIconsPls($1, $2, $3, $4, $5, $6, $7, $8, __param9, __param10, __param11);
curWidth = __param9[0];
curHeight = __param10[0];
word = __param11[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamageFinal]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3260...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamageFinal.single($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.NonStackablePowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 215...

{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.NonStackablePowerPatch.AvoidStacking($0, powerToApply, p);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnUseCard]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 33...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnUseCard.onUseCardPlayer($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$PreBlockLossCall]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyPreTurnLogic()]
 - Adding Insert @ 130...

{
com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$PreBlockLossCall.preBlockLoss($0, m);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$FairyPotion]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1860...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$FairyPotion.Insert($0, $1, p);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$FixDBM]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2333...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$FixDBM.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SneckoPatch$Draw]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2069...

{
com.evacipated.cardcrawl.mod.stslib.patches.SneckoPatch$Draw.Insert($0, $1, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$AlterIconDescriptionSize]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 568...

{
com.badlogic.gdx.graphics.g2d.GlyphLayout[] __param2 = new com.badlogic.gdx.graphics.g2d.GlyphLayout[1];
__param2[0] = gl;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$AlterIconDescriptionSize.Insert($0, __param2, word);
gl = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1787...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer.onLastDamageTakenUpdate($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3203...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ApplyPowersToBlock.blockInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$AlterIconDescriptionSize]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 740...

{
com.badlogic.gdx.graphics.g2d.GlyphLayout[] __param2 = new com.badlogic.gdx.graphics.g2d.GlyphLayout[1];
__param2[0] = gl;
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = word;
java.lang.StringBuilder[] __param4 = new java.lang.StringBuilder[1];
__param4[0] = sbuilder;
float[] __param5 = new float[1];
__param5[0] = currentWidth;
int[] __param6 = new int[1];
__param6[0] = numLines;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIconsCN$AlterIconDescriptionSize.Insert($0, __param2, __param3, __param4, __param5, __param6, CN_DESC_BOX_WIDTH);
gl = __param2[0];
word = __param3[0];
sbuilder = __param4[0];
currentWidth = __param5[0];
numLines = __param6[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$StupidFuckingUpdateBullshitImSoMadDontChangeThisClassNameKio]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 283...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$StupidFuckingUpdateBullshitImSoMadDontChangeThisClassNameKio.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnPlayerDeathPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1874...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnPlayerDeathPatch.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderInLibraryUpgrade]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderInLibrary(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1241...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderInLibraryUpgrade.Insert($0, $1, copy);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3244...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.singleGive($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3265...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.singleFinalReceive($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.AutoplayPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2069...

{
com.evacipated.cardcrawl.mod.stslib.patches.AutoplayPatch.Insert($0, $1, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.ClickableRelicUpdatePatch]
 - Patching [com.megacrit.cardcrawl.core.OverlayMenu.update()]
 - Adding Insert @ 71...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.ClickableRelicUpdatePatch.Insert($0, r);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3244...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamage.single($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$ForceNormalUpgrade]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 169...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$ForceNormalUpgrade.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$GrabCardInUse]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Insert @ 1698...

{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$GrabCardInUse.RememberCardPreUseCall($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnDrawCard]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2074...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnDrawCard.onDraw($0, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackMonster]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 789...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackMonster.onAttack($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearContainerOnDeath]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 842...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearContainerOnDeath.byeByeContainers($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIcons]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCard(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,boolean)]
 - Adding Insert @ 1300...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIcons.patch($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIcon]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2239...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIcon.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.CardSpawnModificationPatch]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Insert @ r45 (abs:1837)...

{
com.megacrit.cardcrawl.cards.AbstractCard[] __param0 = new com.megacrit.cardcrawl.cards.AbstractCard[1];
__param0[0] = card;
boolean[] __param1 = new boolean[1];
__param1[0] = containsDupe;
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.CardSpawnModificationPatch.patch(__param0, __param1, retVal);
card = __param0[0];
containsDupe = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$SingleCardViewRenderIconOnTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Insert @ 195...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$SingleCardViewRenderIconOnTips.patch($1, $2, $3, $4, tip);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.clickAndDragCards()]
 - Adding Insert @ 1497...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow.reallyNeedATarget($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.AlwaysRetainPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnCards()]
 - Adding Insert @ 2519...
Adding Insert @ 2524...
Adding Insert @ 2529...

{
com.evacipated.cardcrawl.mod.stslib.patches.AlwaysRetainPatch.Insert($0, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnUseCard]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 64...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnUseCard.onUseCardMonster($0, $1, $2, m);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$DontYeetPowerIcon]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Insert @ 195...

{
com.megacrit.cardcrawl.helpers.PowerTip[] __param5 = new com.megacrit.cardcrawl.helpers.PowerTip[1];
__param5[0] = tip;
com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$DontYeetPowerIcon.StopThat($1, $2, $3, $4, __param5);
tip = __param5[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddBlockMakePlaceHolderIfNeeded]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Insert @ 499...

{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddBlockMakePlaceHolderIfNeeded.pls($0, $1, tmp);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.calculateDamage(int)]
 - Adding Insert @ 1324...

{
float[] __param1 = new float[1];
__param1[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches.finalGive($0, __param1);
tmp = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderKeywordsForSingleCardViewPopup]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1779...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderKeywordsForSingleCardViewPopup.patch($0, $1, card);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$NormalPotions]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 256...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$NormalPotions.Insert($0, potion);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3302...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ModifyDamage.multi($0, $1, tmp, i, m);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnHeal]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.heal(int,boolean)]
 - Adding Insert @ 447...

{
int[] __param1 = new int[1];
__param1[0] = $1;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnHeal.healthTime($0, __param1);
$1 = (int)__param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTop]
 - SpirePatch2
 - Patching [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Prefix(float,float[],com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 99...

{
java.util.List[] __param1 = new java.util.List[1];
__param1[0] = tooltips;
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTop.part2($5, __param1);
tooltips = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.NeutralPowertypePatch$NoApplicationEffect]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 257...
Adding Insert @ 294...

{
com.evacipated.cardcrawl.mod.stslib.patches.NeutralPowertypePatch$NoApplicationEffect.patch($0, powerToApply);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnSmithRelicPatch]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireSmithEffect.update()]
 - Adding Insert @ 58...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnSmithRelicPatch.Insert($0, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 799...

{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster.onLastDamageTakenUpdate($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3331...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageGivePatches.multiFinalReceive($0, $1, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.calculateDamage(int)]
 - Adding Insert @ 1304...

{
float[] __param1 = new float[1];
__param1[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$PlayerDamageReceivePatches.give($0, __param1);
tmp = __param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$NormalPotions]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 288...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnUsePotionPatch$NormalPotions.Insert($0, potion);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.RenderTempHPOutline]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1030...

{
com.evacipated.cardcrawl.mod.stslib.patches.tempHp.RenderTempHPOutline.Insert($0, $1, x, y);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIcon]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2443...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
com.evacipated.cardcrawl.mod.stslib.patches.CardDescriptionCustomIcons$RenderSmallIcon.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.BetterOnExhaustPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 946...

{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.BetterOnExhaustPatch.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1769...

{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackPlayer.onAttack($0, $1, damageAmount);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.RelicOnChannelPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Insert @ 2904...

{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.RelicOnChannelPatch.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIconsInLibrary]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderInLibrary(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1248...

{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIconsInLibrary.patch($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 772...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster.toChangeDamage($0, $1, __param3);
damageAmount = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainCardsSelectPatch$Before]
 - Patching [com.megacrit.cardcrawl.actions.unique.RetainCardsAction.update()]
 - Adding Insert @ 25...

{
com.evacipated.cardcrawl.mod.stslib.patches.RetainCardsSelectPatch$Before.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.clickAndDragCards()]
 - Adding Insert @ 1370...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow.keyboardModeAutotarget($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$DontMakeNewLine]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.getSmartHeight(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float)]
 - Adding Insert @ 1063...

{
float[] __param5 = new float[1];
__param5[0] = curWidth;
java.lang.String[] __param7 = new java.lang.String[1];
__param7[0] = word;
com.evacipated.cardcrawl.mod.stslib.patches.TipBoxCustomIcons$DontMakeNewLine.IfThereIsAnIcon($1, $2, $3, $4, __param5, curHeight, __param7);
curWidth = __param5[0];
word = __param7[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$ConfirmUpgrade]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 297...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$ConfirmUpgrade.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.PlayerDamage]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1742...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
boolean[] __param4 = new boolean[1];
__param4[0] = hadBlock;
com.evacipated.cardcrawl.mod.stslib.patches.tempHp.PlayerDamage.Insert($0, $1, __param3, __param4);
damageAmount = __param3[0];
hadBlock = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.PlayerDamage]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1895...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.tempHp.PlayerDamage.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorFrame]
 - Patching [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Frame.Insert(com.megacrit.cardcrawl.cards.AbstractCard,com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float[],float[])]
 - Adding Insert @ 91...

{
java.util.List[] __param7 = new java.util.List[1];
__param7[0] = descriptors;
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddDescriptorFrame.pls($1, $2, $3, $4, $5, $6, __param7);
descriptors = __param7[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.GravePatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.initializeDeck(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Insert @ r4 (abs:1033)...

{
com.evacipated.cardcrawl.mod.stslib.patches.GravePatch.Insert($0, $1, copy);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CopiesRetainBranchUpgrade]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Insert @ 980...
Adding Insert @ 987...
Adding Insert @ 987...

{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CopiesRetainBranchUpgrade.Insert($0, card);
}

Patch Class: [aspiration.patches.blight.OnAfterChestOpenBlightPatch]
 - Patching [com.megacrit.cardcrawl.rewards.chests.AbstractChest.open(boolean)]
 - Adding Insert @ 127...

{
aspiration.patches.blight.OnAfterChestOpenBlightPatch.patch($0, $1);
}

Patch Class: [aspiration.relics.common.VileToxins$FixPoisonHealthDamageRender]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderRedHealthBar(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Insert @ 1250...

{
int[] __param0 = new int[1];
__param0[0] = poisonAmt;
aspiration.relics.common.VileToxins$FixPoisonHealthDamageRender.patch(__param0);
poisonAmt = __param0[0];
}

Patch Class: [aspiration.patches.Unique.RunicSpoonPatches$PlayerPlayCardDetection]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.playCard()]
 - Adding Insert @ 1607...
Adding Insert @ 1609...

{
aspiration.patches.Unique.RunicSpoonPatches$PlayerPlayCardDetection.insert($0);
}

Patch Class: [aspiration.patches.Unique.DSixRewardScreenTriggerPatch$CallingbellCompat]
 - Patching [com.megacrit.cardcrawl.relics.CallingBell.update()]
 - Adding Insert @ 58...

{
aspiration.patches.Unique.DSixRewardScreenTriggerPatch$CallingbellCompat.patch($0);
}

Patch Class: [aspiration.patches.RelicPreviewPatch]
 - Patching [com.megacrit.cardcrawl.events.GenericEventDialog.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r70 (abs:497)...

{
aspiration.patches.RelicPreviewPatch.Insert($0, $1);
}

Patch Class: [aspiration.patches.hooks.AtEndOfRoundRelicPatch]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Insert @ 414...

{
aspiration.patches.hooks.AtEndOfRoundRelicPatch.patch($0);
}

Patch Class: [aspiration.patches.hooks.OnOrbSlotChangeRelicPatch$DecreaseMaxOrbSlots]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.decreaseMaxOrbSlots(int)]
 - Adding Insert @ r0 (abs:2948)...

{
aspiration.patches.hooks.OnOrbSlotChangeRelicPatch$DecreaseMaxOrbSlots.Insert($0, $1);
}

Patch Class: [aspiration.patches.hooks.OnOrbSlotChangeRelicPatch$IncreaseMaxOrbSlots]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.increaseMaxOrbSlots(int,boolean)]
 - Adding Insert @ r0 (abs:2930)...

{
aspiration.patches.hooks.OnOrbSlotChangeRelicPatch$IncreaseMaxOrbSlots.Insert($0, $1, $2);
}

Patch Class: [aspiration.relics.common.VileToxins$FixPoisonHealthDamageRender]
 - SpirePatch2
 - Patching [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$RenderPowerHealthBar.Insert(com.megacrit.cardcrawl.core.AbstractCreature,com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float,float)]
 - Adding Insert @ 36...

{
int[] __param0 = new int[1];
__param0[0] = poisonAmt;
aspiration.relics.common.VileToxins$FixPoisonHealthDamageRender.patch(__param0);
poisonAmt = __param0[0];
}

Patch Class: [aspiration.patches.NecronomiconEventPatch]
 - Patching [com.megacrit.cardcrawl.events.city.CursedTome.randomBook()]
 - Adding Insert @ 154...

{
java.util.ArrayList[] __param2 = new java.util.ArrayList[1];
__param2[0] = possibleBooks;
aspiration.patches.NecronomiconEventPatch.Insert($0, __param2);
possibleBooks = __param2[0];
}

Patch Class: [aspiration.patches.Unique.BursterCorePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Insert @ 2923...

{
aspiration.patches.Unique.BursterCorePatch.Insert($0, $1);
}

Patch Class: [aspiration.relics.boss.Mageblood$RarePotionWarningReward]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 568...

{
aspiration.relics.boss.Mageblood$RarePotionWarningReward.patch($0, $1);
}

Patch Class: [betterAltar.patches.VampiresPatch$FunctionPatch]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires.buttonEffect(int)]
 - Adding Insert @ 80...

{
betterAltar.patches.VampiresPatch$FunctionPatch.Insert($0, $1, hasVial);
}

Patch Class: [betterAltar.patches.PotionMetricPatch$FloorPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 282...

{
betterAltar.patches.PotionMetricPatch$FloorPatch.Insert($0, potion);
}

Patch Class: [betterAltar.patches.VampiresPatch$OptionPatch]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires()]
 - Adding Insert @ 44...
Adding Insert @ 47...

{
betterAltar.patches.VampiresPatch$OptionPatch.Insert($0, hasVial);
}

Patch Class: [betterAltar.patches.VampiresPatch$FunctionPatch]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires.buttonEffect(int)]
 - Adding Insert @ 83...

{
betterAltar.patches.VampiresPatch$FunctionPatch.Insert2($0, $1, hasVial);
}

Patch Class: [betterMatch.patches.LibraryPatch$RemovePatch2]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.didChangeTab(com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar,com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab)]
 - Adding Insert @ 533...

{
betterMatch.patches.LibraryPatch$RemovePatch2.Insert($0, $1, $2, visibleCards);
}

Patch Class: [betterNote.patches.CardSavePatch$SavePatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.nextRoomTransition(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 2133...

{
betterNote.patches.CardSavePatch$SavePatch.Insert($0, $1);
}

Patch Class: [betterNote.patches.NotePatch$NotePatchChance]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getShrine(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2437...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = tmpKey;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterNote.patches.NotePatch$NotePatchChance.Insert($1, __param2, specialOneTimeEventList);
tmpKey = __param2[0];
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [betterStone.patches.EventSelectionPatch$EventOdds]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2492...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = tmpKey;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterStone.patches.EventSelectionPatch$EventOdds.Insert($1, __param2);
tmpKey = __param2[0];
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [betterStone.patches.CardSavePatch$SavePatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.nextRoomTransition(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 2133...

{
betterStone.patches.CardSavePatch$SavePatch.Insert($0, $1);
}

Patch Class: [betterThird.patches.EventOptionColorPatch$trimPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 955...

{
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = word;
betterThird.patches.EventOptionColorPatch$trimPatch.Insert($1, $2, $3, $4, $5, $6, $7, $8, __param9);
word = __param9[0];
}

Patch Class: [betterThird.patches.MaskedBanditsPatch$buttonPatch]
 - Patching [com.megacrit.cardcrawl.events.city.MaskedBandits.buttonEffect(int)]
 - Adding Insert @ 59...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterThird.patches.MaskedBanditsPatch$buttonPatch.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [betterThird.patches.FaceTraderPatch$maskPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.FaceTrader.getRandomFace()]
 - Adding Insert @ 131...

{
java.util.ArrayList[] __param2 = new java.util.ArrayList[1];
__param2[0] = ids;
betterThird.patches.FaceTraderPatch$maskPatch.Insert($0, __param2);
ids = __param2[0];
}

Patch Class: [betterThird.patches.EventOptionColorPatch$fontPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.identifyColor(java.lang.String)]
 - Adding Insert @ r0 (abs:1217)...

{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterThird.patches.EventOptionColorPatch$fontPatch.Insert(__param1);
$1 = (java.lang.String)__param1[0];
if (opt.isPresent()) { return (com.badlogic.gdx.graphics.Color)opt.get(); }
}

Patch Class: [Better_Vampires.patches.VampiresPatches$Vampires_replaceAttacks_Patch]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires.replaceAttacks()]
 - Adding Insert @ r9 (abs:123)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = Better_Vampires.patches.VampiresPatches$Vampires_replaceAttacks_Patch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [coloredmap.patches.com.megacrit.cardcrawl.map.MapRoomNode.IconOutlineHook]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 465...

{
coloredmap.patches.com.megacrit.cardcrawl.map.MapRoomNode.IconOutlineHook.Insert($0, $1, room);
}

Patch Class: [coloredmap.patches.com.megacrit.cardcrawl.map.MapRoomNode.IconColorHook]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 513...

{
coloredmap.patches.com.megacrit.cardcrawl.map.MapRoomNode.IconColorHook.Insert($0, $1, room);
}

Patch Class: [coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2212...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = tips;
coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles.Insert($0, $1, __param3);
tips = __param3[0];
}

Patch Class: [coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 320...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = tips;
coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles.Insert($0, $1, __param3);
tips = __param3[0];
}

Patch Class: [coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 827...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = tips;
coloredPowertips.patches.ColoredPowerPowertips$ManipulateTitles.Insert($0, $1, __param3);
tips = __param3[0];
}

Patch Class: [coloredPowertips.patches.ColoredPowerPowertips$ColorChanger]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipBox(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,java.lang.String)]
 - Adding Insert @ 302...

{
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = description;
coloredPowertips.patches.ColoredPowerPowertips$ColorChanger.patch($1, $2, $3, $4, $5, __param6);
description = __param6[0];
}

Patch Class: [conspire.patches.TopHatDrawCardActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.ScrapeAction.update()]
 - Adding Insert @ 73...

{
conspire.patches.TopHatDrawCardActionPatch.Insert($0);
}

Patch Class: [conspire.patches.PoisonWeaponsPowerPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 790...

{
int[] __param4 = new int[1];
__param4[0] = damageAmount;
conspire.patches.PoisonWeaponsPowerPatch.Insert($0, $1, p, __param4);
damageAmount = __param4[0];
}

Patch Class: [conspire.patches.OrnateMirrorApplyPowerActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 159...

{
conspire.patches.OrnateMirrorApplyPowerActionPatch.Insert($0);
}

Patch Class: [conspire.patches.TopHatDrawCardActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DrawCardAction.update()]
 - Adding Insert @ 105...

{
conspire.patches.TopHatDrawCardActionPatch.Insert($0);
}

Patch Class: [conspire.patches.HolyPowerPatch$RenderRedHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderRedHealthBar(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Insert @ 1250...

{
int[] __param5 = new int[1];
__param5[0] = poisonAmt;
conspire.patches.HolyPowerPatch$RenderRedHealthBar.Insert($0, $1, $2, $3, __param5);
poisonAmt = __param5[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.NailsmithPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateMap()]
 - Adding Insert @ 655...

{
com.evacipated.cardcrawl.mod.hubris.patches.NailsmithPatch.AddNailsmithRoom();
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 863...

{
com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch.InsertImageStart($0, $1, atlas);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.EvacipatedBoxPatch$Open]
 - Patching [com.megacrit.cardcrawl.screens.select.BossRelicSelectScreen.open(java.util.ArrayList)]
 - Adding Insert @ 479...

{
com.evacipated.cardcrawl.mod.hubris.patches.EvacipatedBoxPatch$Open.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.FixLargeRelicArt]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.initializeLargeImg()]
 - Adding Insert @ r0 (abs:123)...

{
com.badlogic.gdx.graphics.Texture[] __param3 = new com.badlogic.gdx.graphics.Texture[1];
__param3[0] = largeImg;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.FixLargeRelicArt.Insert($0, relic, __param3);
largeImg = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 889...

{
com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch.InsertSkeletonEnd($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$Render]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2704...

{
com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$Render.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$ApplyPowersMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3192...

{
com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$ApplyPowersMulti.Insert($0, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DiscoveryColorPatch]
 - Patching [com.megacrit.cardcrawl.screens.CardRewardScreen.discoveryOpen()]
 - Adding Insert @ 893...

{
com.evacipated.cardcrawl.mod.hubris.patches.DiscoveryColorPatch.Insert($0, derp);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 888...

{
com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch.InsertSkeletonStart($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DespairPatch$EmptyDeckShuffle]
 - Patching [com.megacrit.cardcrawl.actions.common.EmptyDeckShuffleAction.update()]
 - Adding Insert @ 52...

{
com.evacipated.cardcrawl.mod.hubris.patches.DespairPatch$EmptyDeckShuffle.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TowelPatch]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.update()]
 - Adding Insert @ 453...

{
com.evacipated.cardcrawl.mod.hubris.patches.TowelPatch.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$PlayingCardMapPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.initializeDeck(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Insert @ 1031...

{
com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$PlayingCardMapPatch.Insert($0, $1, copy);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$IncreaseMisc]
 - Patching [com.megacrit.cardcrawl.actions.defect.IncreaseMiscAction.update()]
 - Adding Insert @ 24...

{
com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$IncreaseMisc.Insert($0, uuid, c, miscIncrease);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$CalculateCardMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3351...

{
com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$CalculateCardMulti.Insert($0, $1, tmp, i);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$CalculateCardSingle]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3278...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$CalculateCardSingle.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.monsters.MonsterGroup.ReverseRender]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r5 (abs:399)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.monsters.MonsterGroup.ReverseRender.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$Retain]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnCards()]
 - Adding Insert @ 2519...
Adding Insert @ 2524...
Adding Insert @ 2529...

{
com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$Retain.Insert($0, c);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TheLibraryNewOption$ChangeOptionEffect]
 - Patching [com.megacrit.cardcrawl.events.city.TheLibrary.buttonEffect(int)]
 - Adding Insert @ 74...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.TheLibraryNewOption$ChangeOptionEffect.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DespairPatch$Shuffle]
 - Patching [com.megacrit.cardcrawl.actions.common.ShuffleAction.update()]
 - Adding Insert @ 32...

{
com.evacipated.cardcrawl.mod.hubris.patches.DespairPatch$Shuffle.Insert($0, group);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$SetSlotPosition]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Insert @ 133...

{
float[] __param4 = new float[1];
__param4[0] = tY;
com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$SetSlotPosition.ChangeY($0, $1, $2, __param4);
tY = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 916...

{
com.evacipated.cardcrawl.mod.hubris.patches.UndeadRenderPatch.InsertImageEnd($0, $1, atlas);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$DeckViewButton]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updateDeckViewButtonLogic()]
 - Adding Insert @ 822...

{
boolean[] __param2 = new boolean[1];
__param2[0] = deckButtonDisabled;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$DeckViewButton.Insert($0, __param2);
deckButtonDisabled = __param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.FixSingleCardViewCurseBack]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardBack(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r1 (abs:429)...

{
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[] __param4 = new com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[1];
__param4[0] = tmpImg;
com.evacipated.cardcrawl.mod.hubris.patches.FixSingleCardViewCurseBack.Insert($0, $1, card, __param4);
tmpImg = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DrawCardActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DrawCardAction.update()]
 - Adding Insert @ 149...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.DrawCardActionPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.GreedPatch]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.applyGoldBonus(boolean)]
 - Adding Insert @ 123...

{
com.evacipated.cardcrawl.mod.hubris.patches.GreedPatch.Insert($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TheBottlerPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2487...

{
com.evacipated.cardcrawl.mod.hubris.patches.TheBottlerPatch.Insert($1, tmp);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$ApplyPowersSingle]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3139...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$ApplyPowersSingle.Insert($0, __param2);
tmp = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MercantilePatch$ClearBaseStarterDeck]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeStarterDeck()]
 - Adding Insert @ 415...

{
boolean[] __param2 = new boolean[1];
__param2[0] = addBaseCards;
com.evacipated.cardcrawl.mod.hubris.patches.MercantilePatch$ClearBaseStarterDeck.Insert($0, __param2);
addBaseCards = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.relics.R64BitClover$RenderOutlineNotSeenSingle]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderRelicImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r0 (abs:544)...

{
com.evacipated.cardcrawl.mod.hubris.relics.R64BitClover$RenderOutlineNotSeenSingle.Insert($0, $1, relic);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MercantilePatch]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.addNonDailyMods(com.megacrit.cardcrawl.trials.CustomTrial,java.util.ArrayList)]
 - Adding Insert @ r1 (abs:509)...

{
com.evacipated.cardcrawl.mod.hubris.patches.MercantilePatch.Insert($0, $1, $2, modId);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MerchantBossPatch]
 - Patching [com.megacrit.cardcrawl.rooms.MonsterRoomBoss.onPlayerEntry()]
 - Adding Insert @ r1 (abs:21)...

{
com.evacipated.cardcrawl.mod.hubris.patches.MerchantBossPatch.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$DamageInfoApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.DamageInfo.applyPowers(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 86...
Adding Insert @ 131...

{
float[] __param4 = new float[1];
__param4[0] = tmp;
com.evacipated.cardcrawl.mod.hubris.patches.PureNailPatch$DamageInfoApplyPowers.Insert($0, $1, $2, __param4);
tmp = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DeadTorchPatch]
 - Patching [com.megacrit.cardcrawl.vfx.scene.InteractableTorchEffect.update()]
 - Adding Insert @ r2 (abs:77)...

{
com.evacipated.cardcrawl.mod.hubris.patches.DeadTorchPatch.Insert($0, activated);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$Update]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Insert @ 2528...

{
com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$Update.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeRenderCardBg]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r1 (abs:339)...

{
com.megacrit.cardcrawl.cards.AbstractCard[] __param3 = new com.megacrit.cardcrawl.cards.AbstractCard[1];
__param3[0] = card;
com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeRenderCardBg.Insert1($0, $1, __param3);
card = __param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$MapButton]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updateMapButtonLogic()]
 - Adding Insert @ 917...

{
boolean[] __param2 = new boolean[1];
__param2[0] = mapButtonDisabled;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$MapButton.Insert($0, __param2);
mapButtonDisabled = __param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$SetSlotPosition]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Insert @ r1 (abs:121)...

{
float[] __param4 = new float[1];
__param4[0] = dist;
com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$SetSlotPosition.ChangeDist($0, $1, $2, __param4);
dist = __param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$UseEnergy]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Insert @ 1710...

{
com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$UseEnergy.Insert($0, $1, $2, $3);
}

Patch Class: [relicstats.patches.relics.GamblingChipInfo]
 - Patching [com.megacrit.cardcrawl.actions.unique.GamblingChipAction.update()]
 - Adding Insert @ 52...

{
relicstats.patches.relics.GamblingChipInfo.after($0);
}

Patch Class: [relicstats.patches.relics.RegalPillowInfo]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireSleepEffect()]
 - Adding Insert @ 65...

{
relicstats.patches.relics.RegalPillowInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.GoldenIdolInfo]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.applyGoldBonus(boolean)]
 - Adding Insert @ 127...

{
relicstats.patches.relics.GoldenIdolInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.GoldenEyeInfo]
 - Patching [com.megacrit.cardcrawl.actions.utility.ScryAction(int)]
 - Adding Insert @ 23...

{
relicstats.patches.relics.GoldenEyeInfo.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.SozuInfo$KnowingSkullPatch]
 - Patching [com.megacrit.cardcrawl.events.city.KnowingSkull.obtainReward(int)]
 - Adding Insert @ 151...

{
relicstats.patches.relics.SozuInfo$KnowingSkullPatch.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.CentennialPuzzleInfo]
 - Patching [com.megacrit.cardcrawl.relics.CentennialPuzzle.wasHPLost(int)]
 - Adding Insert @ 36...

{
relicstats.patches.relics.CentennialPuzzleInfo.before($0, $1);
}

Patch Class: [relicstats.patches.relics.GoldPlatedCablesInfo$TriggerEndOfTurnOrbsActionCablesPatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.TriggerEndOfTurnOrbsAction.update()]
 - Adding Insert @ 23...

{
relicstats.patches.relics.GoldPlatedCablesInfo$TriggerEndOfTurnOrbsActionCablesPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.ShovelInfo]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireDigEffect.update()]
 - Adding Insert @ 53...

{
relicstats.patches.relics.ShovelInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.FrozenCoreInfo]
 - Patching [com.megacrit.cardcrawl.relics.FrozenCore.onPlayerEndTurn()]
 - Adding Insert @ 21...

{
relicstats.patches.relics.FrozenCoreInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$RelicPurchasePatch]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic.purchaseRelic()]
 - Adding Insert @ 97...

{
relicstats.patches.relics.MembershipCardInfo$RelicPurchasePatch.insert($0);
}

Patch Class: [relicstats.patches.relics.BirdFacedUrnInfo]
 - Patching [com.megacrit.cardcrawl.relics.BirdFacedUrn.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 27...

{
relicstats.patches.relics.BirdFacedUrnInfo.before($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.BirdFacedUrnInfo]
 - Patching [com.megacrit.cardcrawl.relics.BirdFacedUrn.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 29...

{
relicstats.patches.relics.BirdFacedUrnInfo.after($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.GingerInfo]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 178...

{
relicstats.patches.relics.GingerInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.BottledFlameInfo]
 - Patching [com.megacrit.cardcrawl.relics.BottledFlame.update()]
 - Adding Insert @ 73...

{
relicstats.patches.relics.BottledFlameInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.WarPaintInfo]
 - Patching [com.megacrit.cardcrawl.relics.WarPaint.onEquip()]
 - Adding Insert @ 37...

{
relicstats.patches.relics.WarPaintInfo.insert($0, upgradableCards);
}

Patch Class: [relicstats.patches.relics.PreservedInsectInfo]
 - Patching [com.megacrit.cardcrawl.relics.PreservedInsect.atBattleStart()]
 - Adding Insert @ 27...

{
relicstats.patches.relics.PreservedInsectInfo.beforeHp($0, m);
}

Patch Class: [relicstats.patches.relics.RunicCubeInfo]
 - Patching [com.megacrit.cardcrawl.relics.RunicCube.wasHPLost(int)]
 - Adding Insert @ 26...

{
relicstats.patches.relics.RunicCubeInfo.before($0, $1);
}

Patch Class: [relicstats.patches.relics.GoldPlatedCablesInfo$DarkImpulseActionCablesPatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.DarkImpulseAction.update()]
 - Adding Insert @ 32...

{
relicstats.patches.relics.GoldPlatedCablesInfo$DarkImpulseActionCablesPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$RelicRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.getNewPrice(com.megacrit.cardcrawl.shop.StoreRelic)]
 - Adding Insert @ 445...

{
relicstats.patches.relics.MembershipCardInfo$RelicRestockPatch.insert($0, $1, retVal);
}

Patch Class: [relicstats.patches.relics.IceCreamInfo]
 - Patching [com.megacrit.cardcrawl.core.EnergyManager.recharge()]
 - Adding Insert @ 37...

{
relicstats.patches.relics.IceCreamInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.InserterInfo]
 - Patching [com.megacrit.cardcrawl.relics.Inserter.atTurnStart()]
 - Adding Insert @ 36...

{
relicstats.patches.relics.InserterInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.TungstenRodInfo]
 - Patching [com.megacrit.cardcrawl.relics.TungstenRod.onLoseHpLast(int)]
 - Adding Insert @ 18...

{
relicstats.patches.relics.TungstenRodInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.GoldPlatedCablesInfo$AbstractPlayerCablesPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnOrbs()]
 - Adding Insert @ 2974...

{
relicstats.patches.relics.GoldPlatedCablesInfo$AbstractPlayerCablesPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.CentennialPuzzleInfo]
 - Patching [com.megacrit.cardcrawl.relics.CentennialPuzzle.wasHPLost(int)]
 - Adding Insert @ 39...

{
relicstats.patches.relics.CentennialPuzzleInfo.after($0, $1);
}

Patch Class: [relicstats.patches.relics.DualityInfo]
 - Patching [com.megacrit.cardcrawl.relics.Duality.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 28...

{
relicstats.patches.relics.DualityInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.EmotionChipInfo]
 - Patching [com.megacrit.cardcrawl.actions.defect.ImpulseAction.update()]
 - Adding Insert @ 21...

{
relicstats.patches.relics.EmotionChipInfo.insert($0, o);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$PotionPurchasePatch]
 - Patching [com.megacrit.cardcrawl.shop.StorePotion.purchasePotion()]
 - Adding Insert @ 94...

{
relicstats.patches.relics.MembershipCardInfo$PotionPurchasePatch.insert($0);
}

Patch Class: [relicstats.patches.SingleRelicViewPopupPatch]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 812...

{
relicstats.patches.SingleRelicViewPopupPatch.patch($0, $1, t);
}

Patch Class: [relicstats.patches.relics.DarkstonePeriaptInfo]
 - Patching [com.megacrit.cardcrawl.relics.DarkstonePeriapt.onObtainCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 23...
Adding Insert @ 24...
Adding Insert @ 26...

{
relicstats.patches.relics.DarkstonePeriaptInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.NlothsGiftInfo]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.getCardRarity(int,boolean)]
 - Adding Insert @ 193...

{
relicstats.patches.relics.NlothsGiftInfo.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.StoneCalendarInfo]
 - Patching [com.megacrit.cardcrawl.relics.StoneCalendar.onPlayerEndTurn()]
 - Adding Insert @ 40...

{
relicstats.patches.relics.StoneCalendarInfo.before($0);
}

Patch Class: [relicstats.patches.relics.StrangeSpoonInfo]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Insert @ 134...

{
relicstats.patches.relics.StrangeSpoonInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.GamblingChipInfo]
 - Patching [com.megacrit.cardcrawl.actions.unique.GamblingChipAction.update()]
 - Adding Insert @ 51...

{
relicstats.patches.relics.GamblingChipInfo.before($0);
}

Patch Class: [relicstats.patches.relics.SundialInfo]
 - Patching [com.megacrit.cardcrawl.relics.Sundial.onShuffle()]
 - Adding Insert @ 42...

{
relicstats.patches.relics.SundialInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.TurnipInfo]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 188...

{
relicstats.patches.relics.TurnipInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.ToriiInfo]
 - Patching [com.megacrit.cardcrawl.relics.Torii.onAttacked(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Insert @ 27...

{
relicstats.patches.relics.ToriiInfo.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.AstrolabeInfo]
 - Patching [com.megacrit.cardcrawl.relics.Astrolabe.giveCards(java.util.ArrayList)]
 - Adding Insert @ 89...

{
relicstats.patches.relics.AstrolabeInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.RunicCubeInfo]
 - Patching [com.megacrit.cardcrawl.relics.RunicCube.wasHPLost(int)]
 - Adding Insert @ 28...

{
relicstats.patches.relics.RunicCubeInfo.after($0, $1);
}

Patch Class: [relicstats.patches.relics.UnceasingTopInfo]
 - Patching [com.megacrit.cardcrawl.relics.UnceasingTop.onRefreshHand()]
 - Adding Insert @ 46...

{
relicstats.patches.relics.UnceasingTopInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.StoneCalendarInfo]
 - Patching [com.megacrit.cardcrawl.relics.StoneCalendar.onPlayerEndTurn()]
 - Adding Insert @ 48...

{
relicstats.patches.relics.StoneCalendarInfo.after($0);
}

Patch Class: [relicstats.patches.relics.FossilizedHelixInfo$BufferPatch]
 - Patching [com.megacrit.cardcrawl.powers.BufferPower.onAttackedToChangeDamage(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Insert @ 42...

{
relicstats.patches.relics.FossilizedHelixInfo$BufferPatch.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.GiryaInfo]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireLiftEffect.update()]
 - Adding Insert @ 45...

{
relicstats.patches.relics.GiryaInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.WingBootsInfo]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.update()]
 - Adding Insert @ 293...

{
relicstats.patches.relics.WingBootsInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.SozuInfo$EntropicBrewPatch]
 - Patching [com.megacrit.cardcrawl.potions.EntropicBrew.use(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 47...

{
relicstats.patches.relics.SozuInfo$EntropicBrewPatch.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.SneckoInfo]
 - Patching [com.megacrit.cardcrawl.powers.ConfusionPower.onCardDraw(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 34...

{
relicstats.patches.relics.SneckoInfo.patch($0, $1, newCost);
}

Patch Class: [relicstats.patches.relics.CauldronInfo$CauldronPatch]
 - Patching [com.megacrit.cardcrawl.relics.Cauldron.onEquip()]
 - Adding Insert @ 26...

{
relicstats.patches.relics.CauldronInfo$CauldronPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.EctoplasmInfo]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.gainGold(int)]
 - Adding Insert @ 856...

{
relicstats.patches.relics.EctoplasmInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.MagicFlowerInfo$FlowerPatch]
 - Patching [com.megacrit.cardcrawl.relics.MagicFlower.onPlayerHeal(int)]
 - Adding Insert @ 24...

{
relicstats.patches.relics.MagicFlowerInfo$FlowerPatch.before($0, $1);
}

Patch Class: [relicstats.patches.relics.BootInfo]
 - Patching [com.megacrit.cardcrawl.relics.Boot.onAttackToChangeDamage(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Insert @ 27...

{
relicstats.patches.relics.BootInfo.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.BronzeScalesInfo]
 - Patching [com.megacrit.cardcrawl.powers.ThornsPower.onAttacked(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Insert @ 44...

{
relicstats.patches.relics.BronzeScalesInfo.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.MedicalKitInfo]
 - Patching [com.megacrit.cardcrawl.relics.MedicalKit.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 27...

{
relicstats.patches.relics.MedicalKitInfo.insert($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.applyDiscount(float,boolean)]
 - Adding Insert @ 381...
Adding Insert @ 384...

{
relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch.cardPricePatch($0, $1, $2, c);
}

Patch Class: [relicstats.patches.relics.OrnamentalFanInfo]
 - Patching [com.megacrit.cardcrawl.relics.OrnamentalFan.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 34...

{
relicstats.patches.relics.OrnamentalFanInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.BlueCandleInfo]
 - Patching [com.megacrit.cardcrawl.relics.BlueCandle.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 31...

{
relicstats.patches.relics.BlueCandleInfo.insert($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.BottledTornadoInfo]
 - Patching [com.megacrit.cardcrawl.relics.BottledTornado.update()]
 - Adding Insert @ 75...

{
relicstats.patches.relics.BottledTornadoInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.NilrysCodexInfo]
 - Patching [com.megacrit.cardcrawl.actions.unique.CodexAction.update()]
 - Adding Insert @ 35...

{
relicstats.patches.relics.NilrysCodexInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.BottledLightningInfo]
 - Patching [com.megacrit.cardcrawl.relics.BottledLightning.update()]
 - Adding Insert @ 74...

{
relicstats.patches.relics.BottledLightningInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.ShurikenInfo]
 - Patching [com.megacrit.cardcrawl.relics.Shuriken.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 38...

{
relicstats.patches.relics.ShurikenInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.applyDiscount(float,boolean)]
 - Adding Insert @ 375...

{
relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch.relicPricePatch($0, $1, $2, r);
}

Patch Class: [relicstats.patches.relics.VioletLotusInfo]
 - Patching [com.megacrit.cardcrawl.relics.VioletLotus.onChangeStance(com.megacrit.cardcrawl.stances.AbstractStance,com.megacrit.cardcrawl.stances.AbstractStance)]
 - Adding Insert @ 22...

{
relicstats.patches.relics.VioletLotusInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.SneckoSkullInfo]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.powers.AbstractPower,int,boolean,com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect)]
 - Adding Insert @ 72...

{
relicstats.patches.relics.SneckoSkullInfo.insert($0, $1, $2, $3, $4, $5, $6);
}

Patch Class: [relicstats.patches.relics.JuzuBraceletInfo]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.roll(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 212...

{
relicstats.patches.relics.JuzuBraceletInfo.patch($1);
}

Patch Class: [relicstats.patches.relics.GoldPlatedCablesInfo$ImpulseActionCablesPatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.ImpulseAction.update()]
 - Adding Insert @ 28...

{
relicstats.patches.relics.GoldPlatedCablesInfo$ImpulseActionCablesPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.MummifiedHandInfo]
 - Patching [com.megacrit.cardcrawl.relics.MummifiedHand.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 64...

{
relicstats.patches.relics.MummifiedHandInfo.insert($0, $1, $2, c);
}

Patch Class: [relicstats.patches.relics.ArtOfWarInfo]
 - Patching [com.megacrit.cardcrawl.relics.ArtOfWar.atTurnStart()]
 - Adding Insert @ 59...

{
relicstats.patches.relics.ArtOfWarInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.DreamCatcherInfo]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireSleepEffect.update()]
 - Adding Insert @ 93...

{
relicstats.patches.relics.DreamCatcherInfo.insert($0);
}

Patch Class: [relicstats.patches.RunHistoryScreenPatch$RefreshDataPatch]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.refreshData()]
 - Adding Insert @ 207...

{
relicstats.patches.RunHistoryScreenPatch$RefreshDataPatch.insert($0, file, data);
}

Patch Class: [relicstats.patches.relics.SozuInfo$RewardItemPatch]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.claimReward()]
 - Adding Insert @ 309...

{
relicstats.patches.relics.SozuInfo$RewardItemPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.PenNibInfo]
 - Patching [com.megacrit.cardcrawl.powers.PenNibPower.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 32...

{
relicstats.patches.relics.PenNibInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.PrayerWheelInfo]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.setupItemReward()]
 - Adding Insert @ 98...

{
relicstats.patches.relics.PrayerWheelInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.applyDiscount(float,boolean)]
 - Adding Insert @ 378...

{
relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPricePatch.potionPricePatch($0, $1, $2, p);
}

Patch Class: [relicstats.patches.relics.PeacePipeInfo]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireTokeEffect.update()]
 - Adding Insert @ 71...

{
relicstats.patches.relics.PeacePipeInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.AncientTeaSetInfo]
 - Patching [com.megacrit.cardcrawl.relics.AncientTeaSet.atTurnStart()]
 - Adding Insert @ 47...

{
relicstats.patches.relics.AncientTeaSetInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.HoveringKiteInfo]
 - Patching [com.megacrit.cardcrawl.relics.HoveringKite.onManualDiscard()]
 - Adding Insert @ 29...

{
relicstats.patches.relics.HoveringKiteInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.PandorasBoxInfo]
 - Patching [com.megacrit.cardcrawl.relics.PandorasBox.onEquip()]
 - Adding Insert @ 72...

{
relicstats.patches.relics.PandorasBoxInfo.insert($0, group);
}

Patch Class: [relicstats.patches.relics.CursedKeyInfo]
 - Patching [com.megacrit.cardcrawl.relics.CursedKey.onChestOpen(boolean)]
 - Adding Insert @ 50...

{
relicstats.patches.relics.CursedKeyInfo.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.KunaiInfo]
 - Patching [com.megacrit.cardcrawl.relics.Kunai.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 38...

{
relicstats.patches.relics.KunaiInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.DeadBranchInfo]
 - Patching [com.megacrit.cardcrawl.relics.DeadBranch.onExhaust(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 18...

{
relicstats.patches.relics.DeadBranchInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.PreservedInsectInfo]
 - Patching [com.megacrit.cardcrawl.relics.PreservedInsect.atBattleStart()]
 - Adding Insert @ 28...

{
relicstats.patches.relics.PreservedInsectInfo.afterHp($0, m);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$PotionRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.getNewPrice(com.megacrit.cardcrawl.shop.StorePotion)]
 - Adding Insert @ 467...

{
relicstats.patches.relics.MembershipCardInfo$PotionRestockPatch.insert($0, $1, retVal);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPurchasePatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.purchaseCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 695...

{
relicstats.patches.relics.MembershipCardInfo$ShopScreenCardPurchasePatch.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.CauldronInfo$PotionRewardItemPatch]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.claimReward()]
 - Adding Insert @ 322...

{
relicstats.patches.relics.CauldronInfo$PotionRewardItemPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.SozuInfo$ObtainPotionActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ObtainPotionAction.update()]
 - Adding Insert @ 26...

{
relicstats.patches.relics.SozuInfo$ObtainPotionActionPatch.insert($0);
}

Patch Class: [relicstats.patches.relics.WhetstoneInfo]
 - Patching [com.megacrit.cardcrawl.relics.Whetstone.onEquip()]
 - Adding Insert @ 37...

{
relicstats.patches.relics.WhetstoneInfo.insert($0, upgradableCards);
}

Patch Class: [relicstats.patches.relics.SelfFormingClayInfo$SelfFormingClayPatch]
 - Patching [com.megacrit.cardcrawl.relics.SelfFormingClay.wasHPLost(int)]
 - Adding Insert @ 26...

{
relicstats.patches.relics.SelfFormingClayInfo$SelfFormingClayPatch.insert($0, $1);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$CardRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.setPrice(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 787...

{
relicstats.patches.relics.MembershipCardInfo$CardRestockPatch.insert($0, $1, tmpPrice);
}

Patch Class: [relicstats.patches.relics.NunchakuInfo]
 - Patching [com.megacrit.cardcrawl.relics.Nunchaku.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 40...

{
relicstats.patches.relics.NunchakuInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.TinyChestInfo]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.roll(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 121...

{
relicstats.patches.relics.TinyChestInfo.insert($1);
}

Patch Class: [relicstats.patches.relics.CalipersInfo]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 463...

{
relicstats.patches.relics.CalipersInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.MatryoshkaInfo]
 - Patching [com.megacrit.cardcrawl.relics.Matryoshka.onChestOpen(boolean)]
 - Adding Insert @ 26...

{
relicstats.patches.relics.MatryoshkaInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.HappyFlowerInfo]
 - Patching [com.megacrit.cardcrawl.relics.HappyFlower.atTurnStart()]
 - Adding Insert @ 55...

{
relicstats.patches.relics.HappyFlowerInfo.insert($0);
}

Patch Class: [relicstats.patches.relics.WarpedTongsInfo$UpgradeRandomCardActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.UpgradeRandomCardAction.update()]
 - Adding Insert @ 39...

{
relicstats.patches.relics.WarpedTongsInfo$UpgradeRandomCardActionPatch.patch($0);
}

Patch Class: [relicstats.patches.relics.NecronomiconInfo]
 - Patching [com.megacrit.cardcrawl.relics.Necronomicon.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Insert @ 60...

{
relicstats.patches.relics.NecronomiconInfo.insert($0);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$NormalPotions]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 288...

{
SpicyShops.patches.SpicyPotionPatches$NormalPotions.Insert($0, potion);
}

Patch Class: [SpicyShops.patches.SpicyRelicPatches$LetMeHaveNoPotionSlots]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Insert @ 1057...

{
SpicyShops.patches.SpicyRelicPatches$LetMeHaveNoPotionSlots.patch($0, $1);
}

Patch Class: [SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Insert @ 430...

{
int[] __param2 = new int[1];
__param2[0] = i;
SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics.resetLoop($0, __param2);
i = __param2[0];
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$NormalPotions]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 256...

{
SpicyShops.patches.SpicyPotionPatches$NormalPotions.Insert($0, potion);
}

Patch Class: [SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initRelics()]
 - Adding Insert @ 410...

{
int[] __param2 = new int[1];
__param2[0] = i;
SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics.modifyCounter($0, __param2);
i = __param2[0];
}

Patch Class: [SpicyShops.patches.cards.StealStSLibKeywordPatches]
 - Patching [com.evacipated.cardcrawl.mod.stslib.StSLib.loadLangKeywords(java.lang.String)]
 - Adding Insert @ 82...

{
SpicyShops.patches.cards.StealStSLibKeywordPatches.patch($0, $1, keyword);
}

Patch Class: [SpicyShops.patches.SpicyRelicPatches$RelicBuyLogic]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic.purchaseRelic()]
 - Adding Insert @ 102...

{
SpicyShops.patches.SpicyRelicPatches$RelicBuyLogic.patch($0);
}

Patch Class: [SpicyShops.patches.ExtraPotionChoicesPatches$AdjustPotionsPositions]
 - Patching [com.megacrit.cardcrawl.shop.StorePotion.update(float)]
 - Adding Insert @ 53...

{
SpicyShops.patches.ExtraPotionChoicesPatches$AdjustPotionsPositions.patch($0, $1, slot);
}

Patch Class: [SpicyShops.patches.SpicyCardPatches$PurchaseCardHooks]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.purchaseCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 696...

{
SpicyShops.patches.SpicyCardPatches$PurchaseCardHooks.removeSpicyCard($0, $1);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$FairyPotion]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1860...

{
SpicyShops.patches.SpicyPotionPatches$FairyPotion.Insert($0, $1, p);
}

Patch Class: [SpicyShops.patches.SpicyCardPatches$InitCardHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Insert @ 220...

{
SpicyShops.patches.SpicyCardPatches$InitCardHook.patch($0, $1, $2);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$IncreasePotency]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.getPotency()]
 - Adding Insert @ 948...

{
int[] __param2 = new int[1];
__param2[0] = potency;
SpicyShops.patches.SpicyPotionPatches$IncreasePotency.patch($0, __param2);
potency = __param2[0];
}

Patch Class: [SpicyShops.patches.SpicyCardPatches$RenderSpicyCardTags]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1389...

{
SpicyShops.patches.SpicyCardPatches$RenderSpicyCardTags.patch($0, $1, saleTag);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$RenderModifierTips]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.shopRender(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 699...

{
SpicyShops.patches.SpicyPotionPatches$RenderModifierTips.incScale($0, $1);
}

Patch Class: [SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initRelics()]
 - Adding Insert @ 415...

{
int[] __param2 = new int[1];
__param2[0] = i;
SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics.resetLoop($0, __param2);
i = __param2[0];
}

Patch Class: [SpicyShops.patches.ExtraRelicChoicePatches$AdjustRelicPositions]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic.update(float)]
 - Adding Insert @ 54...

{
SpicyShops.patches.ExtraRelicChoicePatches$AdjustRelicPositions.patch($0, $1, slot);
}

Patch Class: [SpicyShops.patches.SpicyRelicPatches$DisallowPopup]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic.update(float)]
 - Adding Insert @ 70...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = SpicyShops.patches.SpicyRelicPatches$DisallowPopup.patch($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Insert @ 423...

{
int[] __param2 = new int[1];
__param2[0] = i;
SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics.modifyCounter($0, __param2);
i = __param2[0];
}

Patch Class: [uncapped.ORBS$SetSlotPosition]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Insert @ r1 (abs:121)...

{
float[] __param4 = new float[1];
__param4[0] = dist;
uncapped.ORBS$SetSlotPosition.ChangeDist($0, $1, $2, __param4);
dist = __param4[0];
}

Patch Class: [uncapped.ORBS$SetSlotPosition]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Insert @ r2 (abs:122)...

{
float[] __param4 = new float[1];
__param4[0] = angle;
uncapped.ORBS$SetSlotPosition.ChangeY($0, $1, $2, __param4);
angle = __param4[0];
}

Patch Class: [downfall.patches.ProceedButtonPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.update()]
 - Adding Insert @ 205...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.ProceedButtonPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.ui.map.FlipMap$YouAreScrollingTheWrongWay]
 - Patching [com.megacrit.cardcrawl.screens.DungeonMapScreen.open(boolean)]
 - Adding Insert @ 400...

{
float[] __param4 = new float[1];
__param4[0] = targetOffsetY;
downfall.patches.ui.map.FlipMap$YouAreScrollingTheWrongWay.doot($0, $1, mapScrollUpperLimit, __param4);
targetOffsetY = __param4[0];
}

Patch Class: [downfall.patches.DeathScreenUnlockPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.update()]
 - Adding Insert @ 605...
Adding Insert @ 641...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.DeathScreenUnlockPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.WheelGameOptionPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinWheelGame.preApplyResult()]
 - Adding Insert @ r24 (abs:221)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.WheelGameOptionPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.HPTooltipPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updateTips()]
 - Adding Insert @ 999...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.HPTooltipPatch.patch($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.ui.topPanel.GoldToSoulPatches$PostLoadLocalizationPatch]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.create()]
 - Adding Insert @ 264...

{
downfall.patches.ui.topPanel.GoldToSoulPatches$PostLoadLocalizationPatch.PostLocalization($0, languagePack);
}

Patch Class: [gremlin.patches.ConditionalModifyBlockApplyPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ r4 (abs:3204)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
gremlin.patches.ConditionalModifyBlockApplyPatch.Insert($0, p, __param3);
tmp = __param3[0];
}

Patch Class: [downfall.patches.VictoryScreenUnlockPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.update()]
 - Adding Insert @ 472...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.VictoryScreenUnlockPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [champ.patches.ChampAfraidOfGhostsPatch$EventSpawn]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2487...

{
champ.patches.ChampAfraidOfGhostsPatch$EventSpawn.Insert($1, tmp);
}

Patch Class: [downfall.patches.SneckoStandardPatch]
 - Patching [com.megacrit.cardcrawl.neow.NeowEvent.update()]
 - Adding Insert @ 161...

{
downfall.patches.SneckoStandardPatch.SetTheThing($0);
}

Patch Class: [downfall.patches.MainMenuEvilMode$RedirectBackButton]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen.update()]
 - Adding Insert @ 162...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.MainMenuEvilMode$RedirectBackButton.Insert($0, screen);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.CursedTomePatch$TomeOptionDamage]
 - Patching [com.megacrit.cardcrawl.events.city.CursedTome.buttonEffect(int)]
 - Adding Insert @ r43 (abs:120)...

{
gremlin.patches.eventpatches.CursedTomePatch$TomeOptionDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.NestPatch$NestOptionDamage]
 - Patching [com.megacrit.cardcrawl.events.city.Nest.buttonEffect(int)]
 - Adding Insert @ r6 (abs:50)...

{
gremlin.patches.eventpatches.NestPatch$NestOptionDamage.Insert($0, $1);
}

Patch Class: [champ.patches.SymbolDescriptionPatch$RenderSmallIconSingleCardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1235...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = tmp;
champ.patches.SymbolDescriptionPatch$RenderSmallIconSingleCardView.Insert($0, $1, spacing, i, __param5, __param6, gl, card_energy_w, drawScale, current_x, card);
start_x = __param5[0];
tmp = __param6[0];
}

Patch Class: [downfall.patches.RestrictCurses]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCurse()]
 - Adding Insert @ r8 (abs:1079)...

{
downfall.patches.RestrictCurses.Insert(tmp);
}

Patch Class: [downfall.patches.rooms.BetterEndingPatches$MoveToAct4$BetterEffect]
 - Patching [com.megacrit.cardcrawl.events.beyond.SpireHeart.buttonEffect(int)]
 - Adding Insert @ 177...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.rooms.BetterEndingPatches$MoveToAct4$BetterEffect.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchCalculate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ r104 (abs:3330)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchCalculate.MultiFinalInsert($0, $1, player, tmp);
if (opt.isPresent()) { return; }
}

Patch Class: [guardian.patches.PackageDiscoveryPatch]
 - Patching [com.megacrit.cardcrawl.screens.CardRewardScreen.discoveryOpen()]
 - Adding Insert @ 893...

{
guardian.patches.PackageDiscoveryPatch.Insert($0, derp);
}

Patch Class: [champ.patches.SymbolDescriptionPatch$RenderSmallIconSingleCardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1008...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = tmp;
champ.patches.SymbolDescriptionPatch$RenderSmallIconSingleCardView.Insert($0, $1, spacing, i, __param5, __param6, gl, card_energy_w, drawScale, current_x, card);
start_x = __param5[0];
tmp = __param6[0];
}

Patch Class: [champ.patches.RenderBonusHealthPatch$RenderPowerHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1026...

{
champ.patches.RenderBonusHealthPatch$RenderPowerHealthBar.Insert($0, $1, x, y, targetHealthBarWidth, HEALTH_BAR_HEIGHT, HEALTH_BAR_OFFSET_Y);
}

Patch Class: [downfall.patches.FlipRoom$VFX]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2800...

{
downfall.patches.FlipRoom$VFX.StartTopLevel($0, $1);
}

Patch Class: [downfall.patches.EvilModeCharacterSelect$InitializeCharacterOptions]
 - Patching [basemod.CustomCharacterSelectScreen.initialize()]
 - Adding Insert @ 53...

{
downfall.patches.EvilModeCharacterSelect$InitializeCharacterOptions.Insert($0);
}

Patch Class: [hermit.patches.SelectScreenPatch3]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.updateSelectedCards()]
 - Adding Insert @ r34 (abs:499)...

{
hermit.patches.SelectScreenPatch3.Insert();
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchCalculate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ r34 (abs:3260)...

{
float[] __param4 = new float[1];
__param4[0] = tmp;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchCalculate.FinalInsert($0, $1, player, __param4);
tmp = __param4[0];
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.ui.map.FlipMap$EndingMapFlipper]
 - Patching [com.megacrit.cardcrawl.dungeons.TheEnding.generateSpecialMap()]
 - Adding Insert @ 162...

{
downfall.patches.ui.map.FlipMap$EndingMapFlipper.Insert();
}

Patch Class: [gremlin.patches.OnPlayerGainBlockPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Insert @ r20 (abs:499)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
gremlin.patches.OnPlayerGainBlockPatch.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneDamageA]
 - Patching [com.megacrit.cardcrawl.events.beyond.SensoryStone.buttonEffect(int)]
 - Adding Insert @ r23 (abs:76)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneDamageA.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.RestrictCardColor]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getAnyColorCard(com.megacrit.cardcrawl.cards.AbstractCard$CardRarity)]
 - Adding Insert @ r10 (abs:1157)...

{
downfall.patches.RestrictCardColor.Insert($1, anyCard);
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterOptionRenderInfoPatch]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderInfo(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 397...
Adding Insert @ 513...

{
java.lang.String[] __param6 = new java.lang.String[1];
__param6[0] = flavorText;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterOptionRenderInfoPatch.Insert($0, $1, infoX, infoY, charInfo, __param6);
flavorText = __param6[0];
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.NeowEventPatch]
 - Patching [com.megacrit.cardcrawl.neow.NeowRoom(boolean)]
 - Adding Insert @ 12...

{
downfall.patches.NeowEventPatch.ChangeEvent($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.WheelGameLeavePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinWheelGame.buttonEffect(int)]
 - Adding Insert @ r18 (abs:254)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.WheelGameLeavePatch.FirstInsert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.WorldOfGoopPatch$GoopDamage]
 - Patching [com.megacrit.cardcrawl.events.exordium.GoopPuddle.buttonEffect(int)]
 - Adding Insert @ r6 (abs:66)...

{
gremlin.patches.eventpatches.WorldOfGoopPatch$GoopDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.CampfireRestDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.ui.campfire.RestOption(boolean)]
 - Adding Insert @ r27 (abs:47)...

{
gremlin.patches.CampfireRestDescriptionPatch.Insert($0, $1, healAmt);
}

Patch Class: [gremlin.patches.MuggedByElitePatch]
 - Patching [com.megacrit.cardcrawl.rooms.MonsterRoomElite.dropReward()]
 - Adding Insert @ r10 (abs:103)...

{
gremlin.patches.MuggedByElitePatch.Insert($0);
}

Patch Class: [downfall.patches.RestrictCardColorWithType]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getAnyColorCard(com.megacrit.cardcrawl.cards.AbstractCard$CardType,com.megacrit.cardcrawl.cards.AbstractCard$CardRarity)]
 - Adding Insert @ r11 (abs:1139)...

{
downfall.patches.RestrictCardColorWithType.Insert($1, $2, anyCard);
}

Patch Class: [downfall.patches.FlipRoom$VFX]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2672...
Adding Insert @ 2695...

{
downfall.patches.FlipRoom$VFX.Start($0, $1);
}

Patch Class: [downfall.patches.GlobalTurnStartCheckPatch]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 446...

{
downfall.patches.GlobalTurnStartCheckPatch.Insert($0);
}

Patch Class: [gremlin.patches.eventpatches.NestPatch$NestDamage]
 - Patching [com.megacrit.cardcrawl.events.city.Nest.buttonEffect(int)]
 - Adding Insert @ r25 (abs:69)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.NestPatch$NestDamage.Insert($0, $1, c);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.WingStatuePatch$WingDamage]
 - Patching [com.megacrit.cardcrawl.events.exordium.GoldenWing.buttonEffect(int)]
 - Adding Insert @ r6 (abs:73)...

{
gremlin.patches.eventpatches.WingStatuePatch$WingDamage.Insert($0, $1);
}

Patch Class: [downfall.patches.FlipRoom$VFX]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2701...

{
downfall.patches.FlipRoom$VFX.End2($0, $1);
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchApply]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ r69 (abs:3166)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchApply.MultiInsert($0, player, tmp, i);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.StrengthAffectedApplyPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ r19 (abs:3116)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
gremlin.patches.StrengthAffectedApplyPatch.Insert($0, p, __param3);
tmp = __param3[0];
}

Patch Class: [sneckomod.patches.SingleCardViewPopupPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 423...

{
sneckomod.patches.SingleCardViewPopupPatches$RenderPatch.__render($0, $1, card, copy);
}

Patch Class: [champ.patches.SymbolDescriptionPatch$RenderSmallIcon]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2443...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
champ.patches.SymbolDescriptionPatch$RenderSmallIcon.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [downfall.patches.ui.campfire.AddBustKeyButtonPatches$AddKeys]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Insert @ 97...

{
downfall.patches.ui.campfire.AddBustKeyButtonPatches$AddKeys.patch($0, buttons);
}

Patch Class: [gremlin.patches.eventpatches.MatchGameAfterPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinMatchGame.update()]
 - Adding Insert @ r18 (abs:124)...

{
gremlin.patches.eventpatches.MatchGameAfterPatch.Insert($0);
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchCalculate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ r81 (abs:3307)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchCalculate.MultiInsert($0, $1, player, tmp, i);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.HexFlamesUnlockPatch]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockCharacterScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 96...

{
downfall.patches.HexFlamesUnlockPatch.Insert($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.ScrapOozePatch$OozePostDamage]
 - Patching [com.megacrit.cardcrawl.events.exordium.ScrapOoze.buttonEffect(int)]
 - Adding Insert @ r7 (abs:59)...

{
gremlin.patches.eventpatches.ScrapOozePatch$OozePostDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.KnowingSkullPatch$SkullOptionDamage]
 - Patching [com.megacrit.cardcrawl.events.city.KnowingSkull.buttonEffect(int)]
 - Adding Insert @ r8 (abs:99)...

{
gremlin.patches.eventpatches.KnowingSkullPatch$SkullOptionDamage.Insert($0, $1);
}

Patch Class: [guardian.patches.SelfStasisPatch$DontMoveStasisedCards]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Insert @ 101...

{
float[] __param3 = new float[1];
__param3[0] = duration;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = guardian.patches.SelfStasisPatch$DontMoveStasisedCards.SelfStasis($0, targetCard, __param3);
duration = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [theHexaghost.patches.ExhaustCardEffectPatch]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ExhaustCardEffect.update()]
 - Adding Insert @ 23...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = theHexaghost.patches.ExhaustCardEffectPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [charbosses.patches.ApplyFocusrPatch$ApplyFocusrPatchA]
 - Patching [com.megacrit.cardcrawl.actions.common.RemoveSpecificPowerAction.update()]
 - Adding Insert @ r24 (abs:55)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.ApplyFocusrPatch$ApplyFocusrPatchA.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [saveData.SaveData$SaveDataToFile]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 303...

{
saveData.SaveData$SaveDataToFile.addCustomSaveData($1, params);
}

Patch Class: [gremlin.patches.eventpatches.MatchGameRulesPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinMatchGame.buttonEffect(int)]
 - Adding Insert @ r5 (abs:282)...

{
gremlin.patches.eventpatches.MatchGameRulesPatch.Insert($0, $1);
}

Patch Class: [downfall.patches.RestrictCurses3]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCurse(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ r8 (abs:1091)...

{
downfall.patches.RestrictCurses3.Insert(tmp);
}

Patch Class: [saveData.SaveData$LoadDataFromFile]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.loadSaveFile(java.lang.String)]
 - Adding Insert @ 108...

{
saveData.SaveData$LoadDataFromFile.loadCustomSaveData($1, gson, savestr);
}

Patch Class: [downfall.patches.FlipRoom$VFX]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2678...

{
downfall.patches.FlipRoom$VFX.End1($0, $1);
}

Patch Class: [gremlin.patches.UnforgivingPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ r35 (abs:176)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.UnforgivingPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterSelectScreenPatch_portraitSkeleton]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r62 (abs:420)...

{
reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterSelectScreenPatch_portraitSkeleton.Insert($0, $1);
}

Patch Class: [hermit.patches.getMiscPatch$MiscPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCopy(java.lang.String,int,int)]
 - Adding Insert @ 1007...

{
hermit.patches.getMiscPatch$MiscPatch.LoadMisc($1, $2, $3, retVal);
}

Patch Class: [guardian.patches.RelicPreviewPatch]
 - Patching [com.megacrit.cardcrawl.events.GenericEventDialog.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r70 (abs:497)...

{
guardian.patches.RelicPreviewPatch.Insert($0, $1);
}

Patch Class: [downfall.patches.ui.map.FlipMap$StandardMapFlipper]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateMap()]
 - Adding Insert @ 652...

{
downfall.patches.ui.map.FlipMap$StandardMapFlipper.Insert();
}

Patch Class: [gremlin.patches.eventpatches.ScrapOozePatch$OozePreDamage]
 - Patching [com.megacrit.cardcrawl.events.exordium.ScrapOoze.buttonEffect(int)]
 - Adding Insert @ r4 (abs:56)...

{
gremlin.patches.eventpatches.ScrapOozePatch$OozePreDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.StrengthAffectedDamagePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ r19 (abs:3245)...

{
float[] __param4 = new float[1];
__param4[0] = tmp;
gremlin.patches.StrengthAffectedDamagePatch.Insert($0, $1, p, __param4);
tmp = __param4[0];
}

Patch Class: [downfall.patches.CourierFixCrashPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.purchaseCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 724...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.CourierFixCrashPatch.replaceCrashWithGood($0, $1, c);
if (opt.isPresent()) { return; }
}

Patch Class: [guardian.patches.AddEnhanceButtonPatch$AddKeys]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Insert @ 97...

{
guardian.patches.AddEnhanceButtonPatch$AddKeys.patch($0, buttons);
}

Patch Class: [champ.patches.SymbolDescriptionPatch$RenderSmallIcon]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2239...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
champ.patches.SymbolDescriptionPatch$RenderSmallIcon.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterOptionPatch_reloadAnimation]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Insert @ r56 (abs:195)...

{
reskinContent.patches.CharacterSelectScreenPatches$CharacterOptionPatch_reloadAnimation.Insert($0);
}

Patch Class: [gremlin.patches.eventpatches.ScrapOozePatch$OozeOption]
 - Patching [com.megacrit.cardcrawl.events.exordium.ScrapOoze.buttonEffect(int)]
 - Adding Insert @ r28 (abs:80)...

{
gremlin.patches.eventpatches.ScrapOozePatch$OozeOption.Insert($0, $1);
}

Patch Class: [downfall.patches.ui.map.FlipMap$JustATeensyNudge]
 - Patching [com.megacrit.cardcrawl.map.MapEdge(int,int,float,float,int,int,float,float,boolean)]
 - Adding Insert @ 56...

{
float[] __param11 = new float[1];
__param11[0] = tmpDY;
float[] __param12 = new float[1];
__param12[0] = tmpSY;
downfall.patches.ui.map.FlipMap$JustATeensyNudge.boop($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, __param11, __param12);
tmpDY = __param11[0];
tmpSY = __param12[0];
}

Patch Class: [gremlin.patches.PlayerDamagePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1874...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.PlayerDamagePatch.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.OnGainedBlockPowerPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Insert @ r1 (abs:480)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
gremlin.patches.OnGainedBlockPowerPatch.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneDamageB]
 - Patching [com.megacrit.cardcrawl.events.beyond.SensoryStone.buttonEffect(int)]
 - Adding Insert @ r31 (abs:84)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneDamageB.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.rooms.ShopRoomReplacePatch$replaceRuleSiblingMatches]
 - Patching [com.megacrit.cardcrawl.map.RoomTypeAssigner.ruleSiblingMatches(java.util.ArrayList,com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Insert @ r6 (abs:100)...

{
java.util.List[] __param3 = new java.util.List[1];
__param3[0] = applicableRooms;
downfall.patches.rooms.ShopRoomReplacePatch$replaceRuleSiblingMatches.patch($1, $2, __param3);
applicableRooms = __param3[0];
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchApply]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ r23 (abs:3120)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchApply.Insert($0, player, __param3);
tmp = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchApply]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ r34 (abs:3131)...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchApply.FinalInsert($0, player, __param3);
tmp = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.KnowingSkullPatch$SkullDamage]
 - Patching [com.megacrit.cardcrawl.events.city.KnowingSkull.buttonEffect(int)]
 - Adding Insert @ r12 (abs:103)...

{
gremlin.patches.eventpatches.KnowingSkullPatch$SkullDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.WheelGameLeavePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinWheelGame.buttonEffect(int)]
 - Adding Insert @ r20 (abs:256)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.WheelGameLeavePatch.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchCalculate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ r23 (abs:3249)...

{
float[] __param4 = new float[1];
__param4[0] = tmp;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchCalculate.Insert($0, $1, player, __param4);
tmp = __param4[0];
if (opt.isPresent()) { return; }
}

Patch Class: [expansioncontent.patches.AwakenBeforeOtherRevivesPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ r124 (abs:1849)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = expansioncontent.patches.AwakenBeforeOtherRevivesPatch.Insert($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.ui.campfire.AddWheelSpinButtonPatch$AddKeys]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Insert @ 97...

{
downfall.patches.ui.campfire.AddWheelSpinButtonPatch$AddKeys.patch($0, buttons);
}

Patch Class: [gremlin.patches.eventpatches.WheelGameResultPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinWheelGame.applyResult()]
 - Adding Insert @ r44 (abs:312)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.WheelGameResultPatch.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [automaton.patches.LoadMiscPatch$MiscPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCopy(java.lang.String,int,int)]
 - Adding Insert @ 1007...

{
automaton.patches.LoadMiscPatch$MiscPatch.LoadMisc($1, $2, $3, retVal);
}

Patch Class: [gremlin.patches.CampfirePatch]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Insert @ 97...

{
gremlin.patches.CampfirePatch.patch($0, buttons);
}

Patch Class: [downfall.patches.ui.map.FlipMap$FixNoRestEmeraldElite]
 - Patching [downfall.patches.ui.map.EmeraldElite.alternate()]
 - Adding Insert @ 53...

{
downfall.patches.ui.map.FlipMap$FixNoRestEmeraldElite.patch(chosenNode);
}

Patch Class: [expansioncontent.patches.BossCardTabNamePatch$TabNamePatch]
 - Patching [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render.Insert(com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar,com.badlogic.gdx.graphics.g2d.SpriteBatch,float,com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab)]
 - Adding Insert @ 159...

{
java.lang.String[] __param5 = new java.lang.String[1];
__param5[0] = tabName;
expansioncontent.patches.BossCardTabNamePatch$TabNamePatch.InsertFix($1, $2, $3, $4, __param5);
tabName = __param5[0];
}

Patch Class: [downfall.patches.FlipRoom$VFX]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2806...

{
downfall.patches.FlipRoom$VFX.EndTopLevel($0, $1);
}

Patch Class: [gremlin.patches.ApplyPowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ 159...

{
gremlin.patches.ApplyPowerPatch.patch($0);
}

Patch Class: [gremlin.patches.GremlinPostBossHealPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.dungeonTransitionSetup()]
 - Adding Insert @ r27 (abs:3134)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.GremlinPostBossHealPatch.Insert();
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.rooms.BetterEndingPatches$MoveToAct4$BetterEffect]
 - Patching [com.megacrit.cardcrawl.events.beyond.SpireHeart.buttonEffect(int)]
 - Adding Insert @ 153...

{
downfall.patches.rooms.BetterEndingPatches$MoveToAct4$BetterEffect.patch($0, $1);
}

Patch Class: [champ.patches.SymbolDescriptionPatch$AlterIconDescriptionSize]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 568...

{
com.badlogic.gdx.graphics.g2d.GlyphLayout[] __param2 = new com.badlogic.gdx.graphics.g2d.GlyphLayout[1];
__param2[0] = gl;
champ.patches.SymbolDescriptionPatch$AlterIconDescriptionSize.Insert($0, __param2, word);
gl = __param2[0];
}

Patch Class: [downfall.patches.rooms.ShopRoomReplacePatch$replaceRuleParentMatches]
 - Patching [com.megacrit.cardcrawl.map.RoomTypeAssigner.ruleParentMatches(java.util.ArrayList,com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Insert @ r5 (abs:125)...

{
java.util.List[] __param3 = new java.util.List[1];
__param3[0] = applicableRooms;
downfall.patches.rooms.ShopRoomReplacePatch$replaceRuleParentMatches.patch($1, $2, __param3);
applicableRooms = __param3[0];
}

Patch Class: [gremlin.patches.DamageConditionalGivePatchApply]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ r83 (abs:3180)...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.DamageConditionalGivePatchApply.MultiFinalInsert($0, player, tmp);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneOptionDamage]
 - Patching [com.megacrit.cardcrawl.events.beyond.SensoryStone.buttonEffect(int)]
 - Adding Insert @ r6 (abs:59)...

{
gremlin.patches.eventpatches.SensoryStonePatch$SensoryStoneOptionDamage.Insert($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.CursedTomePatch$TomeDamage]
 - Patching [com.megacrit.cardcrawl.events.city.CursedTome.buttonEffect(int)]
 - Adding Insert @ r49 (abs:126)...

{
gremlin.patches.eventpatches.CursedTomePatch$TomeDamage.Insert($0, $1);
}

Patch Class: [theLatent.patches.WeightlessPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2069...

{
theLatent.patches.WeightlessPatch.patchMethod($0, $1, c);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CatchCrash$GdxHandler]
 - Patching [com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.IsModded]
 - Patching [com.megacrit.cardcrawl.core.Settings.<clinit>()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges]
 - Patching [basemod.BaseMod.registerModBadge(com.badlogic.gdx.graphics.Texture,java.lang.String,java.lang.String,java.lang.String,basemod.ModPanel)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.DisableGdxForceExit]
 - Patching [com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.ChangeWindowTitle]
 - Patching [com.megacrit.cardcrawl.desktop.DesktopLauncher.main(java.lang.String[])]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.AlwaysEnableCustomMode]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen.initializePanels()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.MainMenuModList]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.map.MapGenerator.PathDensityMultiplier]
 - Patching [com.megacrit.cardcrawl.map.MapGenerator.generateDungeon(int,int,int,com.megacrit.cardcrawl.random.Random)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.UpdateHitboxBgImg]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.monsters.FixTransientCrash]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Transient.takeTurn()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.getRelic(java.lang.String)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixLogging$FixRenderLog]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.LinkedRelics]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption.PostCampfireHook]
 - Patching [com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ProcessDynamicText]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeWithoutLosingOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$AddBosses]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderDescriptionEnergy]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.rewardViewUpdate()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ChangeMethodCall]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.getSmartHeight(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ProcessDynamicText]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.PreMonsterTurnHook]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$RefreshHandLayout]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.refreshHandLayout()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipBox(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,java.lang.String)]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.PlayerPowerTips$Nested]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.FixUnnecessaryRewardCulling]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.addPotionToRewards()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRenderCardTitle$CardModifierOnCardRender]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.FixModdedSelectAnimation]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.IntangiblePower.FixPlayerIntangiblePower]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePower.atEndOfTurn(boolean)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.GetAllInBattleInstances.FixNPE]
 - Patching [com.megacrit.cardcrawl.helpers.GetAllInBattleInstances.get(java.util.UUID)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$CardModifierSpendResources]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixDiscoveryLogSpam]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnTrulyRandomCardInCombat()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRenderCardTitle$CardModifierOnSCVRender]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixLogging$FixUpdateLog]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixLargeImageRender$Render]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,com.badlogic.gdx.graphics.Color)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixLogging$FixDescriptionCNLog]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PreventGetShrineCrashPatch$FallbackToGetEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnCreateDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeNewestOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$SkipTipBoxPatch]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.MonsterPowerTips$Nested]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnCreateDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderDescriptionEnergy]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.PositionCharacterButtons]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.updateCharacterButtons()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$EnergyOrbTexture]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCost(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.FixVigorReduction]
 - Patching [com.megacrit.cardcrawl.powers.watcher.VigorPower.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixLogging$FixDescriptionLog]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.buttons.CancelButton.ModSettingsCheck]
 - Patching [com.megacrit.cardcrawl.ui.buttons.CancelButton.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.FixCardPreviewPlacement]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCardPreviewInSingleView(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.BeforeRenderIntentPatches$AbstractMonsterDomePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$AbstractPlayer_isCursed]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.isCursed()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderBranchingUpgrade]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.StunMonsterPatch$GetNextAction]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderSplitArrows]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.renderArrows(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SneckoPatch$PortraitViewCost]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCost(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RemoveApplicationEffectsForInvisiblePowers]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseTargetArrow]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.clickAndDragCards()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$FountainOfCurseRemoval_buttonEffect]
 - Patching [com.megacrit.cardcrawl.events.shrines.FountainOfCurseRemoval.buttonEffect(int)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RenderPowerTips]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.BetterOnLoseHpPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RenderPowerIcons]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerIcons(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$StopClosingOnBranchUpgradeButton]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.updateInput()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.BeforeRenderIntentPatches$BeforeRenderIntentPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RenderPowerTips]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.InvisiblePowerPatch$RenderPowerTips]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$HighlightArrowColor]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderTargetingUi(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [conspire.patches.AbstractPlayerDrawPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [basemod.patches.com.megacrit.cardcrawl.events.NoteForYourself.MissingCard.Replace(com.megacrit.cardcrawl.events.shrines.NoteForYourself)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.AbstractMonsterDomePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [conspire.patches.TreasureMapPatch$MonsterRoomDropReward]
 - Patching [com.megacrit.cardcrawl.rewards.chests.AbstractChest.open(boolean)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.Designer.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireSmithEffect.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.city.BackToBasics.upgradeStrikeAndDefends()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.exordium.ShiningLight.upgradeCards()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.relics.WarPaint.onEquip()]
 - Adding Instrument...

Patch Class: [conspire.patches.TreasureMapPatch$TreasureRoomOnPlayerEntry]
 - Patching [com.megacrit.cardcrawl.rooms.TreasureRoom.onPlayerEntry()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.ExhumeAction.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.evacipated.cardcrawl.mod.hubris.cards.DuctTapeCard.canUpgrade()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCopy(java.lang.String,int,int)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.hasUpgradableCards()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [basemod.devcommands.deck.DeckAdd.execute(java.lang.String[],int)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.UpgradeShrine.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.AbstractMonsterDomePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [conspire.patches.ReflectBlockPowerPatch$AddBlock]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [basemod.devcommands.hand.HandAdd.execute(java.lang.String[],int)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.Designer.upgradeTwoRandomCards()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.evacipated.cardcrawl.mod.hubris.cards.DuctTapeCard.upgrade()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.exordium.LivingWall.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.relics.TinyHouse.onEquip()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getUpgradableCards()]
 - Adding Instrument...

Patch Class: [conspire.patches.GameActionManagerNextActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.cardForName(com.megacrit.cardcrawl.screens.stats.RunData,java.lang.String)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.ArmamentsAction.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.FlyswatterPatch$GetRewardCards]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderInLibrary(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.AccursedBlacksmith.update()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.updateMessage()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.relics.Whetstone.onEquip()]
 - Adding Instrument...

Patch Class: [conspire.patches.TreasureMapPatch$MonsterRoomDropReward]
 - Patching [com.megacrit.cardcrawl.rooms.MonsterRoomElite.dropReward()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.selectHoveredCard()]
 - Adding Instrument...

Patch Class: [conspire.patches.InfiniteJournalUpgradePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.ApotheosisAction.upgradeAllCardsInGroup(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.NoDiscardPatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$ReptomancerPatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.SpawnDaggerAction.update()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RemoveFlipReset]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.HerbalPastePatch$AtEndOfTurn]
 - Patching [com.megacrit.cardcrawl.powers.RegenPower.atEndOfTurn(boolean)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$MultiUse]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleDeadBranchFix$Ctors]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDiscardEffect(com.megacrit.cardcrawl.cards.AbstractCard,float,float)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RemoveFlipReset]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.Color)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleDeadBranchFix$Ctors]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDiscardEffect(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapeSavePatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getCardDeck()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.NiceRugRender]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$ReptomancerPatch]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Reptomancer.canSpawn()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.UndeadRevivePatch]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$GetSubCardBattleInstances]
 - Patching [com.megacrit.cardcrawl.helpers.GetAllInBattleInstances.get(java.util.UUID)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$ScreenOpen]
 - Patching [com.megacrit.cardcrawl.shop.Merchant.update()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$ReptomancerPatch]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Reptomancer.takeTurn()]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeRenderCardBg]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$ScreenInit]
 - Patching [com.megacrit.cardcrawl.shop.Merchant(float,float,int)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.HerbalPastePatch$RegenActionPatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.RegenAction.update()]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.GremlinHornInfo]
 - Patching [com.megacrit.cardcrawl.relics.GremlinHorn.onMonsterDeath(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.InkBottleInfo]
 - Patching [com.megacrit.cardcrawl.relics.InkBottle.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.PocketwatchInfo]
 - Patching [com.megacrit.cardcrawl.relics.Pocketwatch.atTurnStartPostDraw()]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.BronzeScalesInfo]
 - Patching [com.megacrit.cardcrawl.powers.ThornsPower.onAttacked(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.LetterOpenerInfo]
 - Patching [com.megacrit.cardcrawl.relics.LetterOpener.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.TheSpecimenInfo$TheSpecimenPatch]
 - Patching [com.megacrit.cardcrawl.relics.TheSpecimen.onMonsterDeath(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Instrument...

Patch Class: [relicstats.patches.relics.OrangePelletsInfo]
 - Patching [com.megacrit.cardcrawl.relics.OrangePellets.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Instrument...

Patch Class: [SpicyShops.patches.SpicyPurgePatches$ResetPurge]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.updatePurge()]
 - Adding Instrument...

Patch Class: [SpicyShops.patches.cards.RepeatKeywordPatches$MultiUse]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$ThreeSkip]
 - Patching [com.megacrit.cardcrawl.powers.FocusPower.stackPower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$TwoSkip]
 - Patching [com.megacrit.cardcrawl.powers.FocusPower.reducePower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$TwoSkip]
 - Patching [com.megacrit.cardcrawl.powers.DexterityPower.reducePower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$NoSkip]
 - Patching [com.megacrit.cardcrawl.powers.StrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$OneSkip]
 - Patching [com.megacrit.cardcrawl.powers.PlatedArmorPower.stackPower(int)]
 - Adding Instrument...

Patch Class: [uncapped.ENERGY]
 - Patching [com.megacrit.cardcrawl.ui.panels.EnergyPanel.addEnergy(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$ThreeSkip]
 - Patching [com.megacrit.cardcrawl.powers.StrengthPower.stackPower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$TwoSkip]
 - Patching [com.megacrit.cardcrawl.powers.StrengthPower.reducePower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$TwoSkip]
 - Patching [com.megacrit.cardcrawl.powers.DexterityPower.stackPower(int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$NoSkip]
 - Patching [com.megacrit.cardcrawl.powers.DexterityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Adding Instrument...

Patch Class: [uncapped.UNCAP$NoSkip]
 - Patching [com.megacrit.cardcrawl.powers.PoisonPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Adding Instrument...

Patch Class: [uncapped.BLOCK]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Instrument...

Patch Class: [downfall.patches.ui.campfire.AddBustKeyButtonPatches$BrokenKeyRender]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [automaton.patches.GoSomewhereElsePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Instrument...

Patch Class: [downfall.patches.ui.topPanel.GoldToSoulPatches$BlueSoulsText]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderGold(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [downfall.patches.NoDiscardPatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Instrument...

Patch Class: [downfall.patches.CombatEventPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.update()]
 - Adding Instrument...

Patch Class: [charbosses.patches.AbstractBossCardPatches$RenderEnergyPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [downfall.patches.ui.map.FlipMap$AssignRoomsInReverse]
 - Patching [com.megacrit.cardcrawl.map.RoomTypeAssigner.assignRoomsToNodes(java.util.ArrayList,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [downfall.patches.EvilModeCharacterSelect$ChangeText]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$BetterCapitalize]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.capitalize(java.lang.String)]
 - Replacing...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.potions.FixAddToTop]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.addToTop(com.megacrit.cardcrawl.actions.AbstractGameAction)]
 - Replacing...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.events.NoteForYourself.MissingCard]
 - Patching [com.megacrit.cardcrawl.events.shrines.NoteForYourself.initializeObtainCard()]
 - Replacing...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.SkipIntro]
 - Patching [com.megacrit.cardcrawl.screens.splash.SplashScreen.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.modthespire.patches.SkipIntro.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.AllowWatcherUnlock]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.willWatcherUnlock()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.modthespire.patches.AllowWatcherUnlock.Prefix(defectUnlockedThisRun);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CatchCrash$MegaCritHanlder]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.core.ExceptionHandler.handleException(java.lang.Exception,org.apache.logging.log4j.Logger)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.patches.CatchCrash$MegaCritHanlder.Prefix($1);
}

Patch Class: [basemod.helpers.CardBorderGlowManager$RenderGlowPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderGlow(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.helpers.CardBorderGlowManager$RenderGlowPatch.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.loseBlock(int,boolean)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock.Prefix($0, __param2, $2);
$1 = (int)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.PreRenderHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.PreRenderHook.preRoomRenderHook($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.EditRelicsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.initialize()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.EditRelicsPatch.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.DisableInputWhileTyping$onInitialPress]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isJustPressed()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.DisableInputWhileTyping$onInitialPress.preventInitialPress($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PreStartGameHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.createCharacter(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PreStartGameHook.Prefix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.EditCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.initialize()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.EditCardsPatch.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.HideLongRelicDescriptions]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderInfo(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.HideLongRelicDescriptions.Prefix($0, $1, infoX);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.buttons.ProceedButton.ResetSeenEvents]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.goToNextDungeon(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.ui.buttons.ProceedButton.ResetSeenEvents.reset($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.TurnStartHooks$PreDraw]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnRelics()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.TurnStartHooks$PreDraw.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnOpen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.callOnOpen()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnOpen.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.GiveOrbSlotOnChannel]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.GiveOrbSlotOnChannel.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$PositionRewards]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.positionRewards()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$PositionRewards.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.getRelic(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CreateCardImageSwitch$CreateCardImage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.createCardImage()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CreateCardImageSwitch$CreateCardImage.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$BackgroundTexture]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardBack(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$BackgroundTexture.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderBannerSwitch]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardBanner(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderBannerSwitch.Prefix($0, $1, card, drawScale);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveTyping]
 - Patching [com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.keyTyped(char)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveTyping.readKeyboardInput($0, $1);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.DisableInputWhileTyping$onPress]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isPressed()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.DisableInputWhileTyping$onPress.preventPress($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderAscension(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Prefix...
{
float[] __param2 = new float[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips.Prefix($1, __param2, $3, $4);
$2 = (float)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.GetCardStringsModID]
 - Patching [com.megacrit.cardcrawl.localization.LocalizedStrings.getCardStrings(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.GetCardStringsModID.Prefix($0, __param2);
$1 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Normal]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
com.badlogic.gdx.graphics.Color[] __param4 = new com.badlogic.gdx.graphics.Color[1];
__param4[0] = $3;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Normal.Prefix($0, $1, $2, __param4);
$3 = (com.badlogic.gdx.graphics.Color)__param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderDailyModsPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderDailyMods(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderDailyModsPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch1]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCard(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch1.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$FixDynamicFrame]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.dynamicFrameRenderHelper(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion,float,float,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$FixDynamicFrame.Prefix($0, $1, $2, $3, $4, $5, $6);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.CardPlayableMonsterNullCrashFix]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.glowCheck()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.CardPlayableMonsterNullCrashFix.patch();
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ConstructSaveFilePatch]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile(com.megacrit.cardcrawl.saveAndContinue.SaveFile$SaveType)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ConstructSaveFilePatch.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Prefix...
{
float[] __param2 = new float[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Prefix($1, __param2, $3, $4, card);
$2 = (float)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ResetScrollPosition]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.setupItemReward()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ResetScrollPosition.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Locked]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.renderLock(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
com.badlogic.gdx.graphics.Color[] __param3 = new com.badlogic.gdx.graphics.Color[1];
__param3[0] = $2;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Locked.Prefix($0, $1, __param3);
$2 = (com.badlogic.gdx.graphics.Color)__param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveKeyDown]
 - Patching [com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.keyDown(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveKeyDown.onKeyDown($0, $1);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBannerSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderBannerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBannerSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCanPlayCard]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.hasEnoughEnergy()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCanPlayCard.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderPortraitFrameSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderPortraitFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderPortraitFrameSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch2]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCard(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch2.Prefix($1, __param2);
$2 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.TurnStartHooks$PostDraw]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnPostDrawRelics()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.TurnStartHooks$PostDraw.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$Open]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Prefix...
{
com.megacrit.cardcrawl.cards.CardGroup[] __param3 = new com.megacrit.cardcrawl.cards.CardGroup[1];
__param3[0] = $2;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$Open.Prefix($0, $1, __param3);
$2 = (com.megacrit.cardcrawl.cards.CardGroup)__param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Prefix...
{
float[] __param5 = new float[1];
__param5[0] = textHeight;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody.Prefix($1, $2, $3, $4, __param5);
textHeight = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRemoveEndOfTurnModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.resetAttributes()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRemoveEndOfTurnModifiers.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$PowerTipHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.getPowerTipHeight(com.megacrit.cardcrawl.helpers.PowerTip)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$PowerTipHeightPatch.Prefix($1);
if (opt.isPresent()) { return ( (Float)opt.get()).floatValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PreRenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PreRenderHook.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.monsters.MonsterInfo.AddCustomMonsters]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterInfo.normalizeWeights(java.util.ArrayList)]
 - Adding Prefix...
{
java.util.ArrayList[] __param1 = new java.util.ArrayList[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.monsters.MonsterInfo.AddCustomMonsters.Prefix(__param1);
$1 = (java.util.ArrayList)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$UpdatePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$UpdatePatch.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$SetBossIcon]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.setBoss(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$SetBossIcon.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderCustomFrame]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderCustomFrame.Prefix($0, $1, card, drawScale);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBgSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCardBg(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBgSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.UnlockCardModID]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.unlockCard(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.UnlockCardModID.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.UseCardModalComplete]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.UseCardModalComplete.Prefix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveKeyUp]
 - Patching [com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.keyUp(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor.TextInput$receiveKeyUp.onKeyUp($0, $1);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook$StopMultiVictory]
 - Patching [com.megacrit.cardcrawl.cutscenes.Cutscene.openVictoryScreen()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook$StopMultiVictory.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipBox(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,java.lang.String)]
 - Adding Prefix...
{
float[] __param6 = new float[1];
__param6[0] = textHeight;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody.Prefix($1, $2, $3, $4, $5, __param6);
textHeight = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.HasRelicModID]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.hasRelic(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.HasRelicModID.Prefix($0, __param2);
$1 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$FixDynamicFrame]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.dynamicFrameRenderHelper(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$FixDynamicFrame.Prefix($0, $1, $2, $3, $4, card);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.EventHelper.GetCustomEvents]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.EventHelper.GetCustomEvents.prefix($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.tempHp.BattleEnd]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.endBattle()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.tempHp.BattleEnd.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearMonsterContainersOnVictory]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.onVictory()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearMonsterContainersOnVictory.byeByeContainers($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.onCardDrawOrDiscard()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$BlockStuff]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decrementBlock(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$BlockStuff.block($0, $1, $2);
if (opt.isPresent()) { return ( (Integer)opt.get()).intValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPostDrawPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RefundExhaustivePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.RefundExhaustivePatch.Prefix($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearPlayerContainersOnPrep]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.preBattlePrep()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ClearPlayerContainersOnPrep.byeByeContainers($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.die(boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.heal(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.StunMonsterPatch$RollMove]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.rollMove()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.StunMonsterPatch$RollMove.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackPreBlockDamaged]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decrementBlock(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Prefix...
{
int[] __param3 = new int[1];
__param3[0] = $2;
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnAttackPreBlockDamaged.OnAttackedAndSaveInfo($0, $1, __param3);
$2 = (int)__param3[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CenterGridCardSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.updateCardPositionsAndHoverLogic()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.CenterGridCardSelectScreen.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenNext]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.openNext()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenNext.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddTempModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddTempModifiers.addMods($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenPrev]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.openPrev()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenPrev.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FleetingPatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Prefix...
{
com.megacrit.cardcrawl.cards.AbstractCard[] __param2 = new com.megacrit.cardcrawl.cards.AbstractCard[1];
__param2[0] = $1;
com.evacipated.cardcrawl.mod.stslib.patches.FleetingPatch.Prefix($0, __param2, $2);
$1 = (com.megacrit.cardcrawl.cards.AbstractCard)__param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.OnMyBlockBrokenPowerPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.brokeBlock()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.OnMyBlockBrokenPowerPatch.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToAction]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.addToBottom(com.megacrit.cardcrawl.actions.AbstractGameAction)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToAction.WithoutCrashingHopefully($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.onVictory()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ThornsBypass]
 - Patching [com.megacrit.cardcrawl.powers.ThornsPower.onAttacked(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$ThornsBypass.noDamagePls($0, $1, $2);
if (opt.isPresent()) { return ( (Integer)opt.get()).intValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addPower(com.megacrit.cardcrawl.powers.AbstractPower)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToAction]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.addToTop(com.megacrit.cardcrawl.actions.AbstractGameAction)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToAction.WithoutCrashingHopefully($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyTurnPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeConfirm]
 - Patching [com.megacrit.cardcrawl.ui.buttons.GridSelectConfirmButton.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeConfirm.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnLoseBlockPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decrementBlock(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Prefix...
{
int[] __param3 = new int[1];
__param3[0] = $2;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.bothInterfaces.OnLoseBlockPatch.Prefix($0, $1, __param3);
$2 = (int)__param3[0];
if (opt.isPresent()) { return ( (Integer)opt.get()).intValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CancelUpgrade]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.cancelUpgrade()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CancelUpgrade.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$DecrementCustomBlockAmounts]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.loseBlock(int,boolean)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
com.evacipated.cardcrawl.mod.stslib.patches.RetainMonsterBlockPatches$DecrementCustomBlockAmounts.pls($0, __param2);
$1 = (int)__param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.heal(int,boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseAlternateTargeting]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.updateSingleTargetInput()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$UseAlternateTargeting.alternateTargeting($0);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$RenderReticle]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderHoverReticle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$RenderReticle.customReticle($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderRedHealthBar(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar.Prefix($0, $1, $2, $3);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.disableBefore($0);
}

Patch Class: [aspiration.patches.Unique.KaomsHeartPatches$param_instantObtain]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain(com.megacrit.cardcrawl.characters.AbstractPlayer,int,boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = aspiration.patches.Unique.KaomsHeartPatches$param_instantObtain.Prefix($0, $1, $2, $3);
if (opt.isPresent()) { return; }
}

Patch Class: [aspiration.patches.blight.InjectBlightPatches]
 - Patching [com.megacrit.cardcrawl.helpers.BlightHelper.getBlight(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = aspiration.patches.blight.InjectBlightPatches.returnBlight($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.blights.AbstractBlight)opt.get(); }
}

Patch Class: [aspiration.patches.Unique.getRandomOrbReplacementPatch$RandomOrbRetrieval]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.getRandomOrb(boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = aspiration.patches.Unique.getRandomOrbReplacementPatch$RandomOrbRetrieval.Prefix($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.orbs.AbstractOrb)opt.get(); }
}

Patch Class: [aspiration.util.TextureLoader$DisposeListener]
 - Patching [com.badlogic.gdx.graphics.Texture.dispose()]
 - Adding Prefix...
{
aspiration.util.TextureLoader$DisposeListener.DisposeListenerPatch($0);
}

Patch Class: [aspiration.patches.NeowRewardPatches$ActivatePatch]
 - Patching [com.megacrit.cardcrawl.neow.NeowReward.activate()]
 - Adding Prefix...
{
aspiration.patches.NeowRewardPatches$ActivatePatch.patch($0);
}

Patch Class: [aspiration.patches.Unique.KaomsHeartPatches$norm_instantObtain]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = aspiration.patches.Unique.KaomsHeartPatches$norm_instantObtain.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [aspiration.patches.Unique.KaomsHeartPatches$norm_obtain]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.obtain()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = aspiration.patches.Unique.KaomsHeartPatches$norm_obtain.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [aspiration.patches.AtPrePreBattlePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyPreCombatLogic()]
 - Adding Prefix...
{
aspiration.patches.AtPrePreBattlePatch.Prefix($0);
}

Patch Class: [aspiration.patches.hooks.OnReducePowerRelicPatch$onReducePowerListener]
 - Patching [com.megacrit.cardcrawl.powers.AbstractPower.reducePower(int)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
aspiration.patches.hooks.OnReducePowerRelicPatch$onReducePowerListener.Prefix($0, __param2);
$1 = (int)__param2[0];
}

Patch Class: [betterAltar.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterAltar.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterAltar.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterAltar.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterAltar.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterAltar.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterLab.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterLab.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterLab.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterLab.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterLab.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterLab.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterMatch.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterMatch.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterMatch.patches.LibraryPatch$RemovePatch]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.sortOnOpen()]
 - Adding Prefix...
{
betterMatch.patches.LibraryPatch$RemovePatch.Prefix($0, visibleCards);
}

Patch Class: [betterMatch.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterMatch.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterMatch.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterMatch.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterNote.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterNote.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterNote.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterNote.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterNote.patches.NotePatch$NotePatchGenerate]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterNote.patches.NotePatch$NotePatchGenerate.Prefix($1, specialOneTimeEventList, eventList, shrineList);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [betterStone.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterStone.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterStone.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterStone.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterStone.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterStone.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterSkull.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterSkull.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterSkull.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterSkull.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [betterSkull.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterSkull.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterThird.patches.MaskedBanditsPatch$buttonPrefixPatch]
 - Patching [com.megacrit.cardcrawl.events.city.MaskedBandits.buttonEffect(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = betterThird.patches.MaskedBanditsPatch$buttonPrefixPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [betterThird.patches.MetricsPatch$victoryPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterThird.patches.MetricsPatch$victoryPrefixPatch.Prefix($0);
}

Patch Class: [betterThird.patches.RemoveEventPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Prefix...
{
betterThird.patches.RemoveEventPatch.Prefix($0);
}

Patch Class: [betterThird.patches.NestPatch$RelicHandPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DrawCardAction.update()]
 - Adding Prefix...
{
betterThird.patches.NestPatch$RelicHandPatch.Prefix($0);
}

Patch Class: [betterThird.patches.MetricsPatch$defeatVicPrefixPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitVictoryMetrics()]
 - Adding Prefix...
{
betterThird.patches.MetricsPatch$defeatVicPrefixPatch.Prefix($0);
}

Patch Class: [conspire.patches.TreasureMapPatch$MonsterRoomEliteRelicTier]
 - Patching [com.megacrit.cardcrawl.rooms.MonsterRoomElite.returnRandomRelicTier()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = conspire.patches.TreasureMapPatch$MonsterRoomEliteRelicTier.Prefix($0);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)opt.get(); }
}

Patch Class: [conspire.patches.DuplicatorEventPatch$ButtonEffect]
 - Patching [com.megacrit.cardcrawl.events.shrines.Duplicator.buttonEffect(int)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = conspire.patches.DuplicatorEventPatch$ButtonEffect.Prefix($0, __param2);
$1 = (int)__param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [conspire.patches.DeflatedDodgeballPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = conspire.patches.DeflatedDodgeballPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CultistEasterEgg$RenderPlayImage]
 - Patching [basemod.abstracts.CustomPlayer.renderPlayerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.CultistEasterEgg$RenderPlayImage.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$GremlinLeaderPatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.SummonGremlinAction.identifySlot(com.megacrit.cardcrawl.monsters.AbstractMonster[])]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$GremlinLeaderPatch.Prefix($0, $1);
if (opt.isPresent()) { return ( (Integer)opt.get()).intValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleHideDiscardPile]
 - Patching [com.megacrit.cardcrawl.ui.panels.DiscardPilePanel.updatePositions()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleHideDiscardPile.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SpecializedCircuitryPatch$ReplaceOrbs]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Prefix...
{
com.megacrit.cardcrawl.orbs.AbstractOrb[] __param2 = new com.megacrit.cardcrawl.orbs.AbstractOrb[1];
__param2[0] = $1;
com.evacipated.cardcrawl.mod.hubris.patches.SpecializedCircuitryPatch$ReplaceOrbs.Prefix($0, __param2);
$1 = (com.megacrit.cardcrawl.orbs.AbstractOrb)__param2[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RenderPlayImage]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderPlayerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RenderPlayImage.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.blights.Reinasbane$BlockKeys]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isPressed()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.blights.Reinasbane$BlockKeys.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SavePatch$DeleteSave]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.deleteSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.SavePatch$DeleteSave.Prefix($1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlightsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.BlightHelper.getBlight(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.BlightsPatch.Prefix($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.blights.AbstractBlight)opt.get(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$CloseCurrentScreen]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.closeCurrentScreen()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$CloseCurrentScreen.Prefix();
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$MakeDamageInfoPiercing]
 - Patching [com.megacrit.cardcrawl.cards.DamageInfo(com.megacrit.cardcrawl.core.AbstractCreature,int,com.megacrit.cardcrawl.cards.DamageInfo$DamageType)]
 - Adding Prefix...
{
com.megacrit.cardcrawl.cards.DamageInfo$DamageType[] __param4 = new com.megacrit.cardcrawl.cards.DamageInfo$DamageType[1];
__param4[0] = $3;
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$MakeDamageInfoPiercing.Prefix($0, $1, $2, __param4);
$3 = (com.megacrit.cardcrawl.cards.DamageInfo$DamageType)__param4[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CultistEasterEgg$RenderPlayImage]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.renderPlayerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.CultistEasterEgg$RenderPlayImage.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleMoveExhaustPile]
 - Patching [com.megacrit.cardcrawl.ui.panels.ExhaustPanel.updatePositions()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleMoveExhaustPile.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$ApplyPowersFakeNormalDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$ApplyPowersFakeNormalDamage.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$CanUse]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.canUse(com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$CanUse.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.GetEncounterPatch$GetEncounter]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.getEncounter(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
com.evacipated.cardcrawl.mod.hubris.patches.GetEncounterPatch$GetEncounter.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DustyCowlPatch$SingleRelicViewPopupPatch2]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.open(com.megacrit.cardcrawl.relics.AbstractRelic,java.util.ArrayList)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DustyCowlPatch$SingleRelicViewPopupPatch2.Prefix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$ResetAttibutes]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.resetAttributes()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$ResetAttibutes.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SavePatch$SaveGame]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.SavePatch$SaveGame.Prefix($1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PassThroughBlock]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decrementBlock(com.megacrit.cardcrawl.cards.DamageInfo,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PassThroughBlock.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Integer)opt.get()).intValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.HubrisRemoveKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.HubrisRemoveKeywords.Prefix($1, $2, $3, $4);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$PositionCards]
 - Patching [com.megacrit.cardcrawl.screens.CardRewardScreen.placeCards(float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$PositionCards.Prefix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DustyCowlPatch$SingleRelicViewPopupPatch1]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.open(com.megacrit.cardcrawl.relics.AbstractRelic)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DustyCowlPatch$SingleRelicViewPopupPatch1.Prefix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$CalculateCardDamageFakeNormalDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$CalculateCardDamageFakeNormalDamage.Prefix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.blights.Reinasbane$BlockKeys]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isJustPressed()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.blights.Reinasbane$BlockKeys.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$RenderEnergy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$RenderEnergy.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$FixShieldAndSpearCrash]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.shouldFlipVfx()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.ScarierMaskPatches$FixShieldAndSpearCrash.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$IncreaseMaxOrbSlots]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.increaseMaxOrbSlots(int,boolean)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.SoftwareUpdatePatch$IncreaseMaxOrbSlots.Prefix($0, __param2, $2);
$1 = (int)__param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RenderPlayImage]
 - Patching [basemod.abstracts.CustomPlayer.renderPlayerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = com.evacipated.cardcrawl.mod.hubris.patches.MerchantEasterEgg$RenderPlayImage.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BottledHeartPatch$NecronomiconSynergy]
 - Patching [com.megacrit.cardcrawl.relics.Necronomicon.onEquip()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BottledHeartPatch$NecronomiconSynergy.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TimeStopPatch]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.TimeStopPatch.Prefix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TerracottaHorcePatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.mod.hubris.patches.TerracottaHorcePatch.Prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.MawBankInfo]
 - Patching [com.megacrit.cardcrawl.relics.MawBank.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
relicstats.patches.relics.MawBankInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.SsserpentHeadInfo]
 - Patching [com.megacrit.cardcrawl.relics.SsserpentHead.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
relicstats.patches.relics.SsserpentHeadInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.LizardTailInfo]
 - Patching [com.megacrit.cardcrawl.relics.LizardTail.onTrigger()]
 - Adding Prefix...
{
relicstats.patches.relics.LizardTailInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.TingshaInfo]
 - Patching [com.megacrit.cardcrawl.relics.Tingsha.onManualDiscard()]
 - Adding Prefix...
{
relicstats.patches.relics.TingshaInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.CharonsAshesInfo]
 - Patching [com.megacrit.cardcrawl.relics.CharonsAshes.onExhaust(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
relicstats.patches.relics.CharonsAshesInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.OmamoriInfo]
 - Patching [com.megacrit.cardcrawl.relics.Omamori.use()]
 - Adding Prefix...
{
relicstats.patches.relics.OmamoriInfo.patch($0);
}

Patch Class: [relicstats.patches.RunHistoryScreenPatch$ReloadWithRunDataPatch]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.reloadWithRunData(com.megacrit.cardcrawl.screens.stats.RunData)]
 - Adding Prefix...
{
relicstats.patches.RunHistoryScreenPatch$ReloadWithRunDataPatch.patch($0, $1);
}

Patch Class: [relicstats.patches.BaseModPatch$AddRelicPatch]
 - Patching [basemod.BaseMod.addRelic(com.megacrit.cardcrawl.relics.AbstractRelic,basemod.helpers.RelicType)]
 - Adding Prefix...
{
relicstats.patches.BaseModPatch$AddRelicPatch.patch($1, $2);
}

Patch Class: [relicstats.patches.relics.MercuryHourglassInfo]
 - Patching [com.megacrit.cardcrawl.relics.MercuryHourglass.atTurnStart()]
 - Adding Prefix...
{
relicstats.patches.relics.MercuryHourglassInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.SnakeRingInfo]
 - Patching [com.megacrit.cardcrawl.relics.SnakeRing.atBattleStart()]
 - Adding Prefix...
{
relicstats.patches.relics.SnakeRingInfo.before($0);
}

Patch Class: [relicstats.patches.relics.BurningBlackBloodInfo$BlackBloodPatch]
 - Patching [com.megacrit.cardcrawl.relics.BlackBlood.onVictory()]
 - Adding Prefix...
{
relicstats.patches.relics.BurningBlackBloodInfo$BlackBloodPatch.prefix($0);
}

Patch Class: [relicstats.patches.relics.BagOfPreparationInfo]
 - Patching [com.megacrit.cardcrawl.relics.BagOfPreparation.atBattleStart()]
 - Adding Prefix...
{
relicstats.patches.relics.BagOfPreparationInfo.before($0);
}

Patch Class: [relicstats.patches.relics.ToyOrnithopterInfo]
 - Patching [com.megacrit.cardcrawl.relics.ToyOrnithopter.onUsePotion()]
 - Adding Prefix...
{
relicstats.patches.relics.ToyOrnithopterInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.BustedCrownInfo]
 - Patching [com.megacrit.cardcrawl.relics.BustedCrown.changeNumberOfCardsInReward(int)]
 - Adding Prefix...
{
relicstats.patches.relics.BustedCrownInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.LeesWaffleInfo]
 - Patching [com.megacrit.cardcrawl.relics.Waffle.onEquip()]
 - Adding Prefix...
{
relicstats.patches.relics.LeesWaffleInfo.prefix($0);
}

Patch Class: [relicstats.patches.BaseModPatch$AddRelicToCustomPoolPatch]
 - Patching [basemod.BaseMod.addRelicToCustomPool(com.megacrit.cardcrawl.relics.AbstractRelic,com.megacrit.cardcrawl.cards.AbstractCard$CardColor)]
 - Adding Prefix...
{
relicstats.patches.BaseModPatch$AddRelicToCustomPoolPatch.patch($1, $2);
}

Patch Class: [relicstats.patches.AbstractRelicPatch]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
relicstats.patches.AbstractRelicPatch.Prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.FaceOfClericInfo]
 - Patching [com.megacrit.cardcrawl.relics.FaceOfCleric.onVictory()]
 - Adding Prefix...
{
relicstats.patches.relics.FaceOfClericInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$PurgeCardPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.purgeCard()]
 - Adding Prefix...
{
relicstats.patches.relics.MembershipCardInfo$PurgeCardPatch.patch();
}

Patch Class: [relicstats.patches.relics.FrozenEyeInfo]
 - Patching [com.megacrit.cardcrawl.screens.DrawPileViewScreen.update()]
 - Adding Prefix...
{
relicstats.patches.relics.FrozenEyeInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.BloodVialInfo]
 - Patching [com.megacrit.cardcrawl.relics.BloodVial.atBattleStart()]
 - Adding Prefix...
{
relicstats.patches.relics.BloodVialInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.EternalFeatherInfo]
 - Patching [com.megacrit.cardcrawl.relics.EternalFeather.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
relicstats.patches.relics.EternalFeatherInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.BurningBlackBloodInfo$BurningBloodPatch]
 - Patching [com.megacrit.cardcrawl.relics.BurningBlood.onVictory()]
 - Adding Prefix...
{
relicstats.patches.relics.BurningBlackBloodInfo$BurningBloodPatch.prefix($0);
}

Patch Class: [relicstats.patches.RunHistoryScreenPatch$RefreshDataPatch]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.refreshData()]
 - Adding Prefix...
{
relicstats.patches.RunHistoryScreenPatch$RefreshDataPatch.before($0);
}

Patch Class: [relicstats.patches.relics.QuestionCardInfo]
 - Patching [com.megacrit.cardcrawl.relics.QuestionCard.changeNumberOfCardsInReward(int)]
 - Adding Prefix...
{
relicstats.patches.relics.QuestionCardInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.PantographInfo]
 - Patching [com.megacrit.cardcrawl.relics.Pantograph.atBattleStart()]
 - Adding Prefix...
{
relicstats.patches.relics.PantographInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.WhiteBeastStatueInfo$PotionRewardPatch]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.addPotionToRewards()]
 - Adding Prefix...
{
relicstats.patches.relics.WhiteBeastStatueInfo$PotionRewardPatch.prefix($0);
}

Patch Class: [relicstats.patches.relics.BloodyIdolInfo]
 - Patching [com.megacrit.cardcrawl.relics.BloodyIdol.onGainGold()]
 - Adding Prefix...
{
relicstats.patches.relics.BloodyIdolInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.MealTicketInfo]
 - Patching [com.megacrit.cardcrawl.relics.MealTicket.justEnteredRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
relicstats.patches.relics.MealTicketInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.ChampionsBeltInfo]
 - Patching [com.megacrit.cardcrawl.relics.ChampionsBelt.onTrigger(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Prefix...
{
relicstats.patches.relics.ChampionsBeltInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$ShopScreenInitPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Prefix...
{
relicstats.patches.relics.MembershipCardInfo$ShopScreenInitPatch.patch($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.BlackStarInfo]
 - Patching [com.megacrit.cardcrawl.relics.BlackStar.onVictory()]
 - Adding Prefix...
{
relicstats.patches.relics.BlackStarInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.CeramicFishInfo]
 - Patching [com.megacrit.cardcrawl.relics.CeramicFish.onObtainCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
relicstats.patches.relics.CeramicFishInfo.prefix($0, $1);
}

Patch Class: [relicstats.patches.relics.MeatOnTheBoneInfo]
 - Patching [com.megacrit.cardcrawl.relics.MeatOnTheBone.onTrigger()]
 - Adding Prefix...
{
relicstats.patches.relics.MeatOnTheBoneInfo.prefix($0);
}

Patch Class: [relicstats.patches.relics.SmilingMaskInfo]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.purgeCard()]
 - Adding Prefix...
{
relicstats.patches.relics.SmilingMaskInfo.patch();
}

Patch Class: [relicstats.patches.relics.MelangeInfo]
 - Patching [com.megacrit.cardcrawl.relics.Melange.onShuffle()]
 - Adding Prefix...
{
relicstats.patches.relics.MelangeInfo.patch($0);
}

Patch Class: [SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Prefix...
{
SpicyShops.patches.ExtraPotionChoicesPatches$CreateAdditionalRelics.resetVars($0);
}

Patch Class: [SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initRelics()]
 - Adding Prefix...
{
SpicyShops.patches.ExtraRelicChoicePatches$CreateAdditionalRelics.resetVars($0);
}

Patch Class: [SpicyShops.util.TextureLoader$DisposeListener]
 - Patching [com.badlogic.gdx.graphics.Texture.dispose()]
 - Adding Prefix...
{
SpicyShops.util.TextureLoader$DisposeListener.DisposeListenerPatch($0);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$RenderModifierTips]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.shopRender(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
SpicyShops.patches.SpicyPotionPatches$RenderModifierTips.addTip($0, $1);
}

Patch Class: [uncapped.ORBS$IncreaseMaxOrbSlots]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.increaseMaxOrbSlots(int,boolean)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = uncapped.ORBS$IncreaseMaxOrbSlots.Prefix($0, __param2, $2);
$1 = (int)__param2[0];
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.NeowBlessingPatch$CustomModeScreenPatch]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.addNonDailyMods(com.megacrit.cardcrawl.trials.CustomTrial,java.util.ArrayList)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.NeowBlessingPatch$CustomModeScreenPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [hermit.util.TextureLoader$DisposeListener]
 - Patching [com.badlogic.gdx.graphics.Texture.dispose()]
 - Adding Prefix...
{
hermit.util.TextureLoader$DisposeListener.DisposeListenerPatch($0);
}

Patch Class: [downfall.patches.SavePatch$SaveGame]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Prefix...
{
downfall.patches.SavePatch$SaveGame.Prefix($1);
}

Patch Class: [hermit.patches.VigorPatch$DisableHealing]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Prefix...
{
hermit.patches.VigorPatch$DisableHealing.Prefix($0);
}

Patch Class: [gremlin.patches.relicpatches.GremlinMaskDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.GremlinMask.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.GremlinMaskDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.FlipRoom$Room]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.FlipRoom$Room.Prefix($0, $1);
}

Patch Class: [reskinContent.patches.VictoryScreenPatches$ReskinUnlockPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.updateAscensionAndBetaArtProgress()]
 - Adding Prefix...
{
reskinContent.patches.VictoryScreenPatches$ReskinUnlockPatch.Prefix($0);
}

Patch Class: [downfall.patches.AllRelicsAreCircletsPatch$RelicPatch]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.spawnRelicAndObtain(float,float,com.megacrit.cardcrawl.relics.AbstractRelic)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.AllRelicsAreCircletsPatch$RelicPatch.Prefix($0, $1, $2, $3);
if (opt.isPresent()) { return; }
}

Patch Class: [champ.patches.SuplexPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.updateAnimations()]
 - Adding Prefix...
{
champ.patches.SuplexPatch.Prefix($0);
}

Patch Class: [charbosses.patches.PaperKraneWeakPatch$SuperWeakEffect]
 - Patching [com.megacrit.cardcrawl.powers.WeakPower.atDamageGive(float,com.megacrit.cardcrawl.cards.DamageInfo$DamageType)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.PaperKraneWeakPatch$SuperWeakEffect.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Float)opt.get()).floatValue(); }
}

Patch Class: [hermit.patches.FreePlayPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.freeToPlay()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.FreePlayPatch.FreePlay($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [charbosses.patches.BrokeBlockPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.brokeBlock()]
 - Adding Prefix...
{
charbosses.patches.BrokeBlockPatch.Prefix($0);
}

Patch Class: [downfall.patches.AscensionTextPatch]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.AscensionTextPatch.Prefix($0, $1);
}

Patch Class: [downfall.patches.ui.map.EmeraldElite]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.setEmeraldElite()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.ui.map.EmeraldElite.alternate();
if (opt.isPresent()) { return; }
}

Patch Class: [sneckomod.patches.UnnecessaryPatch$InDraw]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDiscardEffect.update()]
 - Adding Prefix...
{
sneckomod.patches.UnnecessaryPatch$InDraw.Prefix($0);
}

Patch Class: [slimebound.patches.SlimeTalk]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SlimeBoss.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalk.Prefix($0);
}

Patch Class: [downfall.patches.RelicOverrides$prismaticDesc]
 - Patching [com.megacrit.cardcrawl.relics.PrismaticShard.getUpdatedDescription()]
 - Adding Prefix...
{
downfall.patches.RelicOverrides$prismaticDesc.Postfix($0);
}

Patch Class: [hermit.patches.HealPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.heal(int,boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.HealPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [guardian.patches.GuardianTalkDonu]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Donu.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkDonu.Prefix($0);
}

Patch Class: [gremlin.patches.talkpatches.GremlinTsunderePatch]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.GremlinTsundere.takeTurn()]
 - Adding Prefix...
{
gremlin.patches.talkpatches.GremlinTsunderePatch.Prefix($0);
}

Patch Class: [gremlin.patches.talkpatches.GremlinWarriorPatch]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.GremlinWarrior.takeTurn()]
 - Adding Prefix...
{
gremlin.patches.talkpatches.GremlinWarriorPatch.Prefix($0);
}

Patch Class: [gremlin.patches.talkpatches.GremlinFatPatch]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.GremlinFat.takeTurn()]
 - Adding Prefix...
{
gremlin.patches.talkpatches.GremlinFatPatch.Prefix($0);
}

Patch Class: [downfall.patches.GlobalExtraCardUIPatch$SecondEnergyRenderPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.GlobalExtraCardUIPatch$SecondEnergyRenderPatch.patch($0, $1);
}

Patch Class: [downfall.patches.UnflipUI$HealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.UnflipUI$HealthBar.Prefix($0, $1);
}

Patch Class: [downfall.patches.GlobalSpecialUpdatePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.EnergyPanel.update()]
 - Adding Prefix...
{
downfall.patches.GlobalSpecialUpdatePatch.Prefix($0);
}

Patch Class: [downfall.patches.GlobalOnCardUsePatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.triggerOnOtherCardPlayed(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
downfall.patches.GlobalOnCardUsePatch.Prefix($0, $1);
}

Patch Class: [downfall.util.TextureLoader$DisposeListener]
 - Patching [com.badlogic.gdx.graphics.Texture.dispose()]
 - Adding Prefix...
{
downfall.util.TextureLoader$DisposeListener.DisposeListenerPatch($0);
}

Patch Class: [hermit.patches.AttackEffectPatch$vfx]
 - Patching [com.megacrit.cardcrawl.vfx.combat.FlashAtkImgEffect.loadImage()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.AttackEffectPatch$vfx.Prefix($0, effect);
if (opt.isPresent()) { return (com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)opt.get(); }
}

Patch Class: [gremlin.patches.CowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.EnableEndTurnButtonAction.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.CowerPatch.patch($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.SingingBowlUIPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.SingingBowlButton.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.SingingBowlUIPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.BandAidMerchantCrashFix$RelicPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.cardPlayable(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.BandAidMerchantCrashFix$RelicPatch.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [downfall.patches.ApotheosisStasisFunctionPatch$TimeToLearn]
 - Patching [com.megacrit.cardcrawl.actions.unique.ApotheosisAction.update()]
 - Adding Prefix...
{
downfall.patches.ApotheosisStasisFunctionPatch$TimeToLearn.Prefix($0);
}

Patch Class: [downfall.patches.RelicOverrides$ectoDesc]
 - Patching [com.megacrit.cardcrawl.relics.Ectoplasm.getUpdatedDescription()]
 - Adding Prefix...
{
downfall.patches.RelicOverrides$ectoDesc.Prefix($0);
}

Patch Class: [guardian.patches.GuardianTalkSentries]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.Sentry.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkSentries.Prefix($0);
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchAV]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.playAV(java.lang.String,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchAV.Prefix($0, $1, $2, $3);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [reskinContent.patches.OrbPatches$SetSlotPatch]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = reskinContent.patches.OrbPatches$SetSlotPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.SlimeTalkSpikeS]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_S.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkSpikeS.Prefix($0);
}

Patch Class: [downfall.patches.NeowBlessingPatch$PotionPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderPotions(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.NeowBlessingPatch$PotionPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.GremlinMaskPatch]
 - Patching [com.megacrit.cardcrawl.relics.GremlinMask.atBattleStart()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.GremlinMaskPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchNormal2]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.play(java.lang.String,boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchNormal2.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [gremlin.patches.eventpatches.GremlinEventFixPatch2]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.eventpatches.GremlinEventFixPatch2.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.FlipRoom$NPC1]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.FlipRoom$NPC1.Prefix($0, $1);
}

Patch Class: [gremlin.patches.EmptyOrbSlotPatch2]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.EmptyOrbSlotPatch2.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [guardian.patches.GuardianTalkSphere]
 - Patching [com.megacrit.cardcrawl.monsters.city.SphericGuardian.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkSphere.Prefix($0);
}

Patch Class: [slimebound.patches.StrikeEffectPatch$removeStrikeVFX]
 - Patching [com.megacrit.cardcrawl.vfx.combat.StrikeEffect(com.megacrit.cardcrawl.core.AbstractCreature,float,float,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = slimebound.patches.StrikeEffectPatch$removeStrikeVFX.Prefix($0, $1, $2, $3, $4);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.UnmovablePatch$StaysInHand2]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToDeck(com.megacrit.cardcrawl.cards.AbstractCard,boolean)]
 - Adding Prefix...
{
gremlin.patches.UnmovablePatch$StaysInHand2.Prefix($0, $1, $2);
}

Patch Class: [downfall.patches.rooms.BetterEndingPatches$StringChanges]
 - Patching [com.megacrit.cardcrawl.events.beyond.SpireHeart()]
 - Adding Prefix...
{
downfall.patches.rooms.BetterEndingPatches$StringChanges.patch($0);
}

Patch Class: [downfall.patches.PrefsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.Prefs.getString(java.lang.String,java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.PrefsPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [charbosses.patches.ApplyFocusrPatch$ApplyFocusrPatchB]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.onModifyPower()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.ApplyFocusrPatch$ApplyFocusrPatchB.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.TokePatch]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireTokeEffect.update()]
 - Adding Prefix...
{
slimebound.patches.TokePatch.Prefix();
}

Patch Class: [guardian.patches.GuardianTalkOrbwalker]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.OrbWalker.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkOrbwalker.Prefix($0);
}

Patch Class: [downfall.patches.NeowLamentPatch$SaveGame]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Prefix...
{
downfall.patches.NeowLamentPatch$SaveGame.Prefix($1);
}

Patch Class: [charbosses.patches.DarkenCardPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderTint(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.DarkenCardPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.PearDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.Pear.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.PearDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.RelicOverrides$slaversCollarDesc]
 - Patching [com.megacrit.cardcrawl.relics.SlaversCollar.setDescription(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.RelicOverrides$slaversCollarDesc.Prefix();
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [guardian.patches.GuardianTalkDeca]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Deca.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkDeca.Prefix($0);
}

Patch Class: [gremlin.patches.relicpatches.StrawberryDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.Strawberry.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.StrawberryDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.HeartShopUIPatches$DisableAudio1]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.playCantBuySfx()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.HeartShopUIPatches$DisableAudio1.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.ui.map.FlipMap$WhyDoYouNotPayAnyRealAttentionToTheVariables]
 - Patching [com.megacrit.cardcrawl.screens.DungeonMapScreen.updateAnimation()]
 - Adding Prefix...
{
float[] __param3 = new float[1];
__param3[0] = scrollWaitTimer;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.ui.map.FlipMap$WhyDoYouNotPayAnyRealAttentionToTheVariables.WellThenIHaveToDoItMyself($0, targetOffsetY, __param3);
scrollWaitTimer = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [charbosses.patches.ApplyPowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.ApplyPowerPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.NeowBlessingPatch$ObtainPotionPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ObtainPotionAction.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.NeowBlessingPatch$ObtainPotionPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [charbosses.patches.AbstractBossCardPatches$RenderCardBgPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCardBg(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.AbstractBossCardPatches$RenderCardBgPatch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.talkpatches.GremlinWizardPatch]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.GremlinWizard.takeTurn()]
 - Adding Prefix...
{
gremlin.patches.talkpatches.GremlinWizardPatch.Prefix($0);
}

Patch Class: [downfall.patches.FlipRoom$NPC2]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
downfall.patches.FlipRoom$NPC2.Prefix($0, $1, $2);
}

Patch Class: [downfall.patches.BanSharedContentPatch$RelicPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeRelicList()]
 - Adding Prefix...
{
downfall.patches.BanSharedContentPatch$RelicPatch.Prefix($0);
}

Patch Class: [slimebound.patches.SlimeTalkAcidM]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.AcidSlime_M.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkAcidM.Prefix($0);
}

Patch Class: [downfall.patches.HeartShopUIPatches$DisableAudio4]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.welcomeSfx()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.HeartShopUIPatches$DisableAudio4.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.SingingBowlDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.SingingBowl.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.SingingBowlDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.EvilModeCharacterOption]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Prefix...
{
downfall.patches.EvilModeCharacterOption.Prefix($0);
}

Patch Class: [downfall.patches.EvilModeCharacterSelect$ResetOptions]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.update()]
 - Adding Prefix...
{
downfall.patches.EvilModeCharacterSelect$ResetOptions.Prefix($0);
}

Patch Class: [hermit.patches.EndOfTurnPatch3]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.clear()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.EndOfTurnPatch3.Clear($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.UnmovablePatch$StaysInHand]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToBottomOfDeck(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
gremlin.patches.UnmovablePatch$StaysInHand.Prefix($0, $1);
}

Patch Class: [downfall.patches.DailyModeEvilPatch$Proceed]
 - Patching [com.megacrit.cardcrawl.daily.DailyScreen.update()]
 - Adding Prefix...
{
downfall.patches.DailyModeEvilPatch$Proceed.Prefix($0);
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchNormal]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.play(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchNormal.Prefix($0, $1);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [slimebound.patches.SlimeTalkAcidL]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.AcidSlime_L.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkAcidL.Prefix($0);
}

Patch Class: [downfall.patches.FlipRoom$MerchantRug]
 - Patching [com.megacrit.cardcrawl.shop.Merchant.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.FlipRoom$MerchantRug.Prefix($0, $1);
}

Patch Class: [gremlin.patches.UnmovablePatch$StaysInHand]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.resetCardBeforeMoving(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
gremlin.patches.UnmovablePatch$StaysInHand.Prefix($0, $1);
}

Patch Class: [charbosses.patches.DontRenderThatPatch$Noooooo]
 - Patching [com.megacrit.cardcrawl.vfx.combat.PowerExpireTextEffect.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = charbosses.patches.DontRenderThatPatch$Noooooo.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.EvokeOrbPatch]
 - Patching [com.evacipated.cardcrawl.mod.stslib.actions.defect.EvokeSpecificOrbAction.update()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = slimebound.patches.EvokeOrbPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.FaceOfClericVictoryPatch]
 - Patching [com.megacrit.cardcrawl.relics.FaceOfCleric.onVictory()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.FaceOfClericVictoryPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.MigrateSavePatch]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.saveMigration()]
 - Adding Prefix...
{
downfall.patches.MigrateSavePatch.Prefix($0);
}

Patch Class: [sneckomod.patches.SnekproofPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConfusionPower.onCardDraw(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = sneckomod.patches.SnekproofPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.DebuggingMapLoadCrashFix]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.populatePathTaken(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.DebuggingMapLoadCrashFix.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.WhatModKiller]
 - Patching [basemod.patches.whatmod.WhatMod.renderModTooltip(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.Class,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.WhatModKiller.Prefix($1, $2, $3, $4);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.relicpatches.TinyHouseDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.TinyHouse.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.TinyHouseDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [slimebound.patches.SlimeTalkCollector]
 - Patching [com.megacrit.cardcrawl.monsters.city.TheCollector.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkCollector.Prefix($0);
}

Patch Class: [downfall.patches.rooms.BetterEndingPatches$MoveToAct4]
 - Patching [com.megacrit.cardcrawl.events.beyond.SpireHeart.buttonEffect(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.rooms.BetterEndingPatches$MoveToAct4.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [champ.patches.VigorPatch$DontConsumeVigorPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.VigorPower.onUseCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.actions.utility.UseCardAction)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = champ.patches.VigorPatch$DontConsumeVigorPatch.patch($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.vfx.RainingGoldPatch]
 - Patching [com.megacrit.cardcrawl.vfx.RainingGoldEffect(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.vfx.RainingGoldPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [guardian.patches.SocketGemGridPatchCancelButton]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.open(com.megacrit.cardcrawl.cards.CardGroup,int,java.lang.String,boolean,boolean,boolean,boolean)]
 - Adding Prefix...
{
guardian.patches.SocketGemGridPatchCancelButton.Prefix($0, $1, $2, $3, $4, $5, $6, $7);
}

Patch Class: [slimebound.patches.SlimeTalkDark]
 - Patching [com.megacrit.cardcrawl.monsters.beyond.Darkling.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkDark.Prefix($0);
}

Patch Class: [hermit.patches.DamageHeartEffectVisualPatch]
 - Patching [com.megacrit.cardcrawl.vfx.DamageHeartEffect.loadImage()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.DamageHeartEffectVisualPatch.Prefix($0);
if (opt.isPresent()) { return (com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)opt.get(); }
}

Patch Class: [hermit.patches.EndOfTurnPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfTurnPreDrawCards()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.EndOfTurnPatch.EOT($0);
if (opt.isPresent()) { return; }
}

Patch Class: [automaton.patches.StatusReplacePatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = automaton.patches.StatusReplacePatch.Prefix($0);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.cards.AbstractCard)opt.get(); }
}

Patch Class: [slimebound.patches.TokeOptionPatch]
 - Patching [com.megacrit.cardcrawl.ui.campfire.TokeOption.useOption()]
 - Adding Prefix...
{
slimebound.patches.TokeOptionPatch.Prefix();
}

Patch Class: [downfall.patches.NeowBlessingPatch$PotionPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updatePotions()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.NeowBlessingPatch$PotionPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchV]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.playV(java.lang.String,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchV.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [gremlin.patches.relicpatches.MangoDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.Mango.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.MangoDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchA]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.playA(java.lang.String,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchA.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [downfall.patches.HeartShopUIPatches$DisableAudio3]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.playMiscSfx()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.HeartShopUIPatches$DisableAudio3.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.SlimeTalkSpikeM]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_M.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkSpikeM.Prefix($0);
}

Patch Class: [gremlin.patches.EmptyOrbSlotPatch]
 - Patching [com.megacrit.cardcrawl.orbs.EmptyOrbSlot.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.EmptyOrbSlotPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.GoldSoundPatch$GoldSoundPatchNormal3]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster.play(java.lang.String,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.GoldSoundPatch$GoldSoundPatchNormal3.Prefix($0, $1, $2);
if (opt.isPresent()) { return ( (Long)opt.get()).longValue(); }
}

Patch Class: [downfall.patches.MainMenuEvilMode$RedirectPlayNormal]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton.buttonEffect()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.MainMenuEvilMode$RedirectPlayNormal.Prefix($0, result);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.RelicOverrides$membershipCardName]
 - Patching [com.megacrit.cardcrawl.relics.MembershipCard.getUpdatedDescription()]
 - Adding Prefix...
{
downfall.patches.RelicOverrides$membershipCardName.Prefix($0);
}

Patch Class: [downfall.patches.ProceedButtonPatch2]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.goToDoubleBoss()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.ProceedButtonPatch2.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.UnmovablePatch$StaysInHand]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
gremlin.patches.UnmovablePatch$StaysInHand.Prefix($0, $1);
}

Patch Class: [hermit.patches.DamageHeartEffectAudioPatch]
 - Patching [com.megacrit.cardcrawl.vfx.DamageHeartEffect.playSound(com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.DamageHeartEffectAudioPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.SlimeTalkSpikeL]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_L.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkSpikeL.Prefix($0);
}

Patch Class: [slimebound.patches.MaxOrbsPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.increaseMaxOrbSlots(int,boolean)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = slimebound.patches.MaxOrbsPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.OrbPositionPatch]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.OrbPositionPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [sneckomod.patches.UnnecessaryPatch$InDraw]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDrawPileEffect.update()]
 - Adding Prefix...
{
sneckomod.patches.UnnecessaryPatch$InDraw.Prefix($0);
}

Patch Class: [downfall.patches.RemoveHermitRelics]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeRelicList()]
 - Adding Prefix...
{
downfall.patches.RemoveHermitRelics.Prefix($0);
}

Patch Class: [downfall.patches.StancePatch$DefensiveMode_StancePatch]
 - Patching [com.megacrit.cardcrawl.stances.AbstractStance.getStanceFromName(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.StancePatch$DefensiveMode_StancePatch.returnStance($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.stances.AbstractStance)opt.get(); }
}

Patch Class: [gremlin.patches.relicpatches.WaffleDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.Waffle.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.WaffleDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [theHexaghost.patches.ExhaustCardTickPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
theHexaghost.patches.ExhaustCardTickPatch.Prefix($0, $1);
}

Patch Class: [sneckomod.patches.UnnecessaryPatch$InDraw]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToHandEffect.update()]
 - Adding Prefix...
{
sneckomod.patches.UnnecessaryPatch$InDraw.Prefix($0);
}

Patch Class: [downfall.patches.ui.map.FlipMap$EliteRoomPatch]
 - Patching [com.megacrit.cardcrawl.map.RoomTypeAssigner.ruleAssignableToRow(com.megacrit.cardcrawl.map.MapRoomNode,com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.ui.map.FlipMap$EliteRoomPatch.Prefix($1, $2);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [gremlin.patches.CrippledPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WeakPower.atEndOfRound()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.CrippledPowerPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [gremlin.patches.UnmovablePatch$StaysInHand]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToDiscardPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Prefix...
{
gremlin.patches.UnmovablePatch$StaysInHand.Prefix($0, $1);
}

Patch Class: [downfall.patches.EnergyPanelRenderPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.EnergyPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
downfall.patches.EnergyPanelRenderPatch.Prefix($0, $1);
}

Patch Class: [expansioncontent.patches.CenterGridCardSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.updateCardPositionsAndHoverLogic()]
 - Adding Prefix...
{
expansioncontent.patches.CenterGridCardSelectScreen.Prefix($0);
}

Patch Class: [slimebound.patches.PreBlockPowersTriggerPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
slimebound.patches.PreBlockPowersTriggerPatch.Prefix($0, $1);
}

Patch Class: [guardian.patches.GuardianTalk]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.TheGuardian.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalk.Prefix($0);
}

Patch Class: [hermit.patches.SelectScreenPatch2]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.prep()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.SelectScreenPatch2.SelectionPrePatch($0);
if (opt.isPresent()) { return; }
}

Patch Class: [slimebound.patches.SlimeBossCheck]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SlimeBoss.usePreBattleAction()]
 - Adding Prefix...
{
slimebound.patches.SlimeBossCheck.Prefix($0);
}

Patch Class: [downfall.patches.EvilModeCharacterSelect$ChangeToEvilOptions]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.open(boolean)]
 - Adding Prefix...
{
downfall.patches.EvilModeCharacterSelect$ChangeToEvilOptions.Prefix($0, $1);
}

Patch Class: [gremlin.patches.relicpatches.FaceOfClericDescriptionPatch]
 - Patching [com.megacrit.cardcrawl.relics.FaceOfCleric.getUpdatedDescription()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = gremlin.patches.relicpatches.FaceOfClericDescriptionPatch.Prefix($0);
if (opt.isPresent()) { return (java.lang.String)opt.get(); }
}

Patch Class: [downfall.patches.HeartShopUIPatches$DisableAudio2]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.playBuySfx()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.HeartShopUIPatches$DisableAudio2.Prefix();
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.UnflipUI$TextDamageIntent]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderFontLeftTopAligned(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.UnflipUI$TextDamageIntent.Prefix($1, $2, $3, $4, $5, $6);
if (opt.isPresent()) { return; }
}

Patch Class: [hermit.patches.AttackEffectPatch$sfx]
 - Patching [com.megacrit.cardcrawl.vfx.combat.FlashAtkImgEffect.playSound(com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = hermit.patches.AttackEffectPatch$sfx.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.rooms.ShopRoomReplacePatch$replaceRoomGeneration]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateRoom(com.megacrit.cardcrawl.helpers.EventHelper$RoomResult)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = downfall.patches.rooms.ShopRoomReplacePatch$replaceRoomGeneration.Prefix($0, $1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.rooms.AbstractRoom)opt.get(); }
}

Patch Class: [guardian.patches.SocketGemGridPatchCancelAction]
 - Patching [com.megacrit.cardcrawl.ui.buttons.CancelButton.update()]
 - Adding Prefix...
{
guardian.patches.SocketGemGridPatchCancelAction.Prefix($0);
}

Patch Class: [slimebound.patches.SlimeTalkAcidS]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.AcidSlime_S.takeTurn()]
 - Adding Prefix...
{
slimebound.patches.SlimeTalkAcidS.Prefix($0);
}

Patch Class: [gremlin.patches.talkpatches.GremlinThiefPatch]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.GremlinThief.takeTurn()]
 - Adding Prefix...
{
gremlin.patches.talkpatches.GremlinThiefPatch.Prefix($0);
}

Patch Class: [downfall.patches.RelicOverrides$courierName]
 - Patching [com.megacrit.cardcrawl.relics.Courier.getUpdatedDescription()]
 - Adding Prefix...
{
downfall.patches.RelicOverrides$courierName.Prefix($0);
}

Patch Class: [guardian.patches.GuardianTalkAutomaton]
 - Patching [com.megacrit.cardcrawl.monsters.city.BronzeAutomaton.takeTurn()]
 - Adding Prefix...
{
guardian.patches.GuardianTalkAutomaton.Prefix($0);
}

Patch Class: [slimebound.patches.OrbPositionPatch]
 - Patching [com.megacrit.cardcrawl.orbs.AbstractOrb.setSlot(int,int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = slimebound.patches.OrbPositionPatch.Prefix($0, $1, $2);
if (opt.isPresent()) { return; }
}

Patch Class: [downfall.patches.RelicOverrides$oldCoinName]
 - Patching [com.megacrit.cardcrawl.relics.OldCoin.getUpdatedDescription()]
 - Adding Prefix...
{
downfall.patches.RelicOverrides$oldCoinName.Prefix($0);
}

Patch Class: [theLatent.util.TexLoader$DisposeListener]
 - Patching [com.badlogic.gdx.graphics.Texture.dispose()]
 - Adding Prefix...
{
theLatent.util.TexLoader$DisposeListener.DisposeListenerPatch($0);
}

Patch Class: [theLatent.patches.EnergizedPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.applyStartOfCombatPreDrawLogic()]
 - Adding Prefix...
{
theLatent.patches.EnergizedPatch.patchMethod($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CreditsModList]
 - Patching [com.megacrit.cardcrawl.credits.CreditsScreen()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.CreditsModList.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$SetLabel]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuButton.setLabel()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$SetLabel.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updateTips()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Update]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.update()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Update.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Render]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.DisableBaseModBadges]
 - Patching [basemod.BaseMod.publishPostInitialize()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.DisableBaseModBadges.Postfix();
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$ButtonEffect]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuButton.buttonEffect()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$ButtonEffect.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.ForceUnlock]
 - Patching [com.megacrit.cardcrawl.screens.GameOverScreen.calculateUnlockProgress()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.ForceUnlock.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PowersModified]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.onModifyPower()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PowersModified.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.AddCustomModeModsHook]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.initializeMods()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.AddCustomModeModsHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounterName]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.getEncounterName(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounterName.Postfix($_, $1);
}

Patch Class: [basemod.patches.whatmod.RelicView]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.RelicView.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$PowerTipHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.getPowerTipHeight(com.megacrit.cardcrawl.helpers.PowerTip)]
 - Adding Postfix...
      Return: float
      Result param: float
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.CardPowerTipsInTipHelperPatch$PowerTipHeightPatch.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GreenCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addGreenCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GreenCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.blue.EchoForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips.Postfix($1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.RedCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addRedCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.RedCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderAscension(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CurseCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addCurseCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CurseCardsPatch.Postfix();
}

Patch Class: [basemod.patches.whatmod.Events]
 - Patching [com.megacrit.cardcrawl.events.AbstractEvent.renderText(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.Events.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.setPlayerName()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$SavedGameConstructor]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$SavedGameConstructor.Postfix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$CharacterText]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.characterText(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$CharacterText.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulatePools]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.populateRelicPool(java.util.ArrayList,com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier,com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulatePools.Postfix($1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRender]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRender.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$DescriptionColor]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.TinyCard.getIconDescriptionColor(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$DescriptionColor.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.ScrollBoundsFix$OpenStartBounds]
 - Patching [com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.open()]
 - Adding Postfix...
{
float[] __param2 = new float[1];
__param2[0] = scrollLowerBound;
float[] __param3 = new float[1];
__param3[0] = targetY;
basemod.patches.com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.ScrollBoundsFix$OpenStartBounds.Postfix($0, __param2, __param3);
scrollLowerBound = __param2[0];
targetY = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotions]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getPotions(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,boolean)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotions.Postfix($_, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.CampfireUI.GiryaFix]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.CampfireUI.GiryaFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Update]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.update(float)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Update.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierUpdate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierUpdate.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.PurpleCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addPurpleCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.PurpleCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$SeededRun]
 - Patching [com.megacrit.cardcrawl.trials.MyTrueFormTrial.dailyModIDs()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$SeededRun.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.EndBattleHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.endBattle()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.EndBattleHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierAtEndOfTurn]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyEndOfTurnTriggers()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierAtEndOfTurn.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextForPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextForPowers.updateAfterVarChange($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$TextureConstructor]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$TextureConstructor.correctAmount($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.renderItemReward(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor.Postfix($0, $1);
}

Patch Class: [basemod.helpers.CardBorderGlowManager$RenderGlowPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderGlow(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.helpers.CardBorderGlowManager$RenderGlowPatch.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounter]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.getEncounter(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.monsters.MonsterGroup
      Result param: com.megacrit.cardcrawl.monsters.MonsterGroup
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounter.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopRelicHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initRelics()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopRelicHook.Postfix($0);
}

Patch Class: [basemod.patches.whatmod.CardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.CardView.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateOnUpgradePreview]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.displayUpgrades()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateOnUpgradePreview.onPreview($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.WithoutBottledCardsPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getGroupWithoutBottledCards(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.CardGroup
      Result param: com.megacrit.cardcrawl.cards.CardGroup
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.WithoutBottledCardsPatch.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$OpenTextureFix]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.loadPortraitImg()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$OpenTextureFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.CountModdedUnlockCards]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.countUnlockedCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.CountModdedUnlockCards.countModdedUnlocks();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.PostRefresh]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.refresh()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.PostRefresh.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$Two]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.obtainPotion(com.megacrit.cardcrawl.potions.AbstractPotion)]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$Two.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$setLockStatus]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.setLockStatus()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$setLockStatus.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.red.DemonForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderScreen(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotion]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getPotion(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.Object
      Result param: java.lang.Object
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotion.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$BackgroundColor]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.TinyCard.getIconBackgroundColor(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$BackgroundColor.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkFontSize]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.getDescFont()]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.g2d.BitmapFont
      Result param: com.badlogic.gdx.graphics.g2d.BitmapFont
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkFontSize.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.FixLargeRelicArt]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.initializeLargeImg()]
 - Adding Postfix...
{
com.badlogic.gdx.graphics.Texture[] __param3 = new com.badlogic.gdx.graphics.Texture[1];
__param3[0] = largeImg;
basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.FixLargeRelicArt.Postfix($0, relic, __param3);
largeImg = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.purple.DevaForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomVictoryEffects]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.updateVfx()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomVictoryEffects.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulateLists]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.addClassSpecificRelics(java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulateLists.Postfix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.stats.StatsScreen.UpdateStats$ScrollBounds]
 - Patching [com.megacrit.cardcrawl.screens.stats.StatsScreen.calculateScrollBounds()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.stats.StatsScreen.UpdateStats$ScrollBounds.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$One]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.obtainPotion(int,com.megacrit.cardcrawl.potions.AbstractPotion)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$One.Postfix($0, $1, $2);
}

Patch Class: [basemod.patches.whatmod.RelicTips]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Postfix...
{
basemod.patches.whatmod.RelicTips.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopPotionHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopPotionHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$GetBarColor]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.getBarColor()]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$GetBarColor.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateOnMasterDeckUpgrade]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.bottledCardUpgradeCheck(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateOnMasterDeckUpgrade.onUpgrade($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.GetUnlockBundleSwitch]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.getUnlockBundle(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,int)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.GetUnlockBundleSwitch.Postfix($_, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextOnDeckCreation]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.initializeDeck(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextOnDeckCreation.updateAfterAdding($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.ScrollBoundsFix$UpperBounds]
 - Patching [com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.PotionViewScreen.ScrollBoundsFix$UpperBounds.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$CustomMode]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.addNonDailyMods(com.megacrit.cardcrawl.trials.CustomTrial,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$CustomMode.Postfix($0, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$OpenPreviousScreen]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.openPreviousScreen(com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$OpenPreviousScreen.Postfix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.ScrollBoundsFix]
 - Patching [com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.ScrollBoundsFix.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardListSwitch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCardList(com.megacrit.cardcrawl.helpers.CardLibrary$LibraryType)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardListSwitch.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Ctor]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar(com.megacrit.cardcrawl.screens.mainMenu.TabBarListener)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Ctor.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.GameDictionary.PostKeywordInitialize]
 - Patching [com.megacrit.cardcrawl.helpers.GameDictionary.initialize()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.GameDictionary.PostKeywordInitialize.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterDeckHookSwitch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeStarterDeck()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterDeckHookSwitch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.FixExpungerDescription]
 - Patching [com.megacrit.cardcrawl.cards.tempCards.Expunger.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.FixExpungerDescription.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.rewardViewUpdate()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$StringConstructor]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.lang.String,java.lang.String)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$StringConstructor.correctAmount($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.BlueCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addBlueCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.BlueCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$InGameConstructor]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$InGameConstructor.Postfix($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomCutscenes]
 - Patching [com.megacrit.cardcrawl.cutscenes.Cutscene(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomCutscenes.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.MultiwordKeywords.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$reopenPatch]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.reopen()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$reopenPatch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextOnExhaust]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextOnExhaust.updateAfter($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderRelicOnCard]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCard(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,boolean)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderRelicOnCard.Postfix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$OneTimeEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeSpecialOneTimeEventList()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$OneTimeEvents.postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.EditStrings]
 - Patching [com.megacrit.cardcrawl.localization.LocalizedStrings()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.EditStrings.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Postfix($1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PostInitializeHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.create()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PostInitializeHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.ColorlessCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addColorlessCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.ColorlessCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextForPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$UpdateTextForPowers.updateAfterVarChange($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.audio.SoundMaster.AddAudio]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.audio.SoundMaster.AddAudio.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PostDungeonInitializeHook]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeRelicList()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PostDungeonInitializeHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.green.WraithForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Open]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.open()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Open.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.options.OptionsPanel.RefreshSwitch]
 - Patching [com.megacrit.cardcrawl.screens.options.OptionsPanel.refresh()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.options.OptionsPanel.RefreshSwitch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.NotFoundFix]
 - Patching [com.megacrit.cardcrawl.screens.GameOverScreen.calculateUnlockProgress()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.NotFoundFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixDiscoveryLogSpam]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnTrulyRandomCardInCombat()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixDiscoveryLogSpam.Postfix($_);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.LoadPlayerSaves]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.LoadPlayerSaves.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.SmithPreview]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.displayUpgrades()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.SmithPreview.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$RefreshData]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.refreshData()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$RefreshData.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.potions.Color.AbstractPotionInitializeColor]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.initializeColor()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.potions.Color.AbstractPotionInitializeColor.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$SelectBranchedUpgrade]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.update()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$SelectBranchedUpgrade.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addPower(com.megacrit.cardcrawl.powers.AbstractPower)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.CardSpawnModificationPatch]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Postfix...
      Result param: java.util.ArrayList
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.CardSpawnModificationPatch.patch($_);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderBranchUpgradeButton]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderUpgradeViewToggle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$RenderBranchUpgradeButton.Postfix($0, $1, card);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$RenderStackedIcons]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderBlockIconAndValue(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$RenderStackedIcons.pls($0, $1, $2, $3, BLOCK_ICON_X, BLOCK_ICON_Y, blockOffset, blockTextColor, blockOutlineColor, blockScale);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$MoveBranchUpgradeButton1]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$MoveBranchUpgradeButton1.Postfix($0, $1, $2, upgradeHb);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$CopyTarget]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeSameInstanceOf()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$CopyTarget.copy($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenNext]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.openNext()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenNext.Postfix($0, nextCard);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$UpdateBranchUpgradeButton]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.updateUpgradePreview()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$UpdateBranchUpgradeButton.Postfix($0, card);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$MoveBranchUpgradeButton2]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$MoveBranchUpgradeButton2.Postfix($0, $1, upgradeHb);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.onVictory()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.die(boolean)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.SuperRareRelicPatch$EndRandomRelic]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnEndRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.SuperRareRelicPatch$EndRandomRelic.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToDamageInfo]
 - Patching [com.megacrit.cardcrawl.cards.DamageInfo(com.megacrit.cardcrawl.core.AbstractCreature,int,com.megacrit.cardcrawl.cards.DamageInfo$DamageType)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToDamageInfo.PostfixMeToPiggybackBinding($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.heal(int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnRemoveCardFromMasterDeckPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.removeCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.OnRemoveCardFromMasterDeckPatch.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIconOnTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.CommonKeywordIconsPatches$RenderIconOnTips.patch($1, $2, $3, $4, card);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenPrev]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.openPrev()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$OpenPrev.Postfix($0, prevCard);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTopSCV]
 - SpirePatch2
 - Patching [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords.InsertBefore(com.megacrit.cardcrawl.screens.SingleCardViewPopup,com.badlogic.gdx.graphics.g2d.SpriteBatch,com.megacrit.cardcrawl.cards.AbstractCard,java.util.ArrayList[])]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.DescriptorAndTooltipPatches$AddTooltipTopSCV.pls($3, $4);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardGroup_getPurgeableCards]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getPurgeableCards()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.CardGroup
      Result param: com.megacrit.cardcrawl.cards.CardGroup
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.SoulboundPatch$CardGroup_getPurgeableCards.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.SuperRareRelicPatch$RandomRelic]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.relicInterfaces.SuperRareRelicPatch$RandomRelic.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$Update]
 - Patching [com.megacrit.cardcrawl.helpers.Hitbox.update()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$Update.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$AvoidSomeFractalsOrSomethingIGuess]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.upgradeName()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$AvoidSomeFractalsOrSomethingIGuess.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CloseDisableBranchPreview]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.close()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$CloseDisableBranchPreview.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPowers()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RefundExhaustivePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.RefundExhaustivePatch.Postfix($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.SneckoPatch$GetCost]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.getCost()]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.stslib.patches.SneckoPatch$GetCost.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$TipHelperRenderLorePatch]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Postfix...
{
float[] __param1 = new float[1];
__param1[0] = $2;
com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$TipHelperRenderLorePatch.TipHelperRenderLore($1, __param1, $3, $4, TIP_DESC_LINE_SPACING, BODY_TEXT_WIDTH, BOX_EDGE_H, SHADOW_DIST_X, SHADOW_DIST_Y, BOX_W, BOX_BODY_H, TEXT_OFFSET_X, card);
$2 = (float)__param1[0];
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.RenderElementsOnCardPatches$RenderOnCardPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.RenderElementsOnCardPatches$RenderOnCardPatch.RenderOnCard($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ModifyStartOfTurnBlockLossPatch]
 - Patching [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock.Prefix(com.megacrit.cardcrawl.core.AbstractCreature,int[],boolean)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$ModifyStartOfTurnBlockLossPatch.pls($1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.onCardDrawOrDiscard()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FixJustReleasedRightClick]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputHelper.updateLast()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.FixJustReleasedRightClick.Postfix();
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.heal(int,boolean)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPostDrawPowers()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyTurnPowers()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackPlayer.removeModsAfterUse($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.DamageModifierPatches$OnAttackMonster.removeModsAfterUse($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.addBlock(int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddTempModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$AddTempModifiers.removeMods($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$DisableReactionaryActionBinding.enableAfter($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$FlavorIntoCardStrings]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,com.megacrit.cardcrawl.cards.AbstractCard$CardType,com.megacrit.cardcrawl.cards.AbstractCard$CardColor,com.megacrit.cardcrawl.cards.AbstractCard$CardRarity,com.megacrit.cardcrawl.cards.AbstractCard$CardTarget,com.megacrit.cardcrawl.cards.DamageInfo$DamageType)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$FlavorIntoCardStrings.postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderRedHealthBar(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$FixRedHealthBar.Postfix($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnDirectlyLoseBlock]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.loseBlock(int,boolean)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnDirectlyLoseBlock.fixContainers($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.stslib.patches.CenterGridCardSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.updateCardPositionsAndHoverLogic()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.stslib.patches.CenterGridCardSelectScreen.Postfix($0);
}

Patch Class: [aspiration.actions.unique.RSCopyAction$ModifyCard]
 - Patching [com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction.makeNewCard()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)aspiration.actions.unique.RSCopyAction$ModifyCard.patch($_, $0);
}

Patch Class: [aspiration.patches.Unique.RunicSpoonPatches$resetPlayerPlayed]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction.update()]
 - Adding Postfix...
{
aspiration.patches.Unique.RunicSpoonPatches$resetPlayerPlayed.reset($0, targetCard);
}

Patch Class: [aspiration.patches.Unique.AmalgamateCrystalPatch$OrbChannelPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Postfix...
{
aspiration.patches.Unique.AmalgamateCrystalPatch$OrbChannelPatch.Postfix($0, $1);
}

Patch Class: [aspiration.relics.boss.Mageblood$RarePotionWarningShop]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.shopRender(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
aspiration.relics.boss.Mageblood$RarePotionWarningShop.patch($0, $1);
}

Patch Class: [aspiration.relics.common.VileToxins$FixDescription]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.powers.PoisonPower.updateDescription()]
 - Adding Postfix...
{
aspiration.relics.common.VileToxins$FixDescription.patch($0);
}

Patch Class: [aspiration.patches.NeowRewardPatches$AddRewards]
 - Patching [com.megacrit.cardcrawl.neow.NeowReward.getRewardOptions(int)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)aspiration.patches.NeowRewardPatches$AddRewards.patch($_, $0, $1);
}

Patch Class: [aspiration.patches.NeowRewardPatches$NewDrawback]
 - Patching [com.megacrit.cardcrawl.neow.NeowReward.getRewardDrawbackOptions()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)aspiration.patches.NeowRewardPatches$NewDrawback.patch($_, $0);
}

Patch Class: [aspiration.patches.Unique.SkillbookPatches$FlashSkillbooks]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Postfix...
{
aspiration.patches.Unique.SkillbookPatches$FlashSkillbooks.Postfix();
}

Patch Class: [aspiration.patches.Unique.DSixRewardScreenTriggerPatch$Normal]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.open()]
 - Adding Postfix...
{
aspiration.patches.Unique.DSixRewardScreenTriggerPatch$Normal.trigger($0);
}

Patch Class: [aspiration.patches.cards.CardCostModificationPatches$FreeToPlayPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.freeToPlay()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)aspiration.patches.cards.CardCostModificationPatches$FreeToPlayPatch.patch($_, $0);
}

Patch Class: [aspiration.relics.common.VileToxins$IncreasePoisonDamage]
 - SpirePatch2
 - Patching [com.megacrit.cardcrawl.actions.unique.PoisonLoseHpAction(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int,com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect)]
 - Adding Postfix...
{
aspiration.relics.common.VileToxins$IncreasePoisonDamage.patch($0);
}

Patch Class: [aspiration.patches.Unique.SkillbookPatches$CardpoolInitFix]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Postfix...
{
aspiration.patches.Unique.SkillbookPatches$CardpoolInitFix.Postfix($0);
}

Patch Class: [aspiration.patches.Unique.DSixRewardScreenTriggerPatch$Mugger]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.openCombat(java.lang.String,boolean)]
 - Adding Postfix...
{
aspiration.patches.Unique.DSixRewardScreenTriggerPatch$Mugger.trigger($0, $1, $2);
}

Patch Class: [betterAltar.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterAltar.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterAltar.patches.PotionRemoverPatch$Random2Patch]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getRandomPotion()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.potions.AbstractPotion
      Result param: com.megacrit.cardcrawl.potions.AbstractPotion
{
return ($r)betterAltar.patches.PotionRemoverPatch$Random2Patch.Postfix($_);
}

Patch Class: [betterAltar.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterAltar.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterAltar.patches.PotionRemoverPatch$RandomPatch]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getRandomPotion(com.megacrit.cardcrawl.random.Random)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.potions.AbstractPotion
      Result param: com.megacrit.cardcrawl.potions.AbstractPotion
{
return ($r)betterAltar.patches.PotionRemoverPatch$RandomPatch.Postfix($_, $1);
}

Patch Class: [betterLab.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterLab.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterLab.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterLab.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterMatch.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterMatch.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterMatch.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterMatch.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterNote.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterNote.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterNote.patches.RequirementPatch$ReqPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.isNoteForYourselfAvailable()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)betterNote.patches.RequirementPatch$ReqPatch.Postfix($_);
}

Patch Class: [betterNote.patches.EventHelperPatch$NoteSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterNote.patches.EventHelperPatch$NoteSwapPatch.Postfix($_, $1);
}

Patch Class: [betterStone.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterStone.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterStone.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterStone.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterSkull.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterSkull.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterSkull.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterSkull.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterThird.patches.EventHelperPatch$EventSwapPatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.events.AbstractEvent
      Result param: com.megacrit.cardcrawl.events.AbstractEvent
{
return ($r)betterThird.patches.EventHelperPatch$EventSwapPatch.Postfix($_, $1);
}

Patch Class: [betterThird.patches.MetricsPatch$defeatPatch]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.submitDefeatMetrics(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
betterThird.patches.MetricsPatch$defeatPatch.Postfix($0, $1);
}

Patch Class: [betterThird.patches.MaskedBanditsPatch$optionPatch]
 - Patching [com.megacrit.cardcrawl.events.city.MaskedBandits()]
 - Adding Postfix...
{
betterThird.patches.MaskedBanditsPatch$optionPatch.Postfix($0);
}

Patch Class: [Better_Vampires.patches.VampiresPatches$Vampires_constructor_Patch]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires()]
 - Adding Postfix...
{
Better_Vampires.patches.VampiresPatches$Vampires_constructor_Patch.Postfix($0);
}

Patch Class: [conspire.patches.BottledYoYoField$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)conspire.patches.BottledYoYoField$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [conspire.patches.TreasureMapPatch$MapRoomNodeRender]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
conspire.patches.TreasureMapPatch$MapRoomNodeRender.Postfix($0, $1);
}

Patch Class: [conspire.patches.UseCardActionBoomerangPatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Postfix...
{
conspire.patches.UseCardActionBoomerangPatch.Postfix($0, $1, $2);
}

Patch Class: [conspire.patches.TreasureMapPatch$GenerateMap]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateMap()]
 - Adding Postfix...
{
conspire.patches.TreasureMapPatch$GenerateMap.Postfix();
}

Patch Class: [conspire.patches.EnergyManagerUsePatch]
 - Patching [com.megacrit.cardcrawl.core.EnergyManager.use(int)]
 - Adding Postfix...
{
conspire.patches.EnergyManagerUsePatch.Postfix($0, $1);
}

Patch Class: [conspire.patches.BottledYoYoField$DiscardBottledCardPatch]
 - Patching [com.megacrit.cardcrawl.cards.Soul.discard(com.megacrit.cardcrawl.cards.AbstractCard,boolean)]
 - Adding Postfix...
{
conspire.patches.BottledYoYoField$DiscardBottledCardPatch.Postfix($0, $1, $2);
}

Patch Class: [conspire.patches.FlyswatterPatch$ClaimReward]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.claimReward()]
 - Adding Postfix...
{
conspire.patches.FlyswatterPatch$ClaimReward.Postfix($0);
}

Patch Class: [conspire.patches.DuplicatorEventPatch$Constructor]
 - Patching [com.megacrit.cardcrawl.events.shrines.Duplicator()]
 - Adding Postfix...
{
conspire.patches.DuplicatorEventPatch$Constructor.Postfix($0);
}

Patch Class: [conspire.patches.IceCreamScoopPatch$CombatUpdate]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.combatUpdate()]
 - Adding Postfix...
{
conspire.patches.IceCreamScoopPatch$CombatUpdate.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$RenderDamageRange]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderDamageRange(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$RenderDamageRange.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.LogoPatch]
 - Patching [com.megacrit.cardcrawl.scenes.TitleBackground()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.LogoPatch.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.NeowRewardPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.NeowRewardPatch.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Update]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.update()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Update.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$AvoidIfNoAppropriateCards]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnEndRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$AvoidIfNoAppropriateCards.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BacktickPatch]
 - Patching [basemod.devcommands.ConsoleCommand.getRelicOptions()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.BacktickPatch.Postfix($_);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Init]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Init.Postfix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$ReturnRandomRelicKey]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$ReturnRandomRelicKey.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$ApplyPowersFakeNormalDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$ApplyPowersFakeNormalDamage.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SingingBowlPatch]
 - Patching [com.megacrit.cardcrawl.localization.LocalizedStrings()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.SingingBowlPatch.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$Tip]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.updateIntentTip()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$Tip.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TimeStopPatch]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.TimeStopPatch.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$Img]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.getIntentImg()]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Texture
      Result param: com.badlogic.gdx.graphics.Texture
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.OrbIntent$Img.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$AvoidIfNoAppropriateCards]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.ZylophonePatch$AvoidIfNoAppropriateCards.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PiercingTag$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PiercingTag$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$GenerateRoom]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateRoom(com.megacrit.cardcrawl.helpers.EventHelper$RoomResult)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.rooms.AbstractRoom
      Result param: com.megacrit.cardcrawl.rooms.AbstractRoom
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$GenerateRoom.Postfix($_, $0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Render]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$ScreenInit]
 - Patching [com.megacrit.cardcrawl.shop.Merchant(float,float,int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$ScreenInit.Postfix($0, $1, $2, $3);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.relics.R64BitClover$RenderOutlineNotSeenSingle]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderRelicImage(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.relics.R64BitClover$RenderOutlineNotSeenSingle.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeCardView_1]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeCardView_1.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$AddCardReward]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$AddCardReward.Postfix($_);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TeleporterPatch$IsConnectedTo]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.isConnectedTo(com.megacrit.cardcrawl.map.MapRoomNode)]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.TeleporterPatch$IsConnectedTo.Postfix($_, $0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.HerbalPastePatch$CanGoNegative]
 - Patching [com.megacrit.cardcrawl.powers.RegenPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.HerbalPastePatch$CanGoNegative.Postfix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.R64BitCloverPatch]
 - Patching [com.megacrit.cardcrawl.rooms.MonsterRoom.dropReward()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.R64BitCloverPatch.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TheLibraryNewOption$ChangeOptionText]
 - Patching [com.megacrit.cardcrawl.events.city.TheLibrary()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.TheLibraryNewOption$ChangeOptionText.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.WithoutBottledCardsPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getGroupWithoutBottledCards(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.CardGroup
      Result param: com.megacrit.cardcrawl.cards.CardGroup
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.WithoutBottledCardsPatch.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$CalculateCardDamageFakeNormalDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$CalculateCardDamageFakeNormalDamage.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.AddToStartingDeck]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.dungeonTransitionSetup()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.AddToStartingDeck.Postfix();
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$DamageTypeReset]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.resetAttributes()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$DamageTypeReset.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.FixCursePool]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.addCurseCards()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.FixCursePool.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$ReturnEndRandomRelicKey]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.returnEndRandomRelicKey(com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$ReturnEndRandomRelicKey.Postfix($_, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.MedicalManualPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.useMedicalKit(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.MedicalManualPatch.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleOnMoveToDiscardPile]
 - Patching [com.megacrit.cardcrawl.cards.Soul.discard(com.megacrit.cardcrawl.cards.AbstractCard,boolean)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BlackHoleOnMoveToDiscardPile.Postfix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeCardView_2]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DuctTapePatch$LargeCardView_2.Postfix($0, $1, $2);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$ClaimReward]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.claimReward()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.DisguiseKitPatch$ClaimReward.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.TeleporterPatch$NodeSelected]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.playNodeSelectedSound()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.TeleporterPatch$NodeSelected.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$AddCardReward]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getRewardCards()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$AddCardReward.Postfix($_);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$SetupPlayer]
 - Patching [com.megacrit.cardcrawl.trials.CustomTrial.setupPlayer(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.characters.AbstractPlayer
      Result param: com.megacrit.cardcrawl.characters.AbstractPlayer
{
return ($r)com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$SetupPlayer.Postfix($_, $0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderPotions(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$OpenPreviousScreen]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.openPreviousScreen(com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.mod.hubris.patches.BloodShopPatch$OpenPreviousScreen.Postfix($1);
}

Patch Class: [relicstats.patches.relics.SsserpentHeadInfo]
 - Patching [com.megacrit.cardcrawl.relics.SsserpentHead.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Postfix...
{
relicstats.patches.relics.SsserpentHeadInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$PotionRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.getNewPrice(com.megacrit.cardcrawl.shop.StorePotion)]
 - Adding Postfix...
{
relicstats.patches.relics.MembershipCardInfo$PotionRestockPatch.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$CardRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.setPrice(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
relicstats.patches.relics.MembershipCardInfo$CardRestockPatch.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.AstrolabeInfo]
 - Patching [com.megacrit.cardcrawl.relics.Astrolabe.giveCards(java.util.ArrayList)]
 - Adding Postfix...
{
relicstats.patches.relics.AstrolabeInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.PantographInfo]
 - Patching [com.megacrit.cardcrawl.relics.Pantograph.atBattleStart()]
 - Adding Postfix...
{
relicstats.patches.relics.PantographInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.MarkOfTheBloomInfo]
 - Patching [com.megacrit.cardcrawl.relics.MarkOfTheBloom.onPlayerHeal(int)]
 - Adding Postfix...
{
relicstats.patches.relics.MarkOfTheBloomInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.FossilizedHelixInfo$HelixPatch]
 - Patching [com.megacrit.cardcrawl.relics.FossilizedHelix.atBattleStart()]
 - Adding Postfix...
{
relicstats.patches.relics.FossilizedHelixInfo$HelixPatch.patch($0);
}

Patch Class: [relicstats.patches.relics.PureWaterInfo$MakeTempCardPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction.makeNewCard()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)relicstats.patches.relics.PureWaterInfo$MakeTempCardPatch.postfix($_, $0);
}

Patch Class: [relicstats.patches.relics.MeatOnTheBoneInfo]
 - Patching [com.megacrit.cardcrawl.relics.MeatOnTheBone.onTrigger()]
 - Adding Postfix...
{
relicstats.patches.relics.MeatOnTheBoneInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.HolyWaterInfo$HolyWaterPatch]
 - Patching [com.megacrit.cardcrawl.relics.HolyWater.atBattleStartPreDraw()]
 - Adding Postfix...
{
relicstats.patches.relics.HolyWaterInfo$HolyWaterPatch.postfix($0);
}

Patch Class: [relicstats.StatsSaver]
 - Patching [com.megacrit.cardcrawl.metrics.Metrics.gatherAllData(boolean,boolean,com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
relicstats.StatsSaver.patch($0, $1, $2, $3);
}

Patch Class: [relicstats.patches.StartTurnPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.EnableEndTurnButtonAction.update()]
 - Adding Postfix...
{
relicstats.patches.StartTurnPatch.patch($0);
}

Patch Class: [relicstats.patches.relics.TingshaInfo]
 - Patching [com.megacrit.cardcrawl.relics.Tingsha.onManualDiscard()]
 - Adding Postfix...
{
relicstats.patches.relics.TingshaInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.EternalFeatherInfo]
 - Patching [com.megacrit.cardcrawl.relics.EternalFeather.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Postfix...
{
relicstats.patches.relics.EternalFeatherInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.BloodVialInfo]
 - Patching [com.megacrit.cardcrawl.relics.BloodVial.atBattleStart()]
 - Adding Postfix...
{
relicstats.patches.relics.BloodVialInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.AbacusInfo]
 - Patching [com.megacrit.cardcrawl.relics.Abacus.onShuffle()]
 - Adding Postfix...
{
relicstats.patches.relics.AbacusInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.HandDrillInfo]
 - Patching [com.megacrit.cardcrawl.relics.HandDrill.onBlockBroken(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Postfix...
{
relicstats.patches.relics.HandDrillInfo.patch($0, $1);
}

Patch Class: [relicstats.patches.relics.TheSpecimenInfo$ApplyPowerPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerToRandomEnemyAction.update()]
 - Adding Postfix...
{
relicstats.patches.relics.TheSpecimenInfo$ApplyPowerPatch.postfix($0);
}

Patch Class: [relicstats.patches.relics.LizardTailInfo]
 - Patching [com.megacrit.cardcrawl.relics.LizardTail.onTrigger()]
 - Adding Postfix...
{
relicstats.patches.relics.LizardTailInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.MagicFlowerInfo$HealPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.heal(int,boolean)]
 - Adding Postfix...
{
relicstats.patches.relics.MagicFlowerInfo$HealPatch.after($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.MawBankInfo]
 - Patching [com.megacrit.cardcrawl.relics.MawBank.onEnterRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Postfix...
{
relicstats.patches.relics.MawBankInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.PureWaterInfo$MiraclePatch]
 - Patching [com.megacrit.cardcrawl.cards.tempCards.Miracle.use(com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
relicstats.patches.relics.PureWaterInfo$MiraclePatch.postfix($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.MercuryHourglassInfo]
 - Patching [com.megacrit.cardcrawl.relics.MercuryHourglass.atTurnStart()]
 - Adding Postfix...
{
relicstats.patches.relics.MercuryHourglassInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.PureWaterInfo$PureWaterPatch]
 - Patching [com.megacrit.cardcrawl.relics.PureWater.atBattleStartPreDraw()]
 - Adding Postfix...
{
relicstats.patches.relics.PureWaterInfo$PureWaterPatch.postfix($0);
}

Patch Class: [relicstats.patches.relics.BloodyIdolInfo]
 - Patching [com.megacrit.cardcrawl.relics.BloodyIdol.onGainGold()]
 - Adding Postfix...
{
relicstats.patches.relics.BloodyIdolInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.CharonsAshesInfo]
 - Patching [com.megacrit.cardcrawl.relics.CharonsAshes.onExhaust(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
relicstats.patches.relics.CharonsAshesInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.ToyOrnithopterInfo]
 - Patching [com.megacrit.cardcrawl.relics.ToyOrnithopter.onUsePotion()]
 - Adding Postfix...
{
relicstats.patches.relics.ToyOrnithopterInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.SnakeRingInfo]
 - Patching [com.megacrit.cardcrawl.relics.SnakeRing.atBattleStart()]
 - Adding Postfix...
{
relicstats.patches.relics.SnakeRingInfo.after($0);
}

Patch Class: [relicstats.patches.relics.BurningBlackBloodInfo$BurningBloodPatch]
 - Patching [com.megacrit.cardcrawl.relics.BurningBlood.onVictory()]
 - Adding Postfix...
{
relicstats.patches.relics.BurningBlackBloodInfo$BurningBloodPatch.postfix($0);
}

Patch Class: [relicstats.patches.relics.WarpedTongsInfo$WarpedTongsPatch]
 - Patching [com.megacrit.cardcrawl.relics.WarpedTongs.atTurnStartPostDraw()]
 - Adding Postfix...
{
relicstats.patches.relics.WarpedTongsInfo$WarpedTongsPatch.patch($0);
}

Patch Class: [relicstats.patches.relics.SingingBowlInfo]
 - Patching [com.megacrit.cardcrawl.ui.buttons.SingingBowlButton.onClick()]
 - Adding Postfix...
{
relicstats.patches.relics.SingingBowlInfo.patch($0);
}

Patch Class: [relicstats.patches.AbstractRelicPatch]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
relicstats.patches.AbstractRelicPatch.Postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.LeesWaffleInfo]
 - Patching [com.megacrit.cardcrawl.relics.Waffle.onEquip()]
 - Adding Postfix...
{
relicstats.patches.relics.LeesWaffleInfo.postfix($0);
}

Patch Class: [relicstats.patches.relics.BagOfPreparationInfo]
 - Patching [com.megacrit.cardcrawl.relics.BagOfPreparation.atBattleStart()]
 - Adding Postfix...
{
relicstats.patches.relics.BagOfPreparationInfo.after($0);
}

Patch Class: [relicstats.patches.relics.HolyWaterInfo$MakeTempCardPatch]
 - Patching [com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction.makeNewCard()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)relicstats.patches.relics.HolyWaterInfo$MakeTempCardPatch.postfix($_, $0);
}

Patch Class: [relicstats.patches.relics.WhiteBeastStatueInfo$DungeonTransitionPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.dungeonTransitionSetup()]
 - Adding Postfix...
{
relicstats.patches.relics.WhiteBeastStatueInfo$DungeonTransitionPatch.Postfix();
}

Patch Class: [relicstats.patches.relics.MealTicketInfo]
 - Patching [com.megacrit.cardcrawl.relics.MealTicket.justEnteredRoom(com.megacrit.cardcrawl.rooms.AbstractRoom)]
 - Adding Postfix...
{
relicstats.patches.relics.MealTicketInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.ToughBandagesInfo]
 - Patching [com.megacrit.cardcrawl.relics.ToughBandages.onManualDiscard()]
 - Adding Postfix...
{
relicstats.patches.relics.ToughBandagesInfo.patch($0);
}

Patch Class: [relicstats.patches.relics.CeramicFishInfo]
 - Patching [com.megacrit.cardcrawl.relics.CeramicFish.onObtainCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
relicstats.patches.relics.CeramicFishInfo.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.MembershipCardInfo$RelicRestockPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.getNewPrice(com.megacrit.cardcrawl.shop.StoreRelic)]
 - Adding Postfix...
{
relicstats.patches.relics.MembershipCardInfo$RelicRestockPatch.postfix($0, $1);
}

Patch Class: [relicstats.patches.relics.SelfFormingClayInfo$NextTurnBlockPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NextTurnBlockPower.atStartOfTurn()]
 - Adding Postfix...
{
relicstats.patches.relics.SelfFormingClayInfo$NextTurnBlockPowerPatch.patch($0);
}

Patch Class: [relicstats.patches.relics.HolyWaterInfo$MiraclePatch]
 - Patching [com.megacrit.cardcrawl.cards.tempCards.Miracle.use(com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Postfix...
{
relicstats.patches.relics.HolyWaterInfo$MiraclePatch.postfix($0, $1, $2);
}

Patch Class: [relicstats.patches.relics.BurningBlackBloodInfo$BlackBloodPatch]
 - Patching [com.megacrit.cardcrawl.relics.BlackBlood.onVictory()]
 - Adding Postfix...
{
relicstats.patches.relics.BurningBlackBloodInfo$BlackBloodPatch.postfix($0);
}

Patch Class: [SpicyShops.patches.SpicyRelicPatches$InitHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyRelicPatches$InitHook.patch($0, $1, $2, relics);
}

Patch Class: [SpicyShops.patches.SpicyRelicPatches$RenderRelicSpecials]
 - Patching [com.megacrit.cardcrawl.shop.StoreRelic.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyRelicPatches$RenderRelicSpecials.patch($0, $1);
}

Patch Class: [SpicyShops.patches.SpicyPurgePatches$ResetPurgeAvailability]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyPurgePatches$ResetPurgeAvailability.patch($0, $1, $2);
}

Patch Class: [SpicyShops.patches.cards.CardCostModificationPatches$RecklessAttackPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.freeToPlay()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)SpicyShops.patches.cards.CardCostModificationPatches$RecklessAttackPatch.patch($_, $0);
}

Patch Class: [SpicyShops.patches.cards.RepeatKeywordPatches$KeepField]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)SpicyShops.patches.cards.RepeatKeywordPatches$KeepField.carryOverRepeats($_, $0);
}

Patch Class: [SpicyShops.patches.SpicyPurgePatches$RenderAdditionalPurge]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.renderPurge(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyPurgePatches$RenderAdditionalPurge.patch($0, $1, purgeCardX, purgeCardY, purgeCardScale);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$PotionModifierGen]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Postfix...
{
SpicyShops.patches.SpicyPotionPatches$PotionModifierGen.patch($0, potions);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$RenderModifierTips]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.shopRender(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyPotionPatches$RenderModifierTips.undoIncrease($0, $1);
}

Patch Class: [SpicyShops.patches.SpicyPotionPatches$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderPotions(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
SpicyShops.patches.SpicyPotionPatches$Render.Postfix($0, $1);
}

Patch Class: [downfall.patches.FlipRoom$NPC1]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.FlipRoom$NPC1.Postfix($0, $1);
}

Patch Class: [downfall.patches.GlobalRenderSpecialHookPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.GlobalRenderSpecialHookPatch.Postfix($0, $1);
}

Patch Class: [sneckomod.patches.SingleCardViewPopupPatches$UpdateInputPatch]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.updateInput()]
 - Adding Postfix...
{
sneckomod.patches.SingleCardViewPopupPatches$UpdateInputPatch.__updateInput($0, card);
}

Patch Class: [downfall.patches.PostBossHeartChatPatch$CleanUp$Dispose]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.dispose()]
 - Adding Postfix...
{
downfall.patches.PostBossHeartChatPatch$CleanUp$Dispose.Postfix($0);
}

Patch Class: [gremlin.patches.SuperRarePatchB]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getCard(com.megacrit.cardcrawl.cards.AbstractCard$CardRarity,com.megacrit.cardcrawl.random.Random)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)gremlin.patches.SuperRarePatchB.Postfix($_, $1, $2);
}

Patch Class: [downfall.patches.ReplaceHeartKillBonusPatch$VictoryScreenPatch]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.createGameOverStats()]
 - Adding Postfix...
{
downfall.patches.ReplaceHeartKillBonusPatch$VictoryScreenPatch.Postfix($0);
}

Patch Class: [downfall.patches.MainMenuEvilMode$InitEvilPanels]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen.initializePanels()]
 - Adding Postfix...
{
downfall.patches.MainMenuEvilMode$InitEvilPanels.Postfix($0, screen, PANEL_Y);
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.initialize()]
 - Adding Postfix...
{
reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize.Postfix($0);
}

Patch Class: [downfall.patches.MetricsPatches$RunPatch]
 - Patching [com.megacrit.cardcrawl.metrics.Metrics.run()]
 - Adding Postfix...
{
downfall.patches.MetricsPatches$RunPatch.Postfix($0);
}

Patch Class: [sneckomod.patches.BabySneckoRenderPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
sneckomod.patches.BabySneckoRenderPatch.Postfix($0, $1);
}

Patch Class: [sneckomod.patches.SnekCardPoolPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Postfix...
{
sneckomod.patches.SnekCardPoolPatch.Postfix($0);
}

Patch Class: [downfall.patches.UnflipUI$TextDamageIntent]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderFontLeftTopAligned(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Postfix...
{
downfall.patches.UnflipUI$TextDamageIntent.Postfix($1, $2, $3, $4, $5, $6);
}

Patch Class: [downfall.patches.BanSharedContentPatch$PotionPatch]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
downfall.patches.BanSharedContentPatch$PotionPatch.Postfix($1);
}

Patch Class: [guardian.patches.RenderStasisPreviewInFrontPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
guardian.patches.RenderStasisPreviewInFrontPatch.Postfix($0, $1);
}

Patch Class: [hermit.patches.FlashPotionEffectPatch]
 - Patching [com.megacrit.cardcrawl.vfx.FlashPotionEffect(com.megacrit.cardcrawl.potions.AbstractPotion)]
 - Adding Postfix...
{
hermit.patches.FlashPotionEffectPatch.Postfix($0, $1);
}

Patch Class: [downfall.patches.ui.ending.EndingChangePatches]
 - Patching [com.megacrit.cardcrawl.cutscenes.NeowNarrationScreen()]
 - Adding Postfix...
{
downfall.patches.ui.ending.EndingChangePatches.patch($0);
}

Patch Class: [downfall.patches.HeartShopUIPatches$HeartShopUIPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.init(java.util.ArrayList,java.util.ArrayList)]
 - Adding Postfix...
{
downfall.patches.HeartShopUIPatches$HeartShopUIPatch.Postfix($0, $1, $2);
}

Patch Class: [downfall.patches.FlipRoom$MerchantRug]
 - Patching [com.megacrit.cardcrawl.shop.Merchant.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.FlipRoom$MerchantRug.Postfix($0, $1);
}

Patch Class: [automaton.patches.DontShowFunctionInCardLibraryPatch$CardLibraryDontDisplayPairCards]
 - Patching [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize.Insert(java.lang.Object)]
 - Adding Postfix...
{
automaton.patches.DontShowFunctionInCardLibraryPatch$CardLibraryDontDisplayPairCards.Postfix($1);
}

Patch Class: [downfall.patches.SwapOutShop]
 - Patching [com.megacrit.cardcrawl.dungeons.TheEnding.generateSpecialMap()]
 - Adding Postfix...
{
downfall.patches.SwapOutShop.Postfix();
}

Patch Class: [guardian.patches.StasisGlowPatch]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.CardGlowBorder(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
guardian.patches.StasisGlowPatch.Postfix($0, $1);
}

Patch Class: [guardian.patches.LoadGemsPatch]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Postfix...
{
guardian.patches.LoadGemsPatch.Postfix($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.GremlinEventFixPatch1$RunCheck]
 - Patching [com.megacrit.cardcrawl.events.AbstractImageEvent.update()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.GremlinEventFixPatch1$RunCheck.Postfix($0);
}

Patch Class: [hermit.patches.SelectScreenPatch]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.selectHoveredCard()]
 - Adding Postfix...
{
hermit.patches.SelectScreenPatch.SelectionPostPatch($0);
}

Patch Class: [theHexaghost.patches.NextRoomTransitionPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.nextRoomTransitionStart()]
 - Adding Postfix...
{
theHexaghost.patches.NextRoomTransitionPatch.Postfix();
}

Patch Class: [saveData.SaveData$SaveTheSaveData]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile(com.megacrit.cardcrawl.saveAndContinue.SaveFile$SaveType)]
 - Adding Postfix...
{
saveData.SaveData$SaveTheSaveData.saveAllTheSaveData($0, $1);
}

Patch Class: [gremlin.patches.eventpatches.VampiresPatch$VampiresConstructor]
 - Patching [com.megacrit.cardcrawl.events.city.Vampires()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.VampiresPatch$VampiresConstructor.Postfix($0);
}

Patch Class: [downfall.patches.BanSharedContentPatch$CardPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Postfix...
{
downfall.patches.BanSharedContentPatch$CardPatch.Postfix($0);
}

Patch Class: [gremlin.patches.eventpatches.GhostsPatch$GhostsConstructior]
 - Patching [com.megacrit.cardcrawl.events.city.Ghosts()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.GhostsPatch$GhostsConstructior.Postfix($0);
}

Patch Class: [downfall.patches.EventHelperEventNamePatch]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEventName(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)downfall.patches.EventHelperEventNamePatch.getEventName($_, $1);
}

Patch Class: [downfall.patches.TeleportStonePatch$NodeSelected]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.playNodeSelectedSound()]
 - Adding Postfix...
{
downfall.patches.TeleportStonePatch$NodeSelected.Postfix($0);
}

Patch Class: [downfall.patches.ui.ending.CutsceneChangePatches]
 - Patching [com.megacrit.cardcrawl.cutscenes.Cutscene(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
downfall.patches.ui.ending.CutsceneChangePatches.patch($0, $1);
}

Patch Class: [slimebound.patches.RefreshEnergyEffectMovePatch]
 - Patching [com.megacrit.cardcrawl.vfx.RefreshEnergyEffect()]
 - Adding Postfix...
{
slimebound.patches.RefreshEnergyEffectMovePatch.Postfix($0);
}

Patch Class: [downfall.patches.LockVillainsPatch]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.refresh()]
 - Adding Postfix...
{
downfall.patches.LockVillainsPatch.Postfix();
}

Patch Class: [downfall.patches.MonstersAreDeadPatch$CurrMapNodeSteal]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.areMonstersBasicallyDead()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)downfall.patches.MonstersAreDeadPatch$CurrMapNodeSteal.Postfix($_, $0);
}

Patch Class: [downfall.patches.FlipRoom$Room]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.FlipRoom$Room.Postfix($0, $1);
}

Patch Class: [downfall.patches.MainMenuEvilMode$LatePanelOpen]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen.update()]
 - Adding Postfix...
{
downfall.patches.MainMenuEvilMode$LatePanelOpen.Postfix($0);
}

Patch Class: [downfall.patches.FlipRoom$NPC2]
 - Patching [com.megacrit.cardcrawl.characters.AnimatedNpc.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.Color)]
 - Adding Postfix...
{
downfall.patches.FlipRoom$NPC2.Postfix($0, $1, $2);
}

Patch Class: [champ.patches.SoulPatch$SoulNotBeBadPatch]
 - Patching [com.megacrit.cardcrawl.cards.Soul.empower(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
champ.patches.SoulPatch$SoulNotBeBadPatch.patch($0, $1);
}

Patch Class: [hermit.patches.SelectScreenPatch5]
 - Patching [com.megacrit.cardcrawl.screens.select.HandCardSelectScreen.selectHoveredCard()]
 - Adding Postfix...
{
hermit.patches.SelectScreenPatch5.SelectionPostPatch($0);
}

Patch Class: [downfall.patches.ModHelperPatch]
 - Patching [com.megacrit.cardcrawl.helpers.ModHelper.initialize()]
 - Adding Postfix...
{
downfall.patches.ModHelperPatch.Postfix();
}

Patch Class: [hermit.patches.relics.BottledPlaceholderField$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)hermit.patches.relics.BottledPlaceholderField$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [downfall.patches.UnflipUI$HealthBar]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealth(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.UnflipUI$HealthBar.Postfix($0, $1);
}

Patch Class: [saveData.SaveData$loadSave]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.loadSave(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Postfix...
{
saveData.SaveData$loadSave.loadSave($0, $1);
}

Patch Class: [downfall.patches.CombatRewardScreenRemoveCardPatch]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.setupItemReward()]
 - Adding Postfix...
{
downfall.patches.CombatRewardScreenRemoveCardPatch.Postfix($0);
}

Patch Class: [downfall.mainmenu.DiscordButton$Render]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.mainmenu.DiscordButton$Render.Postfix($0, $1);
}

Patch Class: [guardian.patches.BottledStasisPatch$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)guardian.patches.BottledStasisPatch$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [downfall.patches.DeathScreenCharUnlockPatch]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ReturnToMenuButton.appear(float,float,java.lang.String)]
 - Adding Postfix...
{
downfall.patches.DeathScreenCharUnlockPatch.Postfix($0, $1, $2, $3);
}

Patch Class: [hermit.patches.getCopyPatch$CursedWeaponOnInit]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCopy(java.lang.String,int,int)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)hermit.patches.getCopyPatch$CursedWeaponOnInit.Postfix($_);
}

Patch Class: [sneckomod.patches.BottledD8Patch$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)sneckomod.patches.BottledD8Patch$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [expansioncontent.patches.CenterGridCardSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.updateCardPositionsAndHoverLogic()]
 - Adding Postfix...
{
expansioncontent.patches.CenterGridCardSelectScreen.Postfix($0);
}

Patch Class: [downfall.patches.DailyModeEvilPatch$Init]
 - Patching [com.megacrit.cardcrawl.daily.DailyScreen.determineLoadout()]
 - Adding Postfix...
{
downfall.patches.DailyModeEvilPatch$Init.Postfix($0);
}

Patch Class: [downfall.patches.PostBossHeartChatPatch$Trigger$TriggerOnUpdate]
 - Patching [com.megacrit.cardcrawl.rooms.TreasureRoomBoss.update()]
 - Adding Postfix...
{
downfall.patches.PostBossHeartChatPatch$Trigger$TriggerOnUpdate.Postfix($0);
}

Patch Class: [downfall.patches.BanStuffPatch$PotionPatch]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
downfall.patches.BanStuffPatch$PotionPatch.Postfix($1);
}

Patch Class: [downfall.patches.MetricsPatches$ShouldUploadMetricData]
 - Patching [com.megacrit.cardcrawl.screens.GameOverScreen.shouldUploadMetricData()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)downfall.patches.MetricsPatches$ShouldUploadMetricData.Postfix($_);
}

Patch Class: [expansioncontent.patches.ShopBossPatch]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initCards()]
 - Adding Postfix...
{
expansioncontent.patches.ShopBossPatch.Postfix($0);
}

Patch Class: [hermit.patches.VigorPatch$DisableHealing]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Postfix...
{
hermit.patches.VigorPatch$DisableHealing.Postfix($0);
}

Patch Class: [downfall.patches.TeleportStonePatch$IsConnectedTo]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.isConnectedTo(com.megacrit.cardcrawl.map.MapRoomNode)]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)downfall.patches.TeleportStonePatch$IsConnectedTo.Postfix($_, $0, $1);
}

Patch Class: [downfall.patches.ui.map.FlipMap$PositionAdjustment]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode(int,int)]
 - Adding Postfix...
{
downfall.patches.ui.map.FlipMap$PositionAdjustment.upYouGo($0, $1, $2);
}

Patch Class: [downfall.mainmenu.DiscordButton$Update]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.update()]
 - Adding Postfix...
{
downfall.mainmenu.DiscordButton$Update.Postfix($0);
}

Patch Class: [downfall.patches.MainMenuColorPatch$TitleBackgroundReplacementPatch]
 - Patching [com.megacrit.cardcrawl.scenes.TitleBackground()]
 - Adding Postfix...
{
downfall.patches.MainMenuColorPatch$TitleBackgroundReplacementPatch.downfallTitleBackgroundAtlasReplacer($0);
}

Patch Class: [downfall.patches.MainMenuMusic]
 - Patching [com.megacrit.cardcrawl.audio.MainMusic.getSong(java.lang.String)]
 - Adding Postfix...
      Return: com.badlogic.gdx.audio.Music
      Result param: com.badlogic.gdx.audio.Music
{
return ($r)downfall.patches.MainMenuMusic.Postfix($_, $0, $1);
}

Patch Class: [downfall.mainmenu.MainMenuAdPatch$UpdatePatch]
 - Patching [com.megacrit.cardcrawl.scenes.TitleBackground.update()]
 - Adding Postfix...
{
downfall.mainmenu.MainMenuAdPatch$UpdatePatch.updateAd($0);
}

Patch Class: [downfall.patches.ui.campfire.CampfireSoftlockPrevention]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.update()]
 - Adding Postfix...
{
downfall.patches.ui.campfire.CampfireSoftlockPrevention.Postfix($0);
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterSelectScreenPatch_Render]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Initialize$CharacterSelectScreenPatch_Render.Initialize($0, $1);
}

Patch Class: [downfall.patches.EmptyOrbSlotPatch]
 - Patching [com.megacrit.cardcrawl.orbs.EmptyOrbSlot.updateDescription()]
 - Adding Postfix...
{
downfall.patches.EmptyOrbSlotPatch.Postfix($0);
}

Patch Class: [gremlin.patches.eventpatches.WingStatuePatch$WingConstructior]
 - Patching [com.megacrit.cardcrawl.events.exordium.GoldenWing()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.WingStatuePatch$WingConstructior.Postfix($0);
}

Patch Class: [downfall.patches.CampfireOptionTextPatch]
 - Patching [com.megacrit.cardcrawl.ui.campfire.RecallOption()]
 - Adding Postfix...
{
downfall.patches.CampfireOptionTextPatch.Postfix($0);
}

Patch Class: [gremlin.patches.eventpatches.WorldOfGoopPatch$GoopConstructior]
 - Patching [com.megacrit.cardcrawl.events.exordium.GoopPuddle()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.WorldOfGoopPatch$GoopConstructior.Postfix($0);
}

Patch Class: [downfall.patches.BossSetPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.setBoss(java.lang.String)]
 - Adding Postfix...
{
downfall.patches.BossSetPatch.Postfix($0, $1);
}

Patch Class: [downfall.patches.DailyModeEvilPatch$renderPatch]
 - Patching [com.megacrit.cardcrawl.daily.DailyScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.DailyModeEvilPatch$renderPatch.Postfix($0, $1);
}

Patch Class: [charbosses.patches.PaperKraneWeakPatch$SuperWeakText]
 - Patching [com.megacrit.cardcrawl.powers.WeakPower.updateDescription()]
 - Adding Postfix...
{
charbosses.patches.PaperKraneWeakPatch$SuperWeakText.Postfix($0);
}

Patch Class: [downfall.patches.GlobalEndOfRoundHook]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterGroup.applyEndOfTurnPowers()]
 - Adding Postfix...
{
downfall.patches.GlobalEndOfRoundHook.Postfix($0);
}

Patch Class: [guardian.patches.SelfStasisPatch$PutInStasis]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Postfix...
{
guardian.patches.SelfStasisPatch$PutInStasis.awayItGoes($0, $1, $2);
}

Patch Class: [hermit.patches.SensoryPatch$DisableHealing]
 - Patching [com.megacrit.cardcrawl.events.beyond.SensoryStone.getRandomMemory()]
 - Adding Postfix...
{
hermit.patches.SensoryPatch$DisableHealing.Postfix($0);
}

Patch Class: [gremlin.patches.eventpatches.ScrapOozePatch$OozeConstructior]
 - Patching [com.megacrit.cardcrawl.events.exordium.ScrapOoze()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.ScrapOozePatch$OozeConstructior.Postfix($0);
}

Patch Class: [gremlin.patches.CampfireRestPatch]
 - Patching [com.megacrit.cardcrawl.vfx.campfire.CampfireSleepEffect()]
 - Adding Postfix...
{
gremlin.patches.CampfireRestPatch.Postfix($0);
}

Patch Class: [theHexaghost.patches.EndTurnAdvance]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.callEndOfTurnActions()]
 - Adding Postfix...
{
theHexaghost.patches.EndTurnAdvance.Postfix($0);
}

Patch Class: [downfall.patches.StancePatch$StanceAuraEffectPatch]
 - Patching [com.megacrit.cardcrawl.vfx.stance.StanceAuraEffect(java.lang.String)]
 - Adding Postfix...
      Return: com.evacipated.cardcrawl.modthespire.lib.SpireReturn
{
return ($r)downfall.patches.StancePatch$StanceAuraEffectPatch.Postfix($0, $1);
}

Patch Class: [charbosses.bosses.HighlightCards$CardGlowPatch]
 - Patching [com.megacrit.cardcrawl.vfx.cardManip.CardGlowBorder(com.megacrit.cardcrawl.cards.AbstractCard,com.badlogic.gdx.graphics.Color)]
 - Adding Postfix...
{
com.badlogic.gdx.graphics.Color[] __param4 = new com.badlogic.gdx.graphics.Color[1];
__param4[0] = color;
charbosses.bosses.HighlightCards$CardGlowPatch.patch($0, $1, $2, __param4);
color = __param4[0];
}

Patch Class: [downfall.patches.PostBossHeartChatPatch$Renderer$Render]
 - Patching [com.megacrit.cardcrawl.rooms.TreasureRoomBoss.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.patches.PostBossHeartChatPatch$Renderer$Render.Postfix($0, $1);
}

Patch Class: [gremlin.patches.relicpatches.FaceOfClericConstructorPatch]
 - Patching [com.megacrit.cardcrawl.relics.FaceOfCleric()]
 - Adding Postfix...
{
gremlin.patches.relicpatches.FaceOfClericConstructorPatch.Postfix($0);
}

Patch Class: [gremlin.patches.GremBtnPatch$UpdateHitbox]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Postfix...
{
gremlin.patches.GremBtnPatch$UpdateHitbox.Postfix($0);
}

Patch Class: [charbosses.bosses.HighlightCards]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
charbosses.bosses.HighlightCards.patch($0, $1);
}

Patch Class: [reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Update]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen.update()]
 - Adding Postfix...
{
reskinContent.patches.CharacterSelectScreenPatches$CharacterSelectScreenPatch_Update.Postfix($0);
}

Patch Class: [hermit.patches.PotionPatch$MakeActuallyUsable]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.canUse()]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)hermit.patches.PotionPatch$MakeActuallyUsable.Postfix($_, $0);
}

Patch Class: [downfall.patches.SensoryStoneTextPatch]
 - Patching [com.megacrit.cardcrawl.screens.CardRewardScreen.acquireCard(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
{
downfall.patches.SensoryStoneTextPatch.Postfix($0, $1);
}

Patch Class: [champ.patches.SignatureMovePatch$MakeStatEquivalentCopy]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)champ.patches.SignatureMovePatch$MakeStatEquivalentCopy.Postfix($_, $0);
}

Patch Class: [gremlin.patches.eventpatches.MatchGameConstructorPatch]
 - Patching [com.megacrit.cardcrawl.events.shrines.GremlinMatchGame()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.MatchGameConstructorPatch.Postfix($0);
}

Patch Class: [sneckomod.patches.SnekBtnPatch$RenderBtn]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderRelics(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
sneckomod.patches.SnekBtnPatch$RenderBtn.Postfix($0, $1);
}

Patch Class: [gremlin.patches.GremBtnPatch$RenderBtn]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderRelics(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
gremlin.patches.GremBtnPatch$RenderBtn.Postfix($0, $1);
}

Patch Class: [downfall.patches.rooms.ShopRoomReplacePatch$replaceShopRoomType]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateRoomTypes(java.util.ArrayList,int)]
 - Adding Postfix...
{
downfall.patches.rooms.ShopRoomReplacePatch$replaceShopRoomType.Postfix($1, $2);
}

Patch Class: [gremlin.patches.SuperRarePatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getCard(com.megacrit.cardcrawl.cards.AbstractCard$CardRarity)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)gremlin.patches.SuperRarePatch.Postfix($_, $1);
}

Patch Class: [gremlin.patches.eventpatches.CursedTomePatch$TomeConstructior]
 - Patching [com.megacrit.cardcrawl.events.city.CursedTome()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.CursedTomePatch$TomeConstructior.Postfix($0);
}

Patch Class: [slimebound.patches.HealthBarRenderBackPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderHealthBg(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Postfix...
{
slimebound.patches.HealthBarRenderBackPatch.Postfix($0, $1, $2, $3);
}

Patch Class: [slimebound.patches.EnergyPanelMovePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.EnergyPanel()]
 - Adding Postfix...
{
slimebound.patches.EnergyPanelMovePatch.Postfix($0);
}

Patch Class: [gremlin.patches.relicpatches.WafflePatch]
 - Patching [com.megacrit.cardcrawl.relics.Waffle.onEquip()]
 - Adding Postfix...
{
gremlin.patches.relicpatches.WafflePatch.Postfix($0);
}

Patch Class: [sneckomod.patches.GenerateSeedsPatch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.generateSeeds()]
 - Adding Postfix...
{
sneckomod.patches.GenerateSeedsPatch.Postfix();
}

Patch Class: [gremlin.patches.eventpatches.KnowingSkullPatch$SkullConstructior]
 - Patching [com.megacrit.cardcrawl.events.city.KnowingSkull()]
 - Adding Postfix...
{
gremlin.patches.eventpatches.KnowingSkullPatch$SkullConstructior.Postfix($0);
}

Patch Class: [downfall.patches.ExordiumThugsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.bottomHumanoid()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.monsters.MonsterGroup
      Result param: com.megacrit.cardcrawl.monsters.MonsterGroup
{
return ($r)downfall.patches.ExordiumThugsPatch.Postfix($_);
}

Patch Class: [slimebound.patches.IntangiblePuddlePatch]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePlayerPower.atEndOfRound()]
 - Adding Postfix...
{
slimebound.patches.IntangiblePuddlePatch.Postfix($0);
}

Patch Class: [downfall.patches.PostBossHeartChatPatch$Initialize$InitPortals]
 - Patching [com.megacrit.cardcrawl.rooms.TreasureRoomBoss.onPlayerEntry()]
 - Adding Postfix...
{
downfall.patches.PostBossHeartChatPatch$Initialize$InitPortals.Postfix($0);
}

Patch Class: [downfall.mainmenu.MainMenuAdPatch$RenderPatch]
 - Patching [com.megacrit.cardcrawl.scenes.TitleBackground.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
downfall.mainmenu.MainMenuAdPatch$RenderPatch.renderAd($0, $1);
}

Patch Class: [gremlin.patches.RandomDamagePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DamageRandomEnemyAction(com.megacrit.cardcrawl.cards.DamageInfo,com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect)]
 - Adding Postfix...
{
gremlin.patches.RandomDamagePatch.Postfix($0);
}

Patch Class: [hermit.patches.BloodyToothPatch$BloodyToothReset]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.dungeonTransitionSetup()]
 - Adding Postfix...
{
hermit.patches.BloodyToothPatch$BloodyToothReset.Postfix();
}

Patch Class: [sneckomod.patches.SnekBtnPatch$UpdateHitbox]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Postfix...
{
sneckomod.patches.SnekBtnPatch$UpdateHitbox.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.ModBadgeOnClick]
 - Patching [basemod.ModBadge.onClick()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePlayerPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HexPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.NoSkillsPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountDamagePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TheBombPower(com.megacrit.cardcrawl.core.AbstractCreature,int,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LockOnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BlurPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.OmegaPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DuplicationPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SlowPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountJustappliedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WeakPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MayhemPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SadisticPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CorruptionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.RushdownPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountNamePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NextTurnBlockPower(com.megacrit.cardcrawl.core.AbstractCreature,int,java.lang.String)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ForcefieldPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WraithFormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ResetScrolling]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasterRealityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawCardNextTurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DiscardToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ChokePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BeatOfDeathPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.InvinciblePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DemonFormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.MentalFortressPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MalleablePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.ExhumeAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TimeMazePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.OmnisciencePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CollectPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegenPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountJustappliedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoBlockPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountCardPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NightmarePower(com.megacrit.cardcrawl.core.AbstractCreature,int,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegrowPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerHplossAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CombustPower(com.megacrit.cardcrawl.core.AbstractCreature,int,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnergizedBluePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PainfulStabsPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SkillBurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ReactivePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThornsPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MinionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.NirvanaPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RetainCardPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.ForesightPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.BlockReturnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BackAttackPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ElectroPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountJustappliedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DoubleDamagePower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FocusPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThousandCutsPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.EstablishmentPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.DiscoveryAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.FreeAttackPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasteryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConfusionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.InfiniteBladesPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.DiscardPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardHelper.GOGGetColorFix]
 - Patching [com.megacrit.cardcrawl.helpers.CardHelper()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ResetScrolling]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.DevaPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.WaveOfTheHandPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AmplifyPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DexterityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountJustappliedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.VulnerablePower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.CannotChangeStancePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HelloPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LightningMasteryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ModeShiftPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PanachePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.ExhaustToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.AttackFromDeckToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DoubleTapPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoDrawPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ReboundPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.MeditateAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.ModalExhaustFix]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ShiftingPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LoseStrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RagePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.stats.CharStat.UnlockStats]
 - Patching [com.megacrit.cardcrawl.screens.stats.CharStat(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.ForeignInfluenceAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerSourceAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.VaultPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CuriosityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.StudyPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AccuracyPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerCardPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StasisPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.SkillFromDeckToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.BetterDrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StaticDischargePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDSerenityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ArtifactPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.BetterDiscardPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountJustappliedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FrailPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.BattleHymnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DrawCardAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MetallicizePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SporeCloudPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.EndTurnDeathPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RechargingCorePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MagnetismPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.JuggernautPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerNameAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GenericStrengthUpPower(com.megacrit.cardcrawl.core.AbstractCreature,java.lang.String,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PenNibPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawReductionPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LoseDexterityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EquilibriumPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.MasterRealityPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ResurrectPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDCondensePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AngryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AttackBurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HeatsinkPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PhantasmalPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AngerPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ExplosivePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.DevotionPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SharpHidePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RupturePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FlameBarrierPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PlatedArmorPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnergizedPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AfterImagePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDRetributionPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RepairPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FeelNoPainPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FlightPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDDisciplinePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.FlickerReturnToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StrikeUpPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GrowthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CorpseExplosionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SurroundedPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.MarkPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.WrathNextTurnPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.ScrapeAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoxiousFumesPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SplitPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDGroundedPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerSourceAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PoisonPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ToolsOfTheTradePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BarricadePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDAlwaysMadPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EchoPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThieveryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EvolvePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EntanglePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnvenomPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConservePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlickedPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TimeWarpPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.MantraPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.MonsterOwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegenerateMonsterPower(com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BerserkPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlowPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BrutalityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FadingPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDEmotionalTurmoilPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.LikeWaterPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BufferPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.EnergyDownPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BurstPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.UnawakenedPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DarkEmbracePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.SeekAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.whatmod.PotionTips]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame(java.lang.String)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountOnplayerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RitualPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.VigorPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LoopPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GainStrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BiasPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.watcher.LiveForeverPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FireBreathingPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CreativeAIPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WinterPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.cards.purple.Scrawl.use(com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerSourceAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConstrictedPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CurlUpPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowers.OwnerAmountPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDHotHotPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [aspiration.relics.boss.Mageblood$CantUsePotionPatch]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame(java.lang.String)]
 - Raw Javassist...

Patch Class: [aspiration.patches.CampfireOptionRelicPatches$AoWCampfireOption]
 - Patching [com.megacrit.cardcrawl.relics.ArtOfWar()]
 - Raw Javassist...

Patch Class: [aspiration.patches.CampfireOptionRelicPatches$WingbootsCampfireOption]
 - Patching [com.megacrit.cardcrawl.relics.WingBoots()]
 - Raw Javassist...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.VirtuousBlindfoldPatch$Nested]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.monsters.AcidSlime_S]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.AcidSlime_S(float,float,int)]
 - Raw Javassist...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.monsters.SpikeSlime_S]
 - Patching [com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_S(float,float,int)]
 - Raw Javassist...

Patch Class: [com.evacipated.cardcrawl.mod.hubris.patches.SpicePatch$SpawnRelicAndObtain$Nested]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.spawnRelicAndObtain(float,float,com.megacrit.cardcrawl.relics.AbstractRelic)]
 - Raw Javassist...

Patch Class: [relicstats.patches.relics.WhiteBeastStatueInfo$WhiteBeastPickupPatch]
 - Patching [com.megacrit.cardcrawl.relics.WhiteBeast()]
 - Raw Javassist...

Patch Class: [relicstats.patches.relics.ChemicalXInfo$ChemicalXFlash]
 - Patching [com.megacrit.cardcrawl.relics.ChemicalX()]
 - Raw Javassist...

Patch Class: [relicstats.patches.relics.CloakClaspInfo$CloakClaspFlash]
 - Patching [com.megacrit.cardcrawl.relics.CloakClasp()]
 - Raw Javassist...

Patch Class: [relicstats.patches.relics.OrichalcumInfo$OrichalcumFlash]
 - Patching [com.megacrit.cardcrawl.relics.Orichalcum()]
 - Raw Javassist...

Patch Class: [downfall.patches.ui.map.FlipMap$BossIconPosition]
 - Patching [com.megacrit.cardcrawl.map.DungeonMap.renderBossIcon(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [downfall.patches.ui.map.FlipMap$FirstRoom]
 - Patching [com.megacrit.cardcrawl.map.MapRoomNode.update()]
 - Raw Javassist...

Patch Class: [downfall.patches.UnflipUI$CenteredText]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.<clinit>()]
 - Raw Javassist...

Patch Class: [downfall.patches.ui.map.FlipMap$BossStuff]
 - Patching [com.megacrit.cardcrawl.map.DungeonMap.update()]
 - Raw Javassist...
2022-04-19 22:06:45,111 Thread-5 ERROR appenders contains an invalid element or attribute "Sentry"
2022-04-19 22:06:45,118 Thread-5 ERROR Unable to locate appender "Sentry" for logger config "root"

Done.
Compiling patched classes...
  SpicyShops.patches.SpicyPotionPatches$PotionUseField
  SpicyShops.patches.SpicyRelicPatches$ShopRelicFields
  SpicyShops.patches.SpicyRelicPatches$SpicyRelicFields
  SpicyShops.patches.cards.RepeatKeywordPatches$RepeatField
  aspiration.patches.Fields.AbstractCardFields
  aspiration.patches.Fields.AbstractPowerScribeBookField
  aspiration.patches.Fields.WingBootsCampfireactionField
  basemod.BaseMod
  basemod.ModBadge
  basemod.devcommands.ConsoleCommand
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$DynamicTextField
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ExhaustViewFixField
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Frame
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCardDescriptors$Text
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents
  basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock
  basemod.patches.com.megacrit.cardcrawl.events.NoteForYourself.MissingCard
  basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves
  basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords
  basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCardDescriptorsSCV$Frame
  basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling
  basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize
  basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render
  basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields
  basemod.patches.whatmod.WhatMod
  betterNote.patches.EventDungeonEnumPatch
  champ.patches.SignatureMovePatch
  com.badlogic.gdx.backends.lwjgl.LwjglApplication
  com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$Field
  com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PiercingField
  com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$RugHitbox
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$Field
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.NoDiscardField
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField
  com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField
  com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides
  com.evacipated.cardcrawl.mod.stslib.StSLib
  com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockModifierFields$CardField
  com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockTypes
  com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields
  com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$DamageModsField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AlwaysRetainField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AutoplayField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.CommonKeywordIconsField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.FleetingField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.GraveField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SneckoField
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SoulboundField
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BindObjectToDamageInfo
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields
  com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches
  com.evacipated.cardcrawl.mod.stslib.patches.BlockModifierPatches$OnUseCard
  com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$TargetField
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$CardStringsFlavorField
  com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick
  com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$BlockStackElementField
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchingUpgradeField
  com.evacipated.cardcrawl.mod.stslib.patches.core.AbstractCreature.TempHPField
  com.evacipated.cardcrawl.mod.stslib.patches.powerInterfaces.HealthBarRenderPowerPatch$RenderPowerHealthBar
  com.megacrit.cardcrawl.actions.AbstractGameAction
  com.megacrit.cardcrawl.actions.GameActionManager
  com.megacrit.cardcrawl.audio.MainMusic
  com.megacrit.cardcrawl.audio.SoundMaster
  com.megacrit.cardcrawl.cards.AbstractCard
  com.megacrit.cardcrawl.cards.CardGroup
  com.megacrit.cardcrawl.cards.DamageInfo
  com.megacrit.cardcrawl.cards.DescriptionLine
  com.megacrit.cardcrawl.cards.Soul
  com.megacrit.cardcrawl.characters.AnimatedNpc
  com.megacrit.cardcrawl.core.AbstractCreature
  com.megacrit.cardcrawl.core.CardCrawlGame
  com.megacrit.cardcrawl.core.EnergyManager
  com.megacrit.cardcrawl.core.ExceptionHandler
  com.megacrit.cardcrawl.core.OverlayMenu
  com.megacrit.cardcrawl.core.Settings
  com.megacrit.cardcrawl.credits.CreditsScreen
  com.megacrit.cardcrawl.cutscenes.Cutscene
  com.megacrit.cardcrawl.cutscenes.NeowNarrationScreen
  com.megacrit.cardcrawl.daily.DailyScreen
  com.megacrit.cardcrawl.desktop.DesktopLauncher
  com.megacrit.cardcrawl.dungeons.AbstractDungeon
  com.megacrit.cardcrawl.events.AbstractEvent
  com.megacrit.cardcrawl.events.GenericEventDialog
  com.megacrit.cardcrawl.helpers.BlightHelper
  com.megacrit.cardcrawl.helpers.CardHelper
  com.megacrit.cardcrawl.helpers.CardLibrary
  com.megacrit.cardcrawl.helpers.EventHelper
  com.megacrit.cardcrawl.helpers.FontHelper
  com.megacrit.cardcrawl.helpers.GameDictionary
  com.megacrit.cardcrawl.helpers.GetAllInBattleInstances
  com.megacrit.cardcrawl.helpers.Hitbox
  com.megacrit.cardcrawl.helpers.ModHelper
  com.megacrit.cardcrawl.helpers.MonsterHelper
  com.megacrit.cardcrawl.helpers.PotionHelper
  com.megacrit.cardcrawl.helpers.Prefs
  com.megacrit.cardcrawl.helpers.RelicLibrary
  com.megacrit.cardcrawl.helpers.TipHelper
  com.megacrit.cardcrawl.helpers.input.InputAction
  com.megacrit.cardcrawl.helpers.input.InputHelper
  com.megacrit.cardcrawl.helpers.input.ScrollInputProcessor
  com.megacrit.cardcrawl.localization.CardStrings
  com.megacrit.cardcrawl.localization.LocalizedStrings
  com.megacrit.cardcrawl.map.DungeonMap
  com.megacrit.cardcrawl.map.MapEdge
  com.megacrit.cardcrawl.map.MapGenerator
  com.megacrit.cardcrawl.map.MapRoomNode
  com.megacrit.cardcrawl.map.RoomTypeAssigner
  com.megacrit.cardcrawl.metrics.Metrics
  com.megacrit.cardcrawl.monsters.MonsterGroup
  com.megacrit.cardcrawl.monsters.MonsterInfo
  com.megacrit.cardcrawl.neow.NeowReward
  com.megacrit.cardcrawl.orbs.AbstractOrb
  com.megacrit.cardcrawl.potions.AbstractPotion
  com.megacrit.cardcrawl.powers.AbstractPower
  com.megacrit.cardcrawl.relics.AbstractRelic
  com.megacrit.cardcrawl.rewards.RewardItem
  com.megacrit.cardcrawl.rewards.chests.AbstractChest
  com.megacrit.cardcrawl.rooms.AbstractRoom
  com.megacrit.cardcrawl.rooms.CampfireUI
  com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue
  com.megacrit.cardcrawl.saveAndContinue.SaveFile
  com.megacrit.cardcrawl.scenes.TitleBackground
  com.megacrit.cardcrawl.screens.CardRewardScreen
  com.megacrit.cardcrawl.screens.CombatRewardScreen
  com.megacrit.cardcrawl.screens.DrawPileViewScreen
  com.megacrit.cardcrawl.screens.DungeonMapScreen
  com.megacrit.cardcrawl.screens.ExhaustPileViewScreen
  com.megacrit.cardcrawl.screens.GameOverScreen
  com.megacrit.cardcrawl.screens.SingleCardViewPopup
  com.megacrit.cardcrawl.screens.SingleRelicViewPopup
  com.megacrit.cardcrawl.screens.charSelect.CharacterOption
  com.megacrit.cardcrawl.screens.charSelect.CharacterSelectScreen
  com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen
  com.megacrit.cardcrawl.screens.compendium.PotionViewScreen
  com.megacrit.cardcrawl.screens.compendium.RelicViewScreen
  com.megacrit.cardcrawl.screens.custom.CustomModeScreen
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton
  com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen
  com.megacrit.cardcrawl.screens.options.OptionsPanel
  com.megacrit.cardcrawl.screens.options.SettingsScreen
  com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen
  com.megacrit.cardcrawl.screens.runHistory.TinyCard
  com.megacrit.cardcrawl.screens.select.BossRelicSelectScreen
  com.megacrit.cardcrawl.screens.select.GridCardSelectScreen
  com.megacrit.cardcrawl.screens.select.HandCardSelectScreen
  com.megacrit.cardcrawl.screens.splash.SplashScreen
  com.megacrit.cardcrawl.screens.stats.CharStat
  com.megacrit.cardcrawl.screens.stats.StatsScreen
  com.megacrit.cardcrawl.shop.Merchant
  com.megacrit.cardcrawl.shop.ShopScreen
  com.megacrit.cardcrawl.shop.StorePotion
  com.megacrit.cardcrawl.shop.StoreRelic
  com.megacrit.cardcrawl.stances.AbstractStance
  com.megacrit.cardcrawl.ui.buttons.CancelButton
  com.megacrit.cardcrawl.ui.buttons.GridSelectConfirmButton
  com.megacrit.cardcrawl.ui.buttons.LargeDialogOptionButton
  com.megacrit.cardcrawl.ui.buttons.ProceedButton
  com.megacrit.cardcrawl.ui.buttons.ReturnToMenuButton
  com.megacrit.cardcrawl.ui.buttons.SingingBowlButton
  com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption
  com.megacrit.cardcrawl.ui.panels.PotionPopUp
  com.megacrit.cardcrawl.ui.panels.TopPanel
  com.megacrit.cardcrawl.unlock.UnlockCharacterScreen
  com.megacrit.cardcrawl.unlock.UnlockTracker
  conspire.patches.BottledYoYoField
  downfall.patches.EventHelperEventNamePatch
  downfall.patches.NoDiscardField
  downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields
  downfall.patches.ui.map.EmeraldElite
  gremlin.patches.eventpatches.GremlinEventFixPatch1
  guardian.patches.BottledStasisPatch
  guardian.patches.SelfStasisPatch$Fields
  hermit.patches.relics.BottledPlaceholderField
  sneckomod.patches.BottledD8Patch
  sneckomod.patches.UnknownExtraUiPatch
  theLatent.fields.EnergizedField
  theLatent.fields.WeightlessField
  SpicyShops.patches.SpicyPotionPatches$PotionUseField$isBig_372_Accessor
  SpicyShops.patches.SpicyPotionPatches$PotionUseField$isConcentrated_574_Accessor
  SpicyShops.patches.SpicyPotionPatches$PotionUseField$useCount_195_Accessor
  SpicyShops.patches.SpicyRelicPatches$ShopRelicFields$bonusCard_530_Accessor
  SpicyShops.patches.SpicyRelicPatches$SpicyRelicFields$modifier_132_Accessor
  SpicyShops.patches.cards.RepeatKeywordPatches$RepeatField$repeat_157_Accessor
  aspiration.patches.Fields.AbstractCardFields$playerPlayed_111_Accessor
  aspiration.patches.Fields.AbstractCardFields$ppTriggered_67_Accessor
  aspiration.patches.Fields.AbstractPowerScribeBookField$ssbTriggered_125_Accessor
  aspiration.patches.Fields.WingBootsCampfireactionField$campUsed_648_Accessor
  basemod.CustomCharacterSelectScreen
  basemod.abstracts.CustomCard
  basemod.devcommands.hand.HandAdd
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields$cardModifiers_790_Accessor
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$DynamicTextField$isDynamic_170_Accessor
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DynamicTextBlocks$ExhaustViewFixField$exhaustViewCopy_286_Accessor
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale$descriptionScale_331_Accessor
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField$maxHandSize_940_Accessor
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents$seenEvents_931_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$cardModifierSaves_399_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$eventSaves_791_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modCardSaves_398_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modPotionSaves_329_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modRelicSaves_271_Accessor
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$modSaves_173_Accessor
  basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$customCallback_523_Accessor
  basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$forCustomReward_967_Accessor
  betterAltar.potions.AltarPotion
  betterLab.potions.LabPotion
  betterNote.patches.EventDungeonEnumPatch$noteChance_179_Accessor
  champ.patches.SignatureMovePatch$inSignatureMove_539_Accessor
  com.badlogic.gdx.backends.lwjgl.LwjglApplication$1
  com.badlogic.gdx.graphics.Texture
  com.evacipated.cardcrawl.mod.hubris.patches.CurseForTurnPatch$Field$curseForTurn_354_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.PiercingPatch$PiercingField$isPiercing_403_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.RugNotForSalePatch$RugHitbox$rugHB_359_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.BottleRainField$inBottleRain_153_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.InnateOncePatch$Field$isInnateOnce_495_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.NoDiscardField$noDiscard_604_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.PyramidsField$inPyramids_79_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.cards.AbstractCard.ZylophoneField$costsX_284_Accessor
  com.evacipated.cardcrawl.mod.hubris.patches.potions.AbstractPotion.PotionUseCountField$useCount_724_Accessor
  com.evacipated.cardcrawl.mod.hubris.rewards.LinkedRewardItem
  com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides$startingGold_960_Accessor
  com.evacipated.cardcrawl.mod.hubris.trials.MercantileTrial$MercantileOverrides$startingOrbSlots_282_Accessor
  com.evacipated.cardcrawl.mod.stslib.actions.defect.EvokeSpecificOrbAction
  com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockModifierFields$CardField$blockModifiers_253_Accessor
  com.evacipated.cardcrawl.mod.stslib.blockmods.BlockModifierManager$BlockTypes$blockInstances_719_Accessor
  com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields$boundDamageMods_452_Accessor
  com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$BoundDamageInfoFields$instigatingObject_30_Accessor
  com.evacipated.cardcrawl.mod.stslib.damagemods.DamageModifierManager$DamageModsField$damageModifiers_681_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AlwaysRetainField$alwaysRetain_909_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.AutoplayField$autoplay_837_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.CommonKeywordIconsField$useIcons_126_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$baseExhaustive_446_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$exhaustive_151_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.ExhaustiveField$ExhaustiveFields$isExhaustiveUpgraded_273_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.FleetingField$fleeting_577_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.GraveField$grave_344_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$baseRefund_583_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$isRefundUpgraded_304_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.RefundFields$refund_348_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SneckoField$snecko_396_Accessor
  com.evacipated.cardcrawl.mod.stslib.fields.cards.AbstractCard.SoulboundField$soulbound_16_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedBlockMods_397_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedCardInUse_124_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedDamageMods_443_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.BindingPatches$BoundGameActionFields$actionDelayedDirectlyBoundInstigator_214_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.CustomTargeting$TargetField$target_924_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$boxColor_672_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$flavor_67_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$AbstractCardFlavorFields$textColor_737_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.FlavorText$CardStringsFlavorField$FLAVOR_139_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$rightClickStarted_479_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.HitboxRightClick$rightClicked_734_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.RenderStackedBlockInstances$BlockStackElementField$element_930_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$branchUpgradePreviewCard_86_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$isBranchUpgrading_754_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchSelectFields$waitingForBranchUpgradeSelection_873_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton$branchUpgradeHb_125_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchUpgradeButton$isViewingBranchUpgrade_869_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.cardInterfaces.BranchingUpgradesPatch$BranchingUpgradeField$upgradeType_242_Accessor
  com.evacipated.cardcrawl.mod.stslib.patches.core.AbstractCreature.TempHPField$tempHp_705_Accessor
  com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect
  com.megacrit.cardcrawl.actions.common.ApplyPowerAction
  com.megacrit.cardcrawl.actions.common.ApplyPowerToRandomEnemyAction
  com.megacrit.cardcrawl.actions.common.BetterDiscardPileToHandAction
  com.megacrit.cardcrawl.actions.common.BetterDrawPileToHandAction
  com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction
  com.megacrit.cardcrawl.actions.common.DamageRandomEnemyAction
  com.megacrit.cardcrawl.actions.common.DrawCardAction
  com.megacrit.cardcrawl.actions.common.EmptyDeckShuffleAction
  com.megacrit.cardcrawl.actions.common.EnableEndTurnButtonAction
  com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction
  com.megacrit.cardcrawl.actions.common.ObtainPotionAction
  com.megacrit.cardcrawl.actions.common.RemoveSpecificPowerAction
  com.megacrit.cardcrawl.actions.common.ShuffleAction
  com.megacrit.cardcrawl.actions.common.UpgradeRandomCardAction
  com.megacrit.cardcrawl.actions.defect.DarkImpulseAction
  com.megacrit.cardcrawl.actions.defect.DiscardPileToHandAction
  com.megacrit.cardcrawl.actions.defect.ImpulseAction
  com.megacrit.cardcrawl.actions.defect.IncreaseMiscAction
  com.megacrit.cardcrawl.actions.defect.ScrapeAction
  com.megacrit.cardcrawl.actions.defect.SeekAction
  com.megacrit.cardcrawl.actions.defect.TriggerEndOfTurnOrbsAction
  com.megacrit.cardcrawl.actions.unique.ApotheosisAction
  com.megacrit.cardcrawl.actions.unique.ArmamentsAction
  com.megacrit.cardcrawl.actions.unique.AttackFromDeckToHandAction
  com.megacrit.cardcrawl.actions.unique.CodexAction
  com.megacrit.cardcrawl.actions.unique.DiscoveryAction
  com.megacrit.cardcrawl.actions.unique.ExhumeAction
  com.megacrit.cardcrawl.actions.unique.GamblingChipAction
  com.megacrit.cardcrawl.actions.unique.PoisonLoseHpAction
  com.megacrit.cardcrawl.actions.unique.RegenAction
  com.megacrit.cardcrawl.actions.unique.RestoreRetainedCardsAction
  com.megacrit.cardcrawl.actions.unique.RetainCardsAction
  com.megacrit.cardcrawl.actions.unique.SkillFromDeckToHandAction
  com.megacrit.cardcrawl.actions.unique.SpawnDaggerAction
  com.megacrit.cardcrawl.actions.unique.SummonGremlinAction
  com.megacrit.cardcrawl.actions.unique.VampireDamageAllEnemiesAction
  com.megacrit.cardcrawl.actions.utility.DiscardToHandAction
  com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction
  com.megacrit.cardcrawl.actions.utility.ExhaustToHandAction
  com.megacrit.cardcrawl.actions.utility.ScryAction
  com.megacrit.cardcrawl.actions.utility.UseCardAction
  com.megacrit.cardcrawl.actions.watcher.FlickerReturnToHandAction
  com.megacrit.cardcrawl.actions.watcher.ForeignInfluenceAction
  com.megacrit.cardcrawl.actions.watcher.MeditateAction
  com.megacrit.cardcrawl.cards.AbstractCard$CardColor
  com.megacrit.cardcrawl.cards.AbstractCard$CardTags
  com.megacrit.cardcrawl.cards.AbstractCard$CardTarget
  com.megacrit.cardcrawl.cards.DamageInfo$DamageType
  com.megacrit.cardcrawl.cards.blue.EchoForm
  com.megacrit.cardcrawl.cards.green.WraithForm
  com.megacrit.cardcrawl.cards.purple.DevaForm
  com.megacrit.cardcrawl.cards.purple.Scrawl
  com.megacrit.cardcrawl.cards.red.DemonForm
  com.megacrit.cardcrawl.cards.tempCards.Expunger
  com.megacrit.cardcrawl.cards.tempCards.Miracle
  com.megacrit.cardcrawl.characters.AbstractPlayer
  com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass
  com.megacrit.cardcrawl.core.AbstractCreature$CreatureAnimation
  com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen
  com.megacrit.cardcrawl.dungeons.TheEnding
  com.megacrit.cardcrawl.events.AbstractImageEvent
  com.megacrit.cardcrawl.events.beyond.SpireHeart
  com.megacrit.cardcrawl.events.city.MaskedBandits
  com.megacrit.cardcrawl.helpers.CardLibrary$LibraryType
  com.megacrit.cardcrawl.monsters.AbstractMonster
  com.megacrit.cardcrawl.monsters.AbstractMonster$Intent
  com.megacrit.cardcrawl.neow.NeowEvent
  com.megacrit.cardcrawl.neow.NeowReward$NeowRewardDrawback
  com.megacrit.cardcrawl.neow.NeowReward$NeowRewardType
  com.megacrit.cardcrawl.neow.NeowRoom
  com.megacrit.cardcrawl.orbs.EmptyOrbSlot
  com.megacrit.cardcrawl.potions.BloodPotion
  com.megacrit.cardcrawl.potions.EntropicBrew
  com.megacrit.cardcrawl.potions.FairyPotion
  com.megacrit.cardcrawl.potions.FruitJuice
  com.megacrit.cardcrawl.potions.SmokeBomb
  com.megacrit.cardcrawl.powers.AbstractPower$PowerType
  com.megacrit.cardcrawl.powers.AccuracyPower
  com.megacrit.cardcrawl.powers.AfterImagePower
  com.megacrit.cardcrawl.powers.AmplifyPower
  com.megacrit.cardcrawl.powers.AngerPower
  com.megacrit.cardcrawl.powers.AngryPower
  com.megacrit.cardcrawl.powers.ArtifactPower
  com.megacrit.cardcrawl.powers.AttackBurnPower
  com.megacrit.cardcrawl.powers.BackAttackPower
  com.megacrit.cardcrawl.powers.BarricadePower
  com.megacrit.cardcrawl.powers.BeatOfDeathPower
  com.megacrit.cardcrawl.powers.BerserkPower
  com.megacrit.cardcrawl.powers.BiasPower
  com.megacrit.cardcrawl.powers.BlurPower
  com.megacrit.cardcrawl.powers.BrutalityPower
  com.megacrit.cardcrawl.powers.BufferPower
  com.megacrit.cardcrawl.powers.BurstPower
  com.megacrit.cardcrawl.powers.ChokePower
  com.megacrit.cardcrawl.powers.CollectPower
  com.megacrit.cardcrawl.powers.CombustPower
  com.megacrit.cardcrawl.powers.ConfusionPower
  com.megacrit.cardcrawl.powers.ConservePower
  com.megacrit.cardcrawl.powers.ConstrictedPower
  com.megacrit.cardcrawl.powers.CorpseExplosionPower
  com.megacrit.cardcrawl.powers.CorruptionPower
  com.megacrit.cardcrawl.powers.CreativeAIPower
  com.megacrit.cardcrawl.powers.CuriosityPower
  com.megacrit.cardcrawl.powers.CurlUpPower
  com.megacrit.cardcrawl.powers.DarkEmbracePower
  com.megacrit.cardcrawl.powers.DemonFormPower
  com.megacrit.cardcrawl.powers.DexterityPower
  com.megacrit.cardcrawl.powers.DoubleDamagePower
  com.megacrit.cardcrawl.powers.DoubleTapPower
  com.megacrit.cardcrawl.powers.DrawCardNextTurnPower
  com.megacrit.cardcrawl.powers.DrawPower
  com.megacrit.cardcrawl.powers.DrawReductionPower
  com.megacrit.cardcrawl.powers.DuplicationPower
  com.megacrit.cardcrawl.powers.EchoPower
  com.megacrit.cardcrawl.powers.ElectroPower
  com.megacrit.cardcrawl.powers.EnergizedBluePower
  com.megacrit.cardcrawl.powers.EnergizedPower
  com.megacrit.cardcrawl.powers.EntanglePower
  com.megacrit.cardcrawl.powers.EnvenomPower
  com.megacrit.cardcrawl.powers.EquilibriumPower
  com.megacrit.cardcrawl.powers.EvolvePower
  com.megacrit.cardcrawl.powers.ExplosivePower
  com.megacrit.cardcrawl.powers.FadingPower
  com.megacrit.cardcrawl.powers.FeelNoPainPower
  com.megacrit.cardcrawl.powers.FireBreathingPower
  com.megacrit.cardcrawl.powers.FlameBarrierPower
  com.megacrit.cardcrawl.powers.FlightPower
  com.megacrit.cardcrawl.powers.FocusPower
  com.megacrit.cardcrawl.powers.ForcefieldPower
  com.megacrit.cardcrawl.powers.FrailPower
  com.megacrit.cardcrawl.powers.GainStrengthPower
  com.megacrit.cardcrawl.powers.GenericStrengthUpPower
  com.megacrit.cardcrawl.powers.GrowthPower
  com.megacrit.cardcrawl.powers.HeatsinkPower
  com.megacrit.cardcrawl.powers.HelloPower
  com.megacrit.cardcrawl.powers.HexPower
  com.megacrit.cardcrawl.powers.InfiniteBladesPower
  com.megacrit.cardcrawl.powers.IntangiblePlayerPower
  com.megacrit.cardcrawl.powers.IntangiblePower
  com.megacrit.cardcrawl.powers.InvinciblePower
  com.megacrit.cardcrawl.powers.JuggernautPower
  com.megacrit.cardcrawl.powers.LightningMasteryPower
  com.megacrit.cardcrawl.powers.LockOnPower
  com.megacrit.cardcrawl.powers.LoopPower
  com.megacrit.cardcrawl.powers.LoseDexterityPower
  com.megacrit.cardcrawl.powers.LoseStrengthPower
  com.megacrit.cardcrawl.powers.MagnetismPower
  com.megacrit.cardcrawl.powers.MalleablePower
  com.megacrit.cardcrawl.powers.MayhemPower
  com.megacrit.cardcrawl.powers.MetallicizePower
  com.megacrit.cardcrawl.powers.MinionPower
  com.megacrit.cardcrawl.powers.ModeShiftPower
  com.megacrit.cardcrawl.powers.NextTurnBlockPower
  com.megacrit.cardcrawl.powers.NightmarePower
  com.megacrit.cardcrawl.powers.NoBlockPower
  com.megacrit.cardcrawl.powers.NoDrawPower
  com.megacrit.cardcrawl.powers.NoxiousFumesPower
  com.megacrit.cardcrawl.powers.PainfulStabsPower
  com.megacrit.cardcrawl.powers.PanachePower
  com.megacrit.cardcrawl.powers.PenNibPower
  com.megacrit.cardcrawl.powers.PhantasmalPower
  com.megacrit.cardcrawl.powers.PlatedArmorPower
  com.megacrit.cardcrawl.powers.PoisonPower
  com.megacrit.cardcrawl.powers.RagePower
  com.megacrit.cardcrawl.powers.ReactivePower
  com.megacrit.cardcrawl.powers.ReboundPower
  com.megacrit.cardcrawl.powers.RechargingCorePower
  com.megacrit.cardcrawl.powers.RegenPower
  com.megacrit.cardcrawl.powers.RegenerateMonsterPower
  com.megacrit.cardcrawl.powers.RegrowPower
  com.megacrit.cardcrawl.powers.RepairPower
  com.megacrit.cardcrawl.powers.ResurrectPower
  com.megacrit.cardcrawl.powers.RetainCardPower
  com.megacrit.cardcrawl.powers.RitualPower
  com.megacrit.cardcrawl.powers.RupturePower
  com.megacrit.cardcrawl.powers.SadisticPower
  com.megacrit.cardcrawl.powers.SharpHidePower
  com.megacrit.cardcrawl.powers.ShiftingPower
  com.megacrit.cardcrawl.powers.SkillBurnPower
  com.megacrit.cardcrawl.powers.SlowPower
  com.megacrit.cardcrawl.powers.SplitPower
  com.megacrit.cardcrawl.powers.SporeCloudPower
  com.megacrit.cardcrawl.powers.StasisPower
  com.megacrit.cardcrawl.powers.StaticDischargePower
  com.megacrit.cardcrawl.powers.StormPower
  com.megacrit.cardcrawl.powers.StrengthPower
  com.megacrit.cardcrawl.powers.StrikeUpPower
  com.megacrit.cardcrawl.powers.SurroundedPower
  com.megacrit.cardcrawl.powers.TheBombPower
  com.megacrit.cardcrawl.powers.ThieveryPower
  com.megacrit.cardcrawl.powers.ThornsPower
  com.megacrit.cardcrawl.powers.ThousandCutsPower
  com.megacrit.cardcrawl.powers.TimeMazePower
  com.megacrit.cardcrawl.powers.TimeWarpPower
  com.megacrit.cardcrawl.powers.ToolsOfTheTradePower
  com.megacrit.cardcrawl.powers.UnawakenedPower
  com.megacrit.cardcrawl.powers.VulnerablePower
  com.megacrit.cardcrawl.powers.WeakPower
  com.megacrit.cardcrawl.powers.WinterPower
  com.megacrit.cardcrawl.powers.WraithFormPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDAlwaysMadPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDCondensePower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDDisciplinePower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDEmotionalTurmoilPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlickedPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlowPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDGroundedPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDHotHotPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasterRealityPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasteryPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDRetributionPower
  com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDSerenityPower
  com.megacrit.cardcrawl.powers.watcher.BattleHymnPower
  com.megacrit.cardcrawl.powers.watcher.BlockReturnPower
  com.megacrit.cardcrawl.powers.watcher.CannotChangeStancePower
  com.megacrit.cardcrawl.powers.watcher.DevaPower
  com.megacrit.cardcrawl.powers.watcher.DevotionPower
  com.megacrit.cardcrawl.powers.watcher.EndTurnDeathPower
  com.megacrit.cardcrawl.powers.watcher.EnergyDownPower
  com.megacrit.cardcrawl.powers.watcher.EstablishmentPower
  com.megacrit.cardcrawl.powers.watcher.ForesightPower
  com.megacrit.cardcrawl.powers.watcher.FreeAttackPower
  com.megacrit.cardcrawl.powers.watcher.LikeWaterPower
  com.megacrit.cardcrawl.powers.watcher.LiveForeverPower
  com.megacrit.cardcrawl.powers.watcher.MantraPower
  com.megacrit.cardcrawl.powers.watcher.MarkPower
  com.megacrit.cardcrawl.powers.watcher.MasterRealityPower
  com.megacrit.cardcrawl.powers.watcher.MentalFortressPower
  com.megacrit.cardcrawl.powers.watcher.NirvanaPower
  com.megacrit.cardcrawl.powers.watcher.NoSkillsPower
  com.megacrit.cardcrawl.powers.watcher.OmegaPower
  com.megacrit.cardcrawl.powers.watcher.OmnisciencePower
  com.megacrit.cardcrawl.powers.watcher.RushdownPower
  com.megacrit.cardcrawl.powers.watcher.StudyPower
  com.megacrit.cardcrawl.powers.watcher.VaultPower
  com.megacrit.cardcrawl.powers.watcher.VigorPower
  com.megacrit.cardcrawl.powers.watcher.WaveOfTheHandPower
  com.megacrit.cardcrawl.powers.watcher.WrathNextTurnPower
  com.megacrit.cardcrawl.relics.Abacus
  com.megacrit.cardcrawl.relics.AncientTeaSet
  com.megacrit.cardcrawl.relics.ArtOfWar
  com.megacrit.cardcrawl.relics.Astrolabe
  com.megacrit.cardcrawl.relics.BagOfPreparation
  com.megacrit.cardcrawl.relics.BirdFacedUrn
  com.megacrit.cardcrawl.relics.BlackBlood
  com.megacrit.cardcrawl.relics.BlackStar
  com.megacrit.cardcrawl.relics.BloodVial
  com.megacrit.cardcrawl.relics.BloodyIdol
  com.megacrit.cardcrawl.relics.BlueCandle
  com.megacrit.cardcrawl.relics.Boot
  com.megacrit.cardcrawl.relics.BottledFlame
  com.megacrit.cardcrawl.relics.BottledLightning
  com.megacrit.cardcrawl.relics.BottledTornado
  com.megacrit.cardcrawl.relics.BurningBlood
  com.megacrit.cardcrawl.relics.BustedCrown
  com.megacrit.cardcrawl.relics.CallingBell
  com.megacrit.cardcrawl.relics.Cauldron
  com.megacrit.cardcrawl.relics.CentennialPuzzle
  com.megacrit.cardcrawl.relics.CeramicFish
  com.megacrit.cardcrawl.relics.ChampionsBelt
  com.megacrit.cardcrawl.relics.CharonsAshes
  com.megacrit.cardcrawl.relics.ChemicalX
  com.megacrit.cardcrawl.relics.CloakClasp
  com.megacrit.cardcrawl.relics.Courier
  com.megacrit.cardcrawl.relics.CursedKey
  com.megacrit.cardcrawl.relics.DarkstonePeriapt
  com.megacrit.cardcrawl.relics.DeadBranch
  com.megacrit.cardcrawl.relics.Duality
  com.megacrit.cardcrawl.relics.Ectoplasm
  com.megacrit.cardcrawl.relics.EternalFeather
  com.megacrit.cardcrawl.relics.FaceOfCleric
  com.megacrit.cardcrawl.relics.FossilizedHelix
  com.megacrit.cardcrawl.relics.FrozenCore
  com.megacrit.cardcrawl.relics.GremlinHorn
  com.megacrit.cardcrawl.relics.GremlinMask
  com.megacrit.cardcrawl.relics.HandDrill
  com.megacrit.cardcrawl.relics.HappyFlower
  com.megacrit.cardcrawl.relics.HolyWater
  com.megacrit.cardcrawl.relics.HoveringKite
  com.megacrit.cardcrawl.relics.InkBottle
  com.megacrit.cardcrawl.relics.Inserter
  com.megacrit.cardcrawl.relics.Kunai
  com.megacrit.cardcrawl.relics.LetterOpener
  com.megacrit.cardcrawl.relics.LizardTail
  com.megacrit.cardcrawl.relics.MagicFlower
  com.megacrit.cardcrawl.relics.Mango
  com.megacrit.cardcrawl.relics.MarkOfTheBloom
  com.megacrit.cardcrawl.relics.Matryoshka
  com.megacrit.cardcrawl.relics.MawBank
  com.megacrit.cardcrawl.relics.MealTicket
  com.megacrit.cardcrawl.relics.MeatOnTheBone
  com.megacrit.cardcrawl.relics.MedicalKit
  com.megacrit.cardcrawl.relics.Melange
  com.megacrit.cardcrawl.relics.MembershipCard
  com.megacrit.cardcrawl.relics.MercuryHourglass
  com.megacrit.cardcrawl.relics.MummifiedHand
  com.megacrit.cardcrawl.relics.Necronomicon
  com.megacrit.cardcrawl.relics.Nunchaku
  com.megacrit.cardcrawl.relics.OldCoin
  com.megacrit.cardcrawl.relics.Omamori
  com.megacrit.cardcrawl.relics.OrangePellets
  com.megacrit.cardcrawl.relics.Orichalcum
  com.megacrit.cardcrawl.relics.OrnamentalFan
  com.megacrit.cardcrawl.relics.PandorasBox
  com.megacrit.cardcrawl.relics.Pantograph
  com.megacrit.cardcrawl.relics.Pear
  com.megacrit.cardcrawl.relics.Pocketwatch
  com.megacrit.cardcrawl.relics.PreservedInsect
  com.megacrit.cardcrawl.relics.PrismaticShard
  com.megacrit.cardcrawl.relics.PureWater
  com.megacrit.cardcrawl.relics.QuestionCard
  com.megacrit.cardcrawl.relics.RunicCube
  com.megacrit.cardcrawl.relics.SelfFormingClay
  com.megacrit.cardcrawl.relics.Shuriken
  com.megacrit.cardcrawl.relics.SingingBowl
  com.megacrit.cardcrawl.relics.SlaversCollar
  com.megacrit.cardcrawl.relics.SnakeRing
  com.megacrit.cardcrawl.relics.SsserpentHead
  com.megacrit.cardcrawl.relics.StoneCalendar
  com.megacrit.cardcrawl.relics.Strawberry
  com.megacrit.cardcrawl.relics.Sundial
  com.megacrit.cardcrawl.relics.TheSpecimen
  com.megacrit.cardcrawl.relics.Tingsha
  com.megacrit.cardcrawl.relics.TinyHouse
  com.megacrit.cardcrawl.relics.Torii
  com.megacrit.cardcrawl.relics.ToughBandages
  com.megacrit.cardcrawl.relics.ToyOrnithopter
  com.megacrit.cardcrawl.relics.TungstenRod
  com.megacrit.cardcrawl.relics.UnceasingTop
  com.megacrit.cardcrawl.relics.VioletLotus
  com.megacrit.cardcrawl.relics.Waffle
  com.megacrit.cardcrawl.relics.WarPaint
  com.megacrit.cardcrawl.relics.WarpedTongs
  com.megacrit.cardcrawl.relics.Whetstone
  com.megacrit.cardcrawl.relics.WhiteBeast
  com.megacrit.cardcrawl.relics.WingBoots
  com.megacrit.cardcrawl.rewards.RewardItem$RewardType
  com.megacrit.cardcrawl.rooms.MonsterRoom
  com.megacrit.cardcrawl.rooms.TreasureRoom
  com.megacrit.cardcrawl.rooms.TreasureRoomBoss
  com.megacrit.cardcrawl.screens.DeathScreen
  com.megacrit.cardcrawl.screens.VictoryScreen
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton$PanelClickResult
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$CurScreen
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton$ClickResult
  com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen$PanelScreen
  com.megacrit.cardcrawl.trials.CustomTrial
  com.megacrit.cardcrawl.trials.MyTrueFormTrial
  com.megacrit.cardcrawl.ui.campfire.RecallOption
  com.megacrit.cardcrawl.ui.campfire.RestOption
  com.megacrit.cardcrawl.ui.campfire.TokeOption
  com.megacrit.cardcrawl.ui.panels.DiscardPilePanel
  com.megacrit.cardcrawl.ui.panels.EnergyPanel
  com.megacrit.cardcrawl.ui.panels.ExhaustPanel
  com.megacrit.cardcrawl.vfx.DamageHeartEffect
  com.megacrit.cardcrawl.vfx.FlashPotionEffect
  com.megacrit.cardcrawl.vfx.RainingGoldEffect
  com.megacrit.cardcrawl.vfx.RefreshEnergyEffect
  com.megacrit.cardcrawl.vfx.campfire.CampfireDigEffect
  com.megacrit.cardcrawl.vfx.campfire.CampfireLiftEffect
  com.megacrit.cardcrawl.vfx.campfire.CampfireSleepEffect
  com.megacrit.cardcrawl.vfx.campfire.CampfireSmithEffect
  com.megacrit.cardcrawl.vfx.campfire.CampfireTokeEffect
  com.megacrit.cardcrawl.vfx.cardManip.CardGlowBorder
  com.megacrit.cardcrawl.vfx.cardManip.ExhaustCardEffect
  com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDiscardEffect
  com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToDrawPileEffect
  com.megacrit.cardcrawl.vfx.cardManip.ShowCardAndAddToHandEffect
  com.megacrit.cardcrawl.vfx.combat.FlashAtkImgEffect
  com.megacrit.cardcrawl.vfx.combat.PowerExpireTextEffect
  com.megacrit.cardcrawl.vfx.combat.StrikeEffect
  com.megacrit.cardcrawl.vfx.scene.InteractableTorchEffect
  com.megacrit.cardcrawl.vfx.stance.StanceAuraEffect
  conspire.patches.BottledYoYoField$inBottledYoYo_110_Accessor
  conspire.potions.EchoDraught
  conspire.potions.TimeTravelPotion
  downfall.patches.MainMenuEvilMode$EvilMainMenuPanelButton
  downfall.patches.NoDiscardField$noDiscard_189_Accessor
  downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedEmerald_516_Accessor
  downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedRuby_957_Accessor
  downfall.patches.ui.campfire.AddBustKeyButtonPatches$KeyFields$bustedSapphire_799_Accessor
  gremlin.patches.eventpatches.GremlinEventFixPatch1$ranExtraCheck_330_Accessor
  gremlin.potions.GremlinPotion
  guardian.patches.BottledStasisPatch$inBottledAnomaly_587_Accessor
  guardian.patches.BottledStasisPatch$inBottledCode_550_Accessor
  guardian.patches.BottledStasisPatch$inBottledStasis_606_Accessor
  guardian.patches.BottledStasisPatch$inStasisEgg_273_Accessor
  guardian.patches.SelfStasisPatch$Fields$stasis_783_Accessor
  hermit.patches.relics.BottledPlaceholderField$inBottledPlaceholderField_433_Accessor
  hermit.potions.BlackBile
  hermit.potions.Eclipse
  hermit.potions.Tonic
  sneckomod.patches.BottledD8Patch$inD8_380_Accessor
  sneckomod.patches.UnknownExtraUiPatch$parentCard_990_Accessor
  theLatent.fields.EnergizedField$energized_696_Accessor
  theLatent.fields.WeightlessField$weightless_217_Accessor
  automaton.potions.BuildAFunctionPotion
  automaton.potions.BurnAndBuffPotion
  automaton.potions.CleanCodePotion
  automaton.potions.FreeFunctionsPotion
  basemod.abstracts.CustomMonster
  basemod.abstracts.CustomPlayer
  basemod.devcommands.deck.DeckAdd
  basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling$isScrolling_510_Accessor
  champ.potions.CounterstrikePotion
  champ.potions.OpenerPotion
  champ.potions.TechPotion
  champ.potions.UltimateStancePotion
  charbosses.monsters.MirrorImageSilent
  com.evacipated.cardcrawl.mod.hubris.cards.DuctTapeCard
  com.megacrit.cardcrawl.events.beyond.SensoryStone
  com.megacrit.cardcrawl.events.city.BackToBasics
  com.megacrit.cardcrawl.events.city.CursedTome
  com.megacrit.cardcrawl.events.city.Ghosts
  com.megacrit.cardcrawl.events.city.KnowingSkull
  com.megacrit.cardcrawl.events.city.Nest
  com.megacrit.cardcrawl.events.city.TheLibrary
  com.megacrit.cardcrawl.events.city.Vampires
  com.megacrit.cardcrawl.events.exordium.GoldenWing
  com.megacrit.cardcrawl.events.exordium.GoopPuddle
  com.megacrit.cardcrawl.events.exordium.LivingWall
  com.megacrit.cardcrawl.events.exordium.ScrapOoze
  com.megacrit.cardcrawl.events.exordium.ShiningLight
  com.megacrit.cardcrawl.events.shrines.AccursedBlacksmith
  com.megacrit.cardcrawl.events.shrines.Designer
  com.megacrit.cardcrawl.events.shrines.Duplicator
  com.megacrit.cardcrawl.events.shrines.FaceTrader
  com.megacrit.cardcrawl.events.shrines.FountainOfCurseRemoval
  com.megacrit.cardcrawl.events.shrines.GremlinMatchGame
  com.megacrit.cardcrawl.events.shrines.GremlinWheelGame
  com.megacrit.cardcrawl.events.shrines.NoteForYourself
  com.megacrit.cardcrawl.events.shrines.UpgradeShrine
  com.megacrit.cardcrawl.monsters.beyond.Darkling
  com.megacrit.cardcrawl.monsters.beyond.Deca
  com.megacrit.cardcrawl.monsters.beyond.Donu
  com.megacrit.cardcrawl.monsters.beyond.OrbWalker
  com.megacrit.cardcrawl.monsters.beyond.Reptomancer
  com.megacrit.cardcrawl.monsters.beyond.Transient
  com.megacrit.cardcrawl.monsters.city.BronzeAutomaton
  com.megacrit.cardcrawl.monsters.city.Healer
  com.megacrit.cardcrawl.monsters.city.SphericGuardian
  com.megacrit.cardcrawl.monsters.city.TheCollector
  com.megacrit.cardcrawl.monsters.exordium.AcidSlime_L
  com.megacrit.cardcrawl.monsters.exordium.AcidSlime_M
  com.megacrit.cardcrawl.monsters.exordium.AcidSlime_S
  com.megacrit.cardcrawl.monsters.exordium.GremlinFat
  com.megacrit.cardcrawl.monsters.exordium.GremlinThief
  com.megacrit.cardcrawl.monsters.exordium.GremlinTsundere
  com.megacrit.cardcrawl.monsters.exordium.GremlinWarrior
  com.megacrit.cardcrawl.monsters.exordium.GremlinWizard
  com.megacrit.cardcrawl.monsters.exordium.Sentry
  com.megacrit.cardcrawl.monsters.exordium.SlimeBoss
  com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_L
  com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_M
  com.megacrit.cardcrawl.monsters.exordium.SpikeSlime_S
  com.megacrit.cardcrawl.monsters.exordium.TheGuardian
  com.megacrit.cardcrawl.rooms.MonsterRoomBoss
  com.megacrit.cardcrawl.rooms.MonsterRoomElite
  downfall.monsters.NeowBossFinal
  downfall.potions.CursedFountainPotion
  gremlin.potions.NecromancyPotion
  gremlin.potions.SwapPotion
  gremlin.potions.WizPotion
  guardian.potions.AcceleratePotion
  guardian.potions.BlockOnCardUsePotion
  guardian.potions.DefensiveModePotion
  guardian.potions.StasisDiscoveryPotion
  slimebound.potions.SlimedPotion
  slimebound.potions.SlimyTonguePotion
  slimebound.potions.SpawnSlimePotion
  slimebound.potions.ThreeZeroPotion
  sneckomod.potions.CheatPotion
  sneckomod.potions.DiceRollPotion
  sneckomod.potions.MuddlingPotion
  sneckomod.potions.OffclassReductionPotion
  theHexaghost.potions.DoubleChargePotion
  theHexaghost.potions.EctoCoolerPotion
  theHexaghost.potions.InfernoChargePotion
  theHexaghost.potions.SoulburnPotion
  automaton.cards.FunctionCard
  charbosses.bosses.Silent.CharBossSilent
  com.evacipated.cardcrawl.mod.hubris.monsters.GrandMystic
Done.
759 modified classes (4260KB)
Busting enums...
com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$CurScreen
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$1
1 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.MenuButton$ClickResult
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton$1
1 switch statement(s)

com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass
  com.megacrit.cardcrawl.cutscenes.Cutscene$1
  com.megacrit.cardcrawl.helpers.PotionHelper$1
  com.megacrit.cardcrawl.helpers.RelicLibrary$1
  com.megacrit.cardcrawl.integrations.steam.SteamIntegration$1
  com.megacrit.cardcrawl.screens.MasterDeckSortHeader$1
  com.megacrit.cardcrawl.screens.VictoryScreen$1
  com.megacrit.cardcrawl.screens.leaderboards.FilterButton$1
  com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen$1
  com.megacrit.cardcrawl.unlock.UnlockTracker$1
9 switch statement(s)

com.megacrit.cardcrawl.cards.AbstractCard$CardTags
0 switch statement(s)

com.megacrit.cardcrawl.powers.AbstractPower$PowerType
0 switch statement(s)

com.megacrit.cardcrawl.core.AbstractCreature$CreatureAnimation
  com.megacrit.cardcrawl.core.AbstractCreature$1
1 switch statement(s)
2022-04-19 22:06:56,206 Thread-5 ERROR appenders contains an invalid element or attribute "Sentry"
2022-04-19 22:06:56,210 Thread-5 ERROR Unable to locate appender "Sentry" for logger config "root"

com.megacrit.cardcrawl.cards.AbstractCard$CardColor
  com.megacrit.cardcrawl.cards.AbstractCard$1
  com.megacrit.cardcrawl.dungeons.AbstractDungeon$1
  com.megacrit.cardcrawl.helpers.CardLibrary$1
  com.megacrit.cardcrawl.screens.SingleCardViewPopup$1
  com.megacrit.cardcrawl.screens.runHistory.TinyCard$1
  com.megacrit.cardcrawl.vfx.cardManip.PurgeCardEffect$1
6 switch statement(s)

com.megacrit.cardcrawl.rewards.RewardItem$RewardType
  com.megacrit.cardcrawl.rewards.RewardItem$1
  com.megacrit.cardcrawl.saveAndContinue.SaveFile$1
  com.megacrit.cardcrawl.screens.CombatRewardScreen$1
3 switch statement(s)

com.megacrit.cardcrawl.actions.AbstractGameAction$AttackEffect
  com.megacrit.cardcrawl.vfx.DamageHeartEffect$1
  com.megacrit.cardcrawl.vfx.combat.FlashAtkImgEffect$1
2 switch statement(s)

com.megacrit.cardcrawl.cards.AbstractCard$CardTarget
  com.megacrit.cardcrawl.actions.watcher.UnravelingAction$1
  com.megacrit.cardcrawl.characters.AbstractPlayer$1
2 switch statement(s)

com.megacrit.cardcrawl.helpers.CardLibrary$LibraryType
  com.megacrit.cardcrawl.helpers.CardLibrary$1
1 switch statement(s)

com.megacrit.cardcrawl.neow.NeowReward$NeowRewardType
  com.megacrit.cardcrawl.neow.NeowReward$1
1 switch statement(s)

com.megacrit.cardcrawl.neow.NeowReward$NeowRewardDrawback
  com.megacrit.cardcrawl.neow.NeowReward$1
1 switch statement(s)

com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen
  com.megacrit.cardcrawl.dungeons.AbstractDungeon$1
1 switch statement(s)

com.megacrit.cardcrawl.cards.DamageInfo$DamageType
0 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen$PanelScreen
  com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen$1
1 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton$PanelClickResult
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuPanelButton$1
1 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab
  com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen$1
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$1
2 switch statement(s)

com.megacrit.cardcrawl.monsters.AbstractMonster$Intent
  com.megacrit.cardcrawl.monsters.AbstractMonster$1
1 switch statement(s)
Done.

Setting isModded = true...Done.

Adding ModTheSpire to version...Done.

Initializing mods...
 - BaseMod
   - basemod.BaseMod
libgdx version 1.9.5
05:07:06.924 INFO basemod.BaseMod> initializeGson
05:07:06.953 INFO basemod.BaseMod> initializeTypeMaps
05:07:06.955 INFO basemod.BaseMod> Registered MonsterStrings
05:07:06.959 INFO basemod.BaseMod> Registered PowerStrings
05:07:06.959 INFO basemod.BaseMod> Registered CardStrings
05:07:06.963 INFO basemod.BaseMod> Registered RelicStrings
05:07:06.964 INFO basemod.BaseMod> Registered EventStrings
05:07:06.966 INFO basemod.BaseMod> Registered PotionStrings
05:07:06.968 INFO basemod.BaseMod> Registered CreditStrings
05:07:06.970 INFO basemod.BaseMod> Registered TutorialStrings
05:07:06.971 INFO basemod.BaseMod> Registered KeywordStrings
05:07:06.997 INFO basemod.BaseMod> Registered ScoreBonusStrings
05:07:06.998 INFO basemod.BaseMod> Registered CharacterStrings
05:07:07.002 INFO basemod.BaseMod> Registered UIStrings
05:07:07.005 INFO basemod.BaseMod> Registered OrbStrings
05:07:07.011 INFO basemod.BaseMod> Registered StanceStrings
05:07:07.015 INFO basemod.BaseMod> Registered RunModStrings
05:07:07.018 INFO basemod.BaseMod> Registered BlightStrings
05:07:07.021 INFO basemod.BaseMod> Registered AchievementStrings
05:07:07.023 INFO basemod.BaseMod> initializePowerMap
05:07:07.751 INFO basemod.BaseMod> initializeUnderscorePowerIDs
   - 866ms
 - StSLib
   - com.evacipated.cardcrawl.mod.stslib.StSLib
   - 1ms
 - Aspiration
   - aspiration.Aspiration
05:07:07.819 INFO aspiration.Aspiration> Detected Mod: Conspire
05:07:07.819 INFO aspiration.Aspiration> Detected Mod: Hubris
   - 34ms
 - Better Altar
   - betterAltar.BetterAltar
05:07:07.829 INFO betterAltar.BetterAltar> Adding mod settings
   - 7ms
 - Better Lab
   - betterLab.BetterLab
05:07:07.839 INFO betterLab.BetterLab> Adding mod settings
   - 8ms
 - Better Match
   - betterMatch.BetterMatch
05:07:07.853 INFO betterMatch.BetterMatch> Adding mod settings
   - 6ms
 - Better Note
   - betterNote.BetterNote
05:07:07.866 INFO betterNote.BetterNote> Adding mod settings
   - 3ms
 - Better Sensory Stone
   - betterStone.BetterStone
05:07:07.876 INFO betterStone.BetterStone> Detected Better Note
05:07:07.879 INFO betterStone.BetterStone> Adding mod settings
   - 8ms
 - Better Skull
   - betterSkull.BetterSkull
05:07:07.887 INFO betterSkull.BetterSkull> Adding mod settings
   - 3ms
 - Better Third Choice
   - betterThird.BetterThird
05:07:07.901 INFO betterThird.BetterThird> Adding mod settings
   - 6ms
 - Better Vampires
   - Better_Vampires.Better_Vampires
   - 3ms
 - Colored Map
   - coloredmap.ColoredMap
   - 9ms
 - Colored Powertips
   - coloredPowertips.ColoredPowertips
   - 3ms
 - Conspire
   - conspire.Conspire
   - 32ms
 - Hubris
   - com.evacipated.cardcrawl.mod.hubris.HubrisMod
   - 36ms
 - Relic Stats
   - relicstats.SlayTheRelicsIntegration
   - 2ms
   - relicstats.RelicStats
   - 4ms
 - Spicy Shops
   - SpicyShops.SpicyShops
   - 3ms
 - Downfall
   - sneckomod.SneckoMod
   - 0ms
   - theHexaghost.HexaMod
   - 0ms
   - gremlin.GremlinMod
05:07:08.037 INFO gremlin.GremlinMod> Loading GremlinMod.
   - 3ms
   - slimebound.SlimeboundMod
05:07:08.041 INFO slimebound.SlimeboundMod> SlimeboundMod | Loading Config Preferences...
   - 5ms
   - expansioncontent.expansionContentMod
   - 0ms
   - automaton.AutomatonMod
   - 0ms
   - downfall.downfallMod
   - 4ms
   - hermit.HermitMod
Subscribe to BaseMod hooks
Done subscribing
Creating the color HERMIT_YELLOW
Done creating the color
Adding mod settings
   - 19ms
   - champ.ChampMod
   - 0ms
   - guardian.GuardianMod
   - 0ms
   - reskinContent.reskinContent
   - 31ms
 - The Latent
   - theLatent.LatentMod
   - 3ms
Done.

Starting game...
05:07:08.132 INFO desktop.DesktopLauncher> time: 1650431228132
05:07:08.133 INFO desktop.DesktopLauncher> version: 2022-03-07
05:07:08.133 INFO desktop.DesktopLauncher> libgdx:  1.9.5
05:07:08.135 INFO desktop.DesktopLauncher> default_locale: en_US
05:07:08.135 INFO desktop.DesktopLauncher> default_charset: windows-1252
05:07:08.137 INFO desktop.DesktopLauncher> default_encoding: Cp1252
05:07:08.138 INFO desktop.DesktopLauncher> java_version: 1.8.0_144
05:07:08.139 INFO desktop.DesktopLauncher> os_arch: amd64
05:07:08.142 INFO desktop.DesktopLauncher> os_name: Windows 10
05:07:08.145 INFO desktop.DesktopLauncher> os_version: 10.0
05:07:08.149 INFO core.SystemStats> MEMORY STATS:
Free Memory: 498Mb
Max Memory: 3,616Mb
Allocated Memory: 1,057Mb
Unallocated Memory: 2,559Mb
Total Free Memory: 3,057Mb
Used Memory: 558Mb

05:07:08.152 INFO core.SystemStats> DISK STATS:
Total Space: 243,551Mb
Usable Space: 22,616Mb
Free Space: 22,616Mb

05:07:08.157 INFO core.DisplayConfig> Reading info.displayconfig
05:07:08.167 INFO core.DisplayConfig> DisplayConfig successfully read.
05:07:08.168 INFO desktop.DesktopLauncher> [WINDOWED_MODE]
05:07:08.170 INFO desktop.DesktopLauncher> Settings successfully loaded
05:07:08.173 INFO desktop.DesktopLauncher> Launching application...
05:07:08.793 INFO ststwitch.TwitchConfig> The 'twitchconfig.txt' already exists, not overwriting it.
05:07:08.797 INFO core.CardCrawlGame> DistributorPlatform=steam
05:07:08.798 INFO core.CardCrawlGame> isModded=true
05:07:08.800 INFO core.CardCrawlGame> isBeta=false
05:07:08.971 INFO steam.SteamIntegration> [SUCCESS] Steam API initialized successfully.
05:07:08.983 INFO steam.SteamIntegration> BUILD ID: 8335972
05:07:08.983 INFO steam.SteamIntegration> CURRENT LANG: english
05:07:08.987 INFO steam.SteamIntegration> ACCOUNT ID: 274986320
05:07:08.989 INFO steam.SteamIntegration> requestGlobalStats
05:07:08.992 INFO steam.SteamTicker> Steam Ticker initialized.
05:07:09.009 INFO core.CardCrawlGame> No migration
05:07:09.022 INFO core.Settings> Initializing display settings...
05:07:09.023 INFO core.DisplayConfig> Reading info.displayconfig
05:07:09.027 INFO core.DisplayConfig> DisplayConfig successfully read.
05:07:09.028 INFO core.Settings> Initializing sound settings...
05:07:09.031 INFO core.Settings> Initializing game settings...
05:07:09.133 INFO localization.LocalizedStrings> Loc Strings load time: 84ms
05:07:09.134 INFO basemod.BaseMod> begin editing localization strings
05:07:09.143 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.149 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.152 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.155 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.158 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.162 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.164 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.169 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.173 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.175 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.182 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.190 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.224 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.229 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.KeywordStrings
05:07:09.232 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.BlightStrings
05:07:09.237 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.241 INFO steam.SSCallback> 1Bloop: 646570
05:07:09.242 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.247 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.248 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.251 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.253 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.258 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.259 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.262 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.267 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.268 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.271 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.274 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.279 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.283 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.285 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.288 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.291 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.296 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.297 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.299 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.302 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.305 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.308 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.311 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.313 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.316 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.320 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.321 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.324 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.329 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.330 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.333 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.335 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.338 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.341 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.345 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.346 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.349 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.352 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.354 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.361 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.364 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.368 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.370 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.380 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.381 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.384 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.387 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.388 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.392 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.395 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.398 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.401 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.407 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.408 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.411 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.413 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.416 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.419 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.422 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.425 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.430 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.447 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.449 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.453 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.455 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.460 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.465 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.468 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.469 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.472 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.479 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.482 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.486 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.489 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.492 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.495 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.497 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.501 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.506 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.510 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.511 INFO gremlin.GremlinMod> Loading GremlinMod Strings.
05:07:09.515 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.517 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.519 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.522 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.528 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.530 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.533 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.535 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.538 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.540 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.543 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.545 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.548 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.550 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.552 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.555 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.558 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.561 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.563 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.565 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.567 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.569 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.572 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.574 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.577 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.579 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.581 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.EventStrings
05:07:09.583 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.587 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.588 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.591 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.594 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.597 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.599 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.602 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.605 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.607 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.609 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.612 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.614 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.617 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.619 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.622 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.625 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.627 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.630 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.632 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.MonsterStrings
05:07:09.635 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.638 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.641 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.643 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.646 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.648 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.652 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.654 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.657 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.659 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PotionStrings
05:07:09.662 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.665 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.668 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.673 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.677 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.679 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.681 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.684 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.687 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.690 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.692 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.695 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.698 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.701 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.703 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.706 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.708 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.711 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.714 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.717 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.719 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.722 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.724 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.727 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.729 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.731 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.733 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.735 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.737 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.738 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.OrbStrings
05:07:09.740 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.741 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.744 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.745 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.748 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.750 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.753 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.755 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.758 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.759 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.761 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.763 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.765 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.768 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.770 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.772 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.774 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.777 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.779 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.781 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.783 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.786 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.788 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.790 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.792 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.794 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.795 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.797 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.799 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.801 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
05:07:09.803 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.TutorialStrings
05:07:09.808 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.812 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
05:07:09.814 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RelicStrings
05:07:09.817 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CharacterStrings
05:07:09.819 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.PowerStrings
05:07:09.822 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.UIStrings
05:07:09.825 INFO core.CardCrawlGame> Exception occurred in CardCrawlGame create method!
05:07:09.830 ERROR core.CardCrawlGame> Exception caught
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected BEGIN_ARRAY but was STRING at line 13 column 14 path $..TEXT
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:221) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(TypeAdapterRuntimeTypeWrapper.java:40) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:187) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:145) ~[desktop-1.0.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:814) ~[desktop-1.0.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:779) ~[desktop-1.0.jar:?]
	at com.google.gson.Gson.fromJson(Gson.java:728) ~[desktop-1.0.jar:?]
	at basemod.BaseMod.loadJsonStrings(BaseMod.java:790) ~[?:?]
	at basemod.BaseMod.loadCustomStringsFile(BaseMod.java:811) ~[?:?]
	at theLatent.LatentMod.receiveEditStrings(LatentMod.java:153) ~[TheLatent.jar:?]
	at basemod.BaseMod.publishEditStrings(BaseMod.java:2515) ~[?:?]
	at basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.EditStrings.Postfix(EditStrings.java:9) ~[BaseMod.jar:?]
	at com.megacrit.cardcrawl.localization.LocalizedStrings.<init>(LocalizedStrings.java:228) ~[?:?]
	at com.megacrit.cardcrawl.core.CardCrawlGame.create(CardCrawlGame.java:260) [?:?]
	at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:149) [?:?]
	at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:126) [?:?]
Caused by: java.lang.IllegalStateException: Expected BEGIN_ARRAY but was STRING at line 13 column 14 path $..TEXT
	at com.google.gson.stream.JsonReader.beginArray(JsonReader.java:350) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.ArrayTypeAdapter.read(ArrayTypeAdapter.java:70) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:117) ~[desktop-1.0.jar:?]
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:217) ~[desktop-1.0.jar:?]
	... 15 more
05:07:09.846 INFO basemod.BaseMod> publishPostInitialize

Exception in thread "LWJGL Application" java.lang.NullPointerException
	at basemod.ModToggleButton.<init>(ModToggleButton.java:39)
	at basemod.ModLabeledToggleButton.<init>(ModLabeledToggleButton.java:21)
	at basemod.BaseModInit.receivePostInitialize(BaseModInit.java:70)
	at basemod.BaseMod.publishPostInitialize(BaseMod.java:2251)
	at basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PostInitializeHook.Postfix(PostInitializeHook.java:9)
	at com.megacrit.cardcrawl.core.CardCrawlGame.create(CardCrawlGame.java:307)
	at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:149)
	at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:126)